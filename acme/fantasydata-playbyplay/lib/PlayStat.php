<?php
/**
 * PlayStat
 *
 * PHP version 5
 *
 * @category Class
 * @package  Acme\FantasyDataPlayByPlay
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NFL v3 Play-by-Play
 *
 * NFL play-by-play API.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Acme\FantasyDataPlayByPlay;

use \ArrayAccess;
use \Acme\FantasyDataPlayByPlay\ObjectSerializer;

/**
 * PlayStat Class Doc Comment
 *
 * @category Class
 * @package     Acme\FantasyDataPlayByPlay
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PlayStat implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PlayStat';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'play_stat_id' => 'int',
        'play_id' => 'int',
        'sequence' => 'int',
        'player_id' => 'int',
        'name' => 'string',
        'team' => 'string',
        'opponent' => 'string',
        'home_or_away' => 'string',
        'direction' => 'string',
        'updated' => 'string',
        'created' => 'string',
        'passing_attempts' => 'int',
        'passing_completions' => 'int',
        'passing_yards' => 'int',
        'passing_touchdowns' => 'int',
        'passing_interceptions' => 'int',
        'passing_sacks' => 'int',
        'passing_sack_yards' => 'int',
        'rushing_attempts' => 'int',
        'rushing_yards' => 'int',
        'rushing_touchdowns' => 'int',
        'receiving_targets' => 'int',
        'receptions' => 'int',
        'receiving_yards' => 'int',
        'receiving_touchdowns' => 'int',
        'fumbles' => 'int',
        'fumbles_lost' => 'int',
        'two_point_conversion_attempts' => 'int',
        'two_point_conversion_passes' => 'int',
        'two_point_conversion_runs' => 'int',
        'two_point_conversion_receptions' => 'int',
        'two_point_conversion_returns' => 'int',
        'solo_tackles' => 'int',
        'assisted_tackles' => 'int',
        'tackles_for_loss' => 'int',
        'sacks' => 'float',
        'sack_yards' => 'float',
        'passes_defended' => 'int',
        'safeties' => 'int',
        'fumbles_forced' => 'int',
        'fumbles_recovered' => 'int',
        'fumble_return_yards' => 'int',
        'fumble_return_touchdowns' => 'int',
        'interceptions' => 'int',
        'interception_return_yards' => 'int',
        'interception_return_touchdowns' => 'int',
        'punt_returns' => 'int',
        'punt_return_yards' => 'int',
        'punt_return_touchdowns' => 'int',
        'kick_returns' => 'int',
        'kick_return_yards' => 'int',
        'kick_return_touchdowns' => 'int',
        'blocked_kicks' => 'int',
        'blocked_kick_returns' => 'int',
        'blocked_kick_return_yards' => 'int',
        'blocked_kick_return_touchdowns' => 'int',
        'field_goal_returns' => 'int',
        'field_goal_return_yards' => 'int',
        'field_goal_return_touchdowns' => 'int',
        'kickoffs' => 'int',
        'kickoff_yards' => 'int',
        'kickoff_touchbacks' => 'int',
        'punts' => 'int',
        'punt_yards' => 'int',
        'punt_touchbacks' => 'int',
        'punts_had_blocked' => 'int',
        'field_goals_attempted' => 'int',
        'field_goals_made' => 'int',
        'field_goals_yards' => 'int',
        'field_goals_had_blocked' => 'int',
        'extra_points_attempted' => 'int',
        'extra_points_made' => 'int',
        'extra_points_had_blocked' => 'int',
        'penalties' => 'int',
        'penalty_yards' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'play_stat_id' => null,
        'play_id' => null,
        'sequence' => null,
        'player_id' => null,
        'name' => null,
        'team' => null,
        'opponent' => null,
        'home_or_away' => null,
        'direction' => null,
        'updated' => null,
        'created' => null,
        'passing_attempts' => null,
        'passing_completions' => null,
        'passing_yards' => null,
        'passing_touchdowns' => null,
        'passing_interceptions' => null,
        'passing_sacks' => null,
        'passing_sack_yards' => null,
        'rushing_attempts' => null,
        'rushing_yards' => null,
        'rushing_touchdowns' => null,
        'receiving_targets' => null,
        'receptions' => null,
        'receiving_yards' => null,
        'receiving_touchdowns' => null,
        'fumbles' => null,
        'fumbles_lost' => null,
        'two_point_conversion_attempts' => null,
        'two_point_conversion_passes' => null,
        'two_point_conversion_runs' => null,
        'two_point_conversion_receptions' => null,
        'two_point_conversion_returns' => null,
        'solo_tackles' => null,
        'assisted_tackles' => null,
        'tackles_for_loss' => null,
        'sacks' => null,
        'sack_yards' => null,
        'passes_defended' => null,
        'safeties' => null,
        'fumbles_forced' => null,
        'fumbles_recovered' => null,
        'fumble_return_yards' => null,
        'fumble_return_touchdowns' => null,
        'interceptions' => null,
        'interception_return_yards' => null,
        'interception_return_touchdowns' => null,
        'punt_returns' => null,
        'punt_return_yards' => null,
        'punt_return_touchdowns' => null,
        'kick_returns' => null,
        'kick_return_yards' => null,
        'kick_return_touchdowns' => null,
        'blocked_kicks' => null,
        'blocked_kick_returns' => null,
        'blocked_kick_return_yards' => null,
        'blocked_kick_return_touchdowns' => null,
        'field_goal_returns' => null,
        'field_goal_return_yards' => null,
        'field_goal_return_touchdowns' => null,
        'kickoffs' => null,
        'kickoff_yards' => null,
        'kickoff_touchbacks' => null,
        'punts' => null,
        'punt_yards' => null,
        'punt_touchbacks' => null,
        'punts_had_blocked' => null,
        'field_goals_attempted' => null,
        'field_goals_made' => null,
        'field_goals_yards' => null,
        'field_goals_had_blocked' => null,
        'extra_points_attempted' => null,
        'extra_points_made' => null,
        'extra_points_had_blocked' => null,
        'penalties' => null,
        'penalty_yards' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'play_stat_id' => 'PlayStatID',
        'play_id' => 'PlayID',
        'sequence' => 'Sequence',
        'player_id' => 'PlayerID',
        'name' => 'Name',
        'team' => 'Team',
        'opponent' => 'Opponent',
        'home_or_away' => 'HomeOrAway',
        'direction' => 'Direction',
        'updated' => 'Updated',
        'created' => 'Created',
        'passing_attempts' => 'PassingAttempts',
        'passing_completions' => 'PassingCompletions',
        'passing_yards' => 'PassingYards',
        'passing_touchdowns' => 'PassingTouchdowns',
        'passing_interceptions' => 'PassingInterceptions',
        'passing_sacks' => 'PassingSacks',
        'passing_sack_yards' => 'PassingSackYards',
        'rushing_attempts' => 'RushingAttempts',
        'rushing_yards' => 'RushingYards',
        'rushing_touchdowns' => 'RushingTouchdowns',
        'receiving_targets' => 'ReceivingTargets',
        'receptions' => 'Receptions',
        'receiving_yards' => 'ReceivingYards',
        'receiving_touchdowns' => 'ReceivingTouchdowns',
        'fumbles' => 'Fumbles',
        'fumbles_lost' => 'FumblesLost',
        'two_point_conversion_attempts' => 'TwoPointConversionAttempts',
        'two_point_conversion_passes' => 'TwoPointConversionPasses',
        'two_point_conversion_runs' => 'TwoPointConversionRuns',
        'two_point_conversion_receptions' => 'TwoPointConversionReceptions',
        'two_point_conversion_returns' => 'TwoPointConversionReturns',
        'solo_tackles' => 'SoloTackles',
        'assisted_tackles' => 'AssistedTackles',
        'tackles_for_loss' => 'TacklesForLoss',
        'sacks' => 'Sacks',
        'sack_yards' => 'SackYards',
        'passes_defended' => 'PassesDefended',
        'safeties' => 'Safeties',
        'fumbles_forced' => 'FumblesForced',
        'fumbles_recovered' => 'FumblesRecovered',
        'fumble_return_yards' => 'FumbleReturnYards',
        'fumble_return_touchdowns' => 'FumbleReturnTouchdowns',
        'interceptions' => 'Interceptions',
        'interception_return_yards' => 'InterceptionReturnYards',
        'interception_return_touchdowns' => 'InterceptionReturnTouchdowns',
        'punt_returns' => 'PuntReturns',
        'punt_return_yards' => 'PuntReturnYards',
        'punt_return_touchdowns' => 'PuntReturnTouchdowns',
        'kick_returns' => 'KickReturns',
        'kick_return_yards' => 'KickReturnYards',
        'kick_return_touchdowns' => 'KickReturnTouchdowns',
        'blocked_kicks' => 'BlockedKicks',
        'blocked_kick_returns' => 'BlockedKickReturns',
        'blocked_kick_return_yards' => 'BlockedKickReturnYards',
        'blocked_kick_return_touchdowns' => 'BlockedKickReturnTouchdowns',
        'field_goal_returns' => 'FieldGoalReturns',
        'field_goal_return_yards' => 'FieldGoalReturnYards',
        'field_goal_return_touchdowns' => 'FieldGoalReturnTouchdowns',
        'kickoffs' => 'Kickoffs',
        'kickoff_yards' => 'KickoffYards',
        'kickoff_touchbacks' => 'KickoffTouchbacks',
        'punts' => 'Punts',
        'punt_yards' => 'PuntYards',
        'punt_touchbacks' => 'PuntTouchbacks',
        'punts_had_blocked' => 'PuntsHadBlocked',
        'field_goals_attempted' => 'FieldGoalsAttempted',
        'field_goals_made' => 'FieldGoalsMade',
        'field_goals_yards' => 'FieldGoalsYards',
        'field_goals_had_blocked' => 'FieldGoalsHadBlocked',
        'extra_points_attempted' => 'ExtraPointsAttempted',
        'extra_points_made' => 'ExtraPointsMade',
        'extra_points_had_blocked' => 'ExtraPointsHadBlocked',
        'penalties' => 'Penalties',
        'penalty_yards' => 'PenaltyYards'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'play_stat_id' => 'setPlayStatId',
        'play_id' => 'setPlayId',
        'sequence' => 'setSequence',
        'player_id' => 'setPlayerId',
        'name' => 'setName',
        'team' => 'setTeam',
        'opponent' => 'setOpponent',
        'home_or_away' => 'setHomeOrAway',
        'direction' => 'setDirection',
        'updated' => 'setUpdated',
        'created' => 'setCreated',
        'passing_attempts' => 'setPassingAttempts',
        'passing_completions' => 'setPassingCompletions',
        'passing_yards' => 'setPassingYards',
        'passing_touchdowns' => 'setPassingTouchdowns',
        'passing_interceptions' => 'setPassingInterceptions',
        'passing_sacks' => 'setPassingSacks',
        'passing_sack_yards' => 'setPassingSackYards',
        'rushing_attempts' => 'setRushingAttempts',
        'rushing_yards' => 'setRushingYards',
        'rushing_touchdowns' => 'setRushingTouchdowns',
        'receiving_targets' => 'setReceivingTargets',
        'receptions' => 'setReceptions',
        'receiving_yards' => 'setReceivingYards',
        'receiving_touchdowns' => 'setReceivingTouchdowns',
        'fumbles' => 'setFumbles',
        'fumbles_lost' => 'setFumblesLost',
        'two_point_conversion_attempts' => 'setTwoPointConversionAttempts',
        'two_point_conversion_passes' => 'setTwoPointConversionPasses',
        'two_point_conversion_runs' => 'setTwoPointConversionRuns',
        'two_point_conversion_receptions' => 'setTwoPointConversionReceptions',
        'two_point_conversion_returns' => 'setTwoPointConversionReturns',
        'solo_tackles' => 'setSoloTackles',
        'assisted_tackles' => 'setAssistedTackles',
        'tackles_for_loss' => 'setTacklesForLoss',
        'sacks' => 'setSacks',
        'sack_yards' => 'setSackYards',
        'passes_defended' => 'setPassesDefended',
        'safeties' => 'setSafeties',
        'fumbles_forced' => 'setFumblesForced',
        'fumbles_recovered' => 'setFumblesRecovered',
        'fumble_return_yards' => 'setFumbleReturnYards',
        'fumble_return_touchdowns' => 'setFumbleReturnTouchdowns',
        'interceptions' => 'setInterceptions',
        'interception_return_yards' => 'setInterceptionReturnYards',
        'interception_return_touchdowns' => 'setInterceptionReturnTouchdowns',
        'punt_returns' => 'setPuntReturns',
        'punt_return_yards' => 'setPuntReturnYards',
        'punt_return_touchdowns' => 'setPuntReturnTouchdowns',
        'kick_returns' => 'setKickReturns',
        'kick_return_yards' => 'setKickReturnYards',
        'kick_return_touchdowns' => 'setKickReturnTouchdowns',
        'blocked_kicks' => 'setBlockedKicks',
        'blocked_kick_returns' => 'setBlockedKickReturns',
        'blocked_kick_return_yards' => 'setBlockedKickReturnYards',
        'blocked_kick_return_touchdowns' => 'setBlockedKickReturnTouchdowns',
        'field_goal_returns' => 'setFieldGoalReturns',
        'field_goal_return_yards' => 'setFieldGoalReturnYards',
        'field_goal_return_touchdowns' => 'setFieldGoalReturnTouchdowns',
        'kickoffs' => 'setKickoffs',
        'kickoff_yards' => 'setKickoffYards',
        'kickoff_touchbacks' => 'setKickoffTouchbacks',
        'punts' => 'setPunts',
        'punt_yards' => 'setPuntYards',
        'punt_touchbacks' => 'setPuntTouchbacks',
        'punts_had_blocked' => 'setPuntsHadBlocked',
        'field_goals_attempted' => 'setFieldGoalsAttempted',
        'field_goals_made' => 'setFieldGoalsMade',
        'field_goals_yards' => 'setFieldGoalsYards',
        'field_goals_had_blocked' => 'setFieldGoalsHadBlocked',
        'extra_points_attempted' => 'setExtraPointsAttempted',
        'extra_points_made' => 'setExtraPointsMade',
        'extra_points_had_blocked' => 'setExtraPointsHadBlocked',
        'penalties' => 'setPenalties',
        'penalty_yards' => 'setPenaltyYards'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'play_stat_id' => 'getPlayStatId',
        'play_id' => 'getPlayId',
        'sequence' => 'getSequence',
        'player_id' => 'getPlayerId',
        'name' => 'getName',
        'team' => 'getTeam',
        'opponent' => 'getOpponent',
        'home_or_away' => 'getHomeOrAway',
        'direction' => 'getDirection',
        'updated' => 'getUpdated',
        'created' => 'getCreated',
        'passing_attempts' => 'getPassingAttempts',
        'passing_completions' => 'getPassingCompletions',
        'passing_yards' => 'getPassingYards',
        'passing_touchdowns' => 'getPassingTouchdowns',
        'passing_interceptions' => 'getPassingInterceptions',
        'passing_sacks' => 'getPassingSacks',
        'passing_sack_yards' => 'getPassingSackYards',
        'rushing_attempts' => 'getRushingAttempts',
        'rushing_yards' => 'getRushingYards',
        'rushing_touchdowns' => 'getRushingTouchdowns',
        'receiving_targets' => 'getReceivingTargets',
        'receptions' => 'getReceptions',
        'receiving_yards' => 'getReceivingYards',
        'receiving_touchdowns' => 'getReceivingTouchdowns',
        'fumbles' => 'getFumbles',
        'fumbles_lost' => 'getFumblesLost',
        'two_point_conversion_attempts' => 'getTwoPointConversionAttempts',
        'two_point_conversion_passes' => 'getTwoPointConversionPasses',
        'two_point_conversion_runs' => 'getTwoPointConversionRuns',
        'two_point_conversion_receptions' => 'getTwoPointConversionReceptions',
        'two_point_conversion_returns' => 'getTwoPointConversionReturns',
        'solo_tackles' => 'getSoloTackles',
        'assisted_tackles' => 'getAssistedTackles',
        'tackles_for_loss' => 'getTacklesForLoss',
        'sacks' => 'getSacks',
        'sack_yards' => 'getSackYards',
        'passes_defended' => 'getPassesDefended',
        'safeties' => 'getSafeties',
        'fumbles_forced' => 'getFumblesForced',
        'fumbles_recovered' => 'getFumblesRecovered',
        'fumble_return_yards' => 'getFumbleReturnYards',
        'fumble_return_touchdowns' => 'getFumbleReturnTouchdowns',
        'interceptions' => 'getInterceptions',
        'interception_return_yards' => 'getInterceptionReturnYards',
        'interception_return_touchdowns' => 'getInterceptionReturnTouchdowns',
        'punt_returns' => 'getPuntReturns',
        'punt_return_yards' => 'getPuntReturnYards',
        'punt_return_touchdowns' => 'getPuntReturnTouchdowns',
        'kick_returns' => 'getKickReturns',
        'kick_return_yards' => 'getKickReturnYards',
        'kick_return_touchdowns' => 'getKickReturnTouchdowns',
        'blocked_kicks' => 'getBlockedKicks',
        'blocked_kick_returns' => 'getBlockedKickReturns',
        'blocked_kick_return_yards' => 'getBlockedKickReturnYards',
        'blocked_kick_return_touchdowns' => 'getBlockedKickReturnTouchdowns',
        'field_goal_returns' => 'getFieldGoalReturns',
        'field_goal_return_yards' => 'getFieldGoalReturnYards',
        'field_goal_return_touchdowns' => 'getFieldGoalReturnTouchdowns',
        'kickoffs' => 'getKickoffs',
        'kickoff_yards' => 'getKickoffYards',
        'kickoff_touchbacks' => 'getKickoffTouchbacks',
        'punts' => 'getPunts',
        'punt_yards' => 'getPuntYards',
        'punt_touchbacks' => 'getPuntTouchbacks',
        'punts_had_blocked' => 'getPuntsHadBlocked',
        'field_goals_attempted' => 'getFieldGoalsAttempted',
        'field_goals_made' => 'getFieldGoalsMade',
        'field_goals_yards' => 'getFieldGoalsYards',
        'field_goals_had_blocked' => 'getFieldGoalsHadBlocked',
        'extra_points_attempted' => 'getExtraPointsAttempted',
        'extra_points_made' => 'getExtraPointsMade',
        'extra_points_had_blocked' => 'getExtraPointsHadBlocked',
        'penalties' => 'getPenalties',
        'penalty_yards' => 'getPenaltyYards'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['play_stat_id'] = isset($data['play_stat_id']) ? $data['play_stat_id'] : null;
        $this->container['play_id'] = isset($data['play_id']) ? $data['play_id'] : null;
        $this->container['sequence'] = isset($data['sequence']) ? $data['sequence'] : null;
        $this->container['player_id'] = isset($data['player_id']) ? $data['player_id'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['team'] = isset($data['team']) ? $data['team'] : null;
        $this->container['opponent'] = isset($data['opponent']) ? $data['opponent'] : null;
        $this->container['home_or_away'] = isset($data['home_or_away']) ? $data['home_or_away'] : null;
        $this->container['direction'] = isset($data['direction']) ? $data['direction'] : null;
        $this->container['updated'] = isset($data['updated']) ? $data['updated'] : null;
        $this->container['created'] = isset($data['created']) ? $data['created'] : null;
        $this->container['passing_attempts'] = isset($data['passing_attempts']) ? $data['passing_attempts'] : null;
        $this->container['passing_completions'] = isset($data['passing_completions']) ? $data['passing_completions'] : null;
        $this->container['passing_yards'] = isset($data['passing_yards']) ? $data['passing_yards'] : null;
        $this->container['passing_touchdowns'] = isset($data['passing_touchdowns']) ? $data['passing_touchdowns'] : null;
        $this->container['passing_interceptions'] = isset($data['passing_interceptions']) ? $data['passing_interceptions'] : null;
        $this->container['passing_sacks'] = isset($data['passing_sacks']) ? $data['passing_sacks'] : null;
        $this->container['passing_sack_yards'] = isset($data['passing_sack_yards']) ? $data['passing_sack_yards'] : null;
        $this->container['rushing_attempts'] = isset($data['rushing_attempts']) ? $data['rushing_attempts'] : null;
        $this->container['rushing_yards'] = isset($data['rushing_yards']) ? $data['rushing_yards'] : null;
        $this->container['rushing_touchdowns'] = isset($data['rushing_touchdowns']) ? $data['rushing_touchdowns'] : null;
        $this->container['receiving_targets'] = isset($data['receiving_targets']) ? $data['receiving_targets'] : null;
        $this->container['receptions'] = isset($data['receptions']) ? $data['receptions'] : null;
        $this->container['receiving_yards'] = isset($data['receiving_yards']) ? $data['receiving_yards'] : null;
        $this->container['receiving_touchdowns'] = isset($data['receiving_touchdowns']) ? $data['receiving_touchdowns'] : null;
        $this->container['fumbles'] = isset($data['fumbles']) ? $data['fumbles'] : null;
        $this->container['fumbles_lost'] = isset($data['fumbles_lost']) ? $data['fumbles_lost'] : null;
        $this->container['two_point_conversion_attempts'] = isset($data['two_point_conversion_attempts']) ? $data['two_point_conversion_attempts'] : null;
        $this->container['two_point_conversion_passes'] = isset($data['two_point_conversion_passes']) ? $data['two_point_conversion_passes'] : null;
        $this->container['two_point_conversion_runs'] = isset($data['two_point_conversion_runs']) ? $data['two_point_conversion_runs'] : null;
        $this->container['two_point_conversion_receptions'] = isset($data['two_point_conversion_receptions']) ? $data['two_point_conversion_receptions'] : null;
        $this->container['two_point_conversion_returns'] = isset($data['two_point_conversion_returns']) ? $data['two_point_conversion_returns'] : null;
        $this->container['solo_tackles'] = isset($data['solo_tackles']) ? $data['solo_tackles'] : null;
        $this->container['assisted_tackles'] = isset($data['assisted_tackles']) ? $data['assisted_tackles'] : null;
        $this->container['tackles_for_loss'] = isset($data['tackles_for_loss']) ? $data['tackles_for_loss'] : null;
        $this->container['sacks'] = isset($data['sacks']) ? $data['sacks'] : null;
        $this->container['sack_yards'] = isset($data['sack_yards']) ? $data['sack_yards'] : null;
        $this->container['passes_defended'] = isset($data['passes_defended']) ? $data['passes_defended'] : null;
        $this->container['safeties'] = isset($data['safeties']) ? $data['safeties'] : null;
        $this->container['fumbles_forced'] = isset($data['fumbles_forced']) ? $data['fumbles_forced'] : null;
        $this->container['fumbles_recovered'] = isset($data['fumbles_recovered']) ? $data['fumbles_recovered'] : null;
        $this->container['fumble_return_yards'] = isset($data['fumble_return_yards']) ? $data['fumble_return_yards'] : null;
        $this->container['fumble_return_touchdowns'] = isset($data['fumble_return_touchdowns']) ? $data['fumble_return_touchdowns'] : null;
        $this->container['interceptions'] = isset($data['interceptions']) ? $data['interceptions'] : null;
        $this->container['interception_return_yards'] = isset($data['interception_return_yards']) ? $data['interception_return_yards'] : null;
        $this->container['interception_return_touchdowns'] = isset($data['interception_return_touchdowns']) ? $data['interception_return_touchdowns'] : null;
        $this->container['punt_returns'] = isset($data['punt_returns']) ? $data['punt_returns'] : null;
        $this->container['punt_return_yards'] = isset($data['punt_return_yards']) ? $data['punt_return_yards'] : null;
        $this->container['punt_return_touchdowns'] = isset($data['punt_return_touchdowns']) ? $data['punt_return_touchdowns'] : null;
        $this->container['kick_returns'] = isset($data['kick_returns']) ? $data['kick_returns'] : null;
        $this->container['kick_return_yards'] = isset($data['kick_return_yards']) ? $data['kick_return_yards'] : null;
        $this->container['kick_return_touchdowns'] = isset($data['kick_return_touchdowns']) ? $data['kick_return_touchdowns'] : null;
        $this->container['blocked_kicks'] = isset($data['blocked_kicks']) ? $data['blocked_kicks'] : null;
        $this->container['blocked_kick_returns'] = isset($data['blocked_kick_returns']) ? $data['blocked_kick_returns'] : null;
        $this->container['blocked_kick_return_yards'] = isset($data['blocked_kick_return_yards']) ? $data['blocked_kick_return_yards'] : null;
        $this->container['blocked_kick_return_touchdowns'] = isset($data['blocked_kick_return_touchdowns']) ? $data['blocked_kick_return_touchdowns'] : null;
        $this->container['field_goal_returns'] = isset($data['field_goal_returns']) ? $data['field_goal_returns'] : null;
        $this->container['field_goal_return_yards'] = isset($data['field_goal_return_yards']) ? $data['field_goal_return_yards'] : null;
        $this->container['field_goal_return_touchdowns'] = isset($data['field_goal_return_touchdowns']) ? $data['field_goal_return_touchdowns'] : null;
        $this->container['kickoffs'] = isset($data['kickoffs']) ? $data['kickoffs'] : null;
        $this->container['kickoff_yards'] = isset($data['kickoff_yards']) ? $data['kickoff_yards'] : null;
        $this->container['kickoff_touchbacks'] = isset($data['kickoff_touchbacks']) ? $data['kickoff_touchbacks'] : null;
        $this->container['punts'] = isset($data['punts']) ? $data['punts'] : null;
        $this->container['punt_yards'] = isset($data['punt_yards']) ? $data['punt_yards'] : null;
        $this->container['punt_touchbacks'] = isset($data['punt_touchbacks']) ? $data['punt_touchbacks'] : null;
        $this->container['punts_had_blocked'] = isset($data['punts_had_blocked']) ? $data['punts_had_blocked'] : null;
        $this->container['field_goals_attempted'] = isset($data['field_goals_attempted']) ? $data['field_goals_attempted'] : null;
        $this->container['field_goals_made'] = isset($data['field_goals_made']) ? $data['field_goals_made'] : null;
        $this->container['field_goals_yards'] = isset($data['field_goals_yards']) ? $data['field_goals_yards'] : null;
        $this->container['field_goals_had_blocked'] = isset($data['field_goals_had_blocked']) ? $data['field_goals_had_blocked'] : null;
        $this->container['extra_points_attempted'] = isset($data['extra_points_attempted']) ? $data['extra_points_attempted'] : null;
        $this->container['extra_points_made'] = isset($data['extra_points_made']) ? $data['extra_points_made'] : null;
        $this->container['extra_points_had_blocked'] = isset($data['extra_points_had_blocked']) ? $data['extra_points_had_blocked'] : null;
        $this->container['penalties'] = isset($data['penalties']) ? $data['penalties'] : null;
        $this->container['penalty_yards'] = isset($data['penalty_yards']) ? $data['penalty_yards'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets play_stat_id
     *
     * @return int
     */
    public function getPlayStatId()
    {
        return $this->container['play_stat_id'];
    }

    /**
     * Sets play_stat_id
     *
     * @param int $play_stat_id play_stat_id
     *
     * @return $this
     */
    public function setPlayStatId($play_stat_id)
    {
        $this->container['play_stat_id'] = $play_stat_id;

        return $this;
    }

    /**
     * Gets play_id
     *
     * @return int
     */
    public function getPlayId()
    {
        return $this->container['play_id'];
    }

    /**
     * Sets play_id
     *
     * @param int $play_id play_id
     *
     * @return $this
     */
    public function setPlayId($play_id)
    {
        $this->container['play_id'] = $play_id;

        return $this;
    }

    /**
     * Gets sequence
     *
     * @return int
     */
    public function getSequence()
    {
        return $this->container['sequence'];
    }

    /**
     * Sets sequence
     *
     * @param int $sequence sequence
     *
     * @return $this
     */
    public function setSequence($sequence)
    {
        $this->container['sequence'] = $sequence;

        return $this;
    }

    /**
     * Gets player_id
     *
     * @return int
     */
    public function getPlayerId()
    {
        return $this->container['player_id'];
    }

    /**
     * Sets player_id
     *
     * @param int $player_id player_id
     *
     * @return $this
     */
    public function setPlayerId($player_id)
    {
        $this->container['player_id'] = $player_id;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets team
     *
     * @return string
     */
    public function getTeam()
    {
        return $this->container['team'];
    }

    /**
     * Sets team
     *
     * @param string $team team
     *
     * @return $this
     */
    public function setTeam($team)
    {
        $this->container['team'] = $team;

        return $this;
    }

    /**
     * Gets opponent
     *
     * @return string
     */
    public function getOpponent()
    {
        return $this->container['opponent'];
    }

    /**
     * Sets opponent
     *
     * @param string $opponent opponent
     *
     * @return $this
     */
    public function setOpponent($opponent)
    {
        $this->container['opponent'] = $opponent;

        return $this;
    }

    /**
     * Gets home_or_away
     *
     * @return string
     */
    public function getHomeOrAway()
    {
        return $this->container['home_or_away'];
    }

    /**
     * Sets home_or_away
     *
     * @param string $home_or_away home_or_away
     *
     * @return $this
     */
    public function setHomeOrAway($home_or_away)
    {
        $this->container['home_or_away'] = $home_or_away;

        return $this;
    }

    /**
     * Gets direction
     *
     * @return string
     */
    public function getDirection()
    {
        return $this->container['direction'];
    }

    /**
     * Sets direction
     *
     * @param string $direction direction
     *
     * @return $this
     */
    public function setDirection($direction)
    {
        $this->container['direction'] = $direction;

        return $this;
    }

    /**
     * Gets updated
     *
     * @return string
     */
    public function getUpdated()
    {
        return $this->container['updated'];
    }

    /**
     * Sets updated
     *
     * @param string $updated updated
     *
     * @return $this
     */
    public function setUpdated($updated)
    {
        $this->container['updated'] = $updated;

        return $this;
    }

    /**
     * Gets created
     *
     * @return string
     */
    public function getCreated()
    {
        return $this->container['created'];
    }

    /**
     * Sets created
     *
     * @param string $created created
     *
     * @return $this
     */
    public function setCreated($created)
    {
        $this->container['created'] = $created;

        return $this;
    }

    /**
     * Gets passing_attempts
     *
     * @return int
     */
    public function getPassingAttempts()
    {
        return $this->container['passing_attempts'];
    }

    /**
     * Sets passing_attempts
     *
     * @param int $passing_attempts passing_attempts
     *
     * @return $this
     */
    public function setPassingAttempts($passing_attempts)
    {
        $this->container['passing_attempts'] = $passing_attempts;

        return $this;
    }

    /**
     * Gets passing_completions
     *
     * @return int
     */
    public function getPassingCompletions()
    {
        return $this->container['passing_completions'];
    }

    /**
     * Sets passing_completions
     *
     * @param int $passing_completions passing_completions
     *
     * @return $this
     */
    public function setPassingCompletions($passing_completions)
    {
        $this->container['passing_completions'] = $passing_completions;

        return $this;
    }

    /**
     * Gets passing_yards
     *
     * @return int
     */
    public function getPassingYards()
    {
        return $this->container['passing_yards'];
    }

    /**
     * Sets passing_yards
     *
     * @param int $passing_yards passing_yards
     *
     * @return $this
     */
    public function setPassingYards($passing_yards)
    {
        $this->container['passing_yards'] = $passing_yards;

        return $this;
    }

    /**
     * Gets passing_touchdowns
     *
     * @return int
     */
    public function getPassingTouchdowns()
    {
        return $this->container['passing_touchdowns'];
    }

    /**
     * Sets passing_touchdowns
     *
     * @param int $passing_touchdowns passing_touchdowns
     *
     * @return $this
     */
    public function setPassingTouchdowns($passing_touchdowns)
    {
        $this->container['passing_touchdowns'] = $passing_touchdowns;

        return $this;
    }

    /**
     * Gets passing_interceptions
     *
     * @return int
     */
    public function getPassingInterceptions()
    {
        return $this->container['passing_interceptions'];
    }

    /**
     * Sets passing_interceptions
     *
     * @param int $passing_interceptions passing_interceptions
     *
     * @return $this
     */
    public function setPassingInterceptions($passing_interceptions)
    {
        $this->container['passing_interceptions'] = $passing_interceptions;

        return $this;
    }

    /**
     * Gets passing_sacks
     *
     * @return int
     */
    public function getPassingSacks()
    {
        return $this->container['passing_sacks'];
    }

    /**
     * Sets passing_sacks
     *
     * @param int $passing_sacks passing_sacks
     *
     * @return $this
     */
    public function setPassingSacks($passing_sacks)
    {
        $this->container['passing_sacks'] = $passing_sacks;

        return $this;
    }

    /**
     * Gets passing_sack_yards
     *
     * @return int
     */
    public function getPassingSackYards()
    {
        return $this->container['passing_sack_yards'];
    }

    /**
     * Sets passing_sack_yards
     *
     * @param int $passing_sack_yards passing_sack_yards
     *
     * @return $this
     */
    public function setPassingSackYards($passing_sack_yards)
    {
        $this->container['passing_sack_yards'] = $passing_sack_yards;

        return $this;
    }

    /**
     * Gets rushing_attempts
     *
     * @return int
     */
    public function getRushingAttempts()
    {
        return $this->container['rushing_attempts'];
    }

    /**
     * Sets rushing_attempts
     *
     * @param int $rushing_attempts rushing_attempts
     *
     * @return $this
     */
    public function setRushingAttempts($rushing_attempts)
    {
        $this->container['rushing_attempts'] = $rushing_attempts;

        return $this;
    }

    /**
     * Gets rushing_yards
     *
     * @return int
     */
    public function getRushingYards()
    {
        return $this->container['rushing_yards'];
    }

    /**
     * Sets rushing_yards
     *
     * @param int $rushing_yards rushing_yards
     *
     * @return $this
     */
    public function setRushingYards($rushing_yards)
    {
        $this->container['rushing_yards'] = $rushing_yards;

        return $this;
    }

    /**
     * Gets rushing_touchdowns
     *
     * @return int
     */
    public function getRushingTouchdowns()
    {
        return $this->container['rushing_touchdowns'];
    }

    /**
     * Sets rushing_touchdowns
     *
     * @param int $rushing_touchdowns rushing_touchdowns
     *
     * @return $this
     */
    public function setRushingTouchdowns($rushing_touchdowns)
    {
        $this->container['rushing_touchdowns'] = $rushing_touchdowns;

        return $this;
    }

    /**
     * Gets receiving_targets
     *
     * @return int
     */
    public function getReceivingTargets()
    {
        return $this->container['receiving_targets'];
    }

    /**
     * Sets receiving_targets
     *
     * @param int $receiving_targets receiving_targets
     *
     * @return $this
     */
    public function setReceivingTargets($receiving_targets)
    {
        $this->container['receiving_targets'] = $receiving_targets;

        return $this;
    }

    /**
     * Gets receptions
     *
     * @return int
     */
    public function getReceptions()
    {
        return $this->container['receptions'];
    }

    /**
     * Sets receptions
     *
     * @param int $receptions receptions
     *
     * @return $this
     */
    public function setReceptions($receptions)
    {
        $this->container['receptions'] = $receptions;

        return $this;
    }

    /**
     * Gets receiving_yards
     *
     * @return int
     */
    public function getReceivingYards()
    {
        return $this->container['receiving_yards'];
    }

    /**
     * Sets receiving_yards
     *
     * @param int $receiving_yards receiving_yards
     *
     * @return $this
     */
    public function setReceivingYards($receiving_yards)
    {
        $this->container['receiving_yards'] = $receiving_yards;

        return $this;
    }

    /**
     * Gets receiving_touchdowns
     *
     * @return int
     */
    public function getReceivingTouchdowns()
    {
        return $this->container['receiving_touchdowns'];
    }

    /**
     * Sets receiving_touchdowns
     *
     * @param int $receiving_touchdowns receiving_touchdowns
     *
     * @return $this
     */
    public function setReceivingTouchdowns($receiving_touchdowns)
    {
        $this->container['receiving_touchdowns'] = $receiving_touchdowns;

        return $this;
    }

    /**
     * Gets fumbles
     *
     * @return int
     */
    public function getFumbles()
    {
        return $this->container['fumbles'];
    }

    /**
     * Sets fumbles
     *
     * @param int $fumbles fumbles
     *
     * @return $this
     */
    public function setFumbles($fumbles)
    {
        $this->container['fumbles'] = $fumbles;

        return $this;
    }

    /**
     * Gets fumbles_lost
     *
     * @return int
     */
    public function getFumblesLost()
    {
        return $this->container['fumbles_lost'];
    }

    /**
     * Sets fumbles_lost
     *
     * @param int $fumbles_lost fumbles_lost
     *
     * @return $this
     */
    public function setFumblesLost($fumbles_lost)
    {
        $this->container['fumbles_lost'] = $fumbles_lost;

        return $this;
    }

    /**
     * Gets two_point_conversion_attempts
     *
     * @return int
     */
    public function getTwoPointConversionAttempts()
    {
        return $this->container['two_point_conversion_attempts'];
    }

    /**
     * Sets two_point_conversion_attempts
     *
     * @param int $two_point_conversion_attempts two_point_conversion_attempts
     *
     * @return $this
     */
    public function setTwoPointConversionAttempts($two_point_conversion_attempts)
    {
        $this->container['two_point_conversion_attempts'] = $two_point_conversion_attempts;

        return $this;
    }

    /**
     * Gets two_point_conversion_passes
     *
     * @return int
     */
    public function getTwoPointConversionPasses()
    {
        return $this->container['two_point_conversion_passes'];
    }

    /**
     * Sets two_point_conversion_passes
     *
     * @param int $two_point_conversion_passes two_point_conversion_passes
     *
     * @return $this
     */
    public function setTwoPointConversionPasses($two_point_conversion_passes)
    {
        $this->container['two_point_conversion_passes'] = $two_point_conversion_passes;

        return $this;
    }

    /**
     * Gets two_point_conversion_runs
     *
     * @return int
     */
    public function getTwoPointConversionRuns()
    {
        return $this->container['two_point_conversion_runs'];
    }

    /**
     * Sets two_point_conversion_runs
     *
     * @param int $two_point_conversion_runs two_point_conversion_runs
     *
     * @return $this
     */
    public function setTwoPointConversionRuns($two_point_conversion_runs)
    {
        $this->container['two_point_conversion_runs'] = $two_point_conversion_runs;

        return $this;
    }

    /**
     * Gets two_point_conversion_receptions
     *
     * @return int
     */
    public function getTwoPointConversionReceptions()
    {
        return $this->container['two_point_conversion_receptions'];
    }

    /**
     * Sets two_point_conversion_receptions
     *
     * @param int $two_point_conversion_receptions two_point_conversion_receptions
     *
     * @return $this
     */
    public function setTwoPointConversionReceptions($two_point_conversion_receptions)
    {
        $this->container['two_point_conversion_receptions'] = $two_point_conversion_receptions;

        return $this;
    }

    /**
     * Gets two_point_conversion_returns
     *
     * @return int
     */
    public function getTwoPointConversionReturns()
    {
        return $this->container['two_point_conversion_returns'];
    }

    /**
     * Sets two_point_conversion_returns
     *
     * @param int $two_point_conversion_returns two_point_conversion_returns
     *
     * @return $this
     */
    public function setTwoPointConversionReturns($two_point_conversion_returns)
    {
        $this->container['two_point_conversion_returns'] = $two_point_conversion_returns;

        return $this;
    }

    /**
     * Gets solo_tackles
     *
     * @return int
     */
    public function getSoloTackles()
    {
        return $this->container['solo_tackles'];
    }

    /**
     * Sets solo_tackles
     *
     * @param int $solo_tackles solo_tackles
     *
     * @return $this
     */
    public function setSoloTackles($solo_tackles)
    {
        $this->container['solo_tackles'] = $solo_tackles;

        return $this;
    }

    /**
     * Gets assisted_tackles
     *
     * @return int
     */
    public function getAssistedTackles()
    {
        return $this->container['assisted_tackles'];
    }

    /**
     * Sets assisted_tackles
     *
     * @param int $assisted_tackles assisted_tackles
     *
     * @return $this
     */
    public function setAssistedTackles($assisted_tackles)
    {
        $this->container['assisted_tackles'] = $assisted_tackles;

        return $this;
    }

    /**
     * Gets tackles_for_loss
     *
     * @return int
     */
    public function getTacklesForLoss()
    {
        return $this->container['tackles_for_loss'];
    }

    /**
     * Sets tackles_for_loss
     *
     * @param int $tackles_for_loss tackles_for_loss
     *
     * @return $this
     */
    public function setTacklesForLoss($tackles_for_loss)
    {
        $this->container['tackles_for_loss'] = $tackles_for_loss;

        return $this;
    }

    /**
     * Gets sacks
     *
     * @return float
     */
    public function getSacks()
    {
        return $this->container['sacks'];
    }

    /**
     * Sets sacks
     *
     * @param float $sacks sacks
     *
     * @return $this
     */
    public function setSacks($sacks)
    {
        $this->container['sacks'] = $sacks;

        return $this;
    }

    /**
     * Gets sack_yards
     *
     * @return float
     */
    public function getSackYards()
    {
        return $this->container['sack_yards'];
    }

    /**
     * Sets sack_yards
     *
     * @param float $sack_yards sack_yards
     *
     * @return $this
     */
    public function setSackYards($sack_yards)
    {
        $this->container['sack_yards'] = $sack_yards;

        return $this;
    }

    /**
     * Gets passes_defended
     *
     * @return int
     */
    public function getPassesDefended()
    {
        return $this->container['passes_defended'];
    }

    /**
     * Sets passes_defended
     *
     * @param int $passes_defended passes_defended
     *
     * @return $this
     */
    public function setPassesDefended($passes_defended)
    {
        $this->container['passes_defended'] = $passes_defended;

        return $this;
    }

    /**
     * Gets safeties
     *
     * @return int
     */
    public function getSafeties()
    {
        return $this->container['safeties'];
    }

    /**
     * Sets safeties
     *
     * @param int $safeties safeties
     *
     * @return $this
     */
    public function setSafeties($safeties)
    {
        $this->container['safeties'] = $safeties;

        return $this;
    }

    /**
     * Gets fumbles_forced
     *
     * @return int
     */
    public function getFumblesForced()
    {
        return $this->container['fumbles_forced'];
    }

    /**
     * Sets fumbles_forced
     *
     * @param int $fumbles_forced fumbles_forced
     *
     * @return $this
     */
    public function setFumblesForced($fumbles_forced)
    {
        $this->container['fumbles_forced'] = $fumbles_forced;

        return $this;
    }

    /**
     * Gets fumbles_recovered
     *
     * @return int
     */
    public function getFumblesRecovered()
    {
        return $this->container['fumbles_recovered'];
    }

    /**
     * Sets fumbles_recovered
     *
     * @param int $fumbles_recovered fumbles_recovered
     *
     * @return $this
     */
    public function setFumblesRecovered($fumbles_recovered)
    {
        $this->container['fumbles_recovered'] = $fumbles_recovered;

        return $this;
    }

    /**
     * Gets fumble_return_yards
     *
     * @return int
     */
    public function getFumbleReturnYards()
    {
        return $this->container['fumble_return_yards'];
    }

    /**
     * Sets fumble_return_yards
     *
     * @param int $fumble_return_yards fumble_return_yards
     *
     * @return $this
     */
    public function setFumbleReturnYards($fumble_return_yards)
    {
        $this->container['fumble_return_yards'] = $fumble_return_yards;

        return $this;
    }

    /**
     * Gets fumble_return_touchdowns
     *
     * @return int
     */
    public function getFumbleReturnTouchdowns()
    {
        return $this->container['fumble_return_touchdowns'];
    }

    /**
     * Sets fumble_return_touchdowns
     *
     * @param int $fumble_return_touchdowns fumble_return_touchdowns
     *
     * @return $this
     */
    public function setFumbleReturnTouchdowns($fumble_return_touchdowns)
    {
        $this->container['fumble_return_touchdowns'] = $fumble_return_touchdowns;

        return $this;
    }

    /**
     * Gets interceptions
     *
     * @return int
     */
    public function getInterceptions()
    {
        return $this->container['interceptions'];
    }

    /**
     * Sets interceptions
     *
     * @param int $interceptions interceptions
     *
     * @return $this
     */
    public function setInterceptions($interceptions)
    {
        $this->container['interceptions'] = $interceptions;

        return $this;
    }

    /**
     * Gets interception_return_yards
     *
     * @return int
     */
    public function getInterceptionReturnYards()
    {
        return $this->container['interception_return_yards'];
    }

    /**
     * Sets interception_return_yards
     *
     * @param int $interception_return_yards interception_return_yards
     *
     * @return $this
     */
    public function setInterceptionReturnYards($interception_return_yards)
    {
        $this->container['interception_return_yards'] = $interception_return_yards;

        return $this;
    }

    /**
     * Gets interception_return_touchdowns
     *
     * @return int
     */
    public function getInterceptionReturnTouchdowns()
    {
        return $this->container['interception_return_touchdowns'];
    }

    /**
     * Sets interception_return_touchdowns
     *
     * @param int $interception_return_touchdowns interception_return_touchdowns
     *
     * @return $this
     */
    public function setInterceptionReturnTouchdowns($interception_return_touchdowns)
    {
        $this->container['interception_return_touchdowns'] = $interception_return_touchdowns;

        return $this;
    }

    /**
     * Gets punt_returns
     *
     * @return int
     */
    public function getPuntReturns()
    {
        return $this->container['punt_returns'];
    }

    /**
     * Sets punt_returns
     *
     * @param int $punt_returns punt_returns
     *
     * @return $this
     */
    public function setPuntReturns($punt_returns)
    {
        $this->container['punt_returns'] = $punt_returns;

        return $this;
    }

    /**
     * Gets punt_return_yards
     *
     * @return int
     */
    public function getPuntReturnYards()
    {
        return $this->container['punt_return_yards'];
    }

    /**
     * Sets punt_return_yards
     *
     * @param int $punt_return_yards punt_return_yards
     *
     * @return $this
     */
    public function setPuntReturnYards($punt_return_yards)
    {
        $this->container['punt_return_yards'] = $punt_return_yards;

        return $this;
    }

    /**
     * Gets punt_return_touchdowns
     *
     * @return int
     */
    public function getPuntReturnTouchdowns()
    {
        return $this->container['punt_return_touchdowns'];
    }

    /**
     * Sets punt_return_touchdowns
     *
     * @param int $punt_return_touchdowns punt_return_touchdowns
     *
     * @return $this
     */
    public function setPuntReturnTouchdowns($punt_return_touchdowns)
    {
        $this->container['punt_return_touchdowns'] = $punt_return_touchdowns;

        return $this;
    }

    /**
     * Gets kick_returns
     *
     * @return int
     */
    public function getKickReturns()
    {
        return $this->container['kick_returns'];
    }

    /**
     * Sets kick_returns
     *
     * @param int $kick_returns kick_returns
     *
     * @return $this
     */
    public function setKickReturns($kick_returns)
    {
        $this->container['kick_returns'] = $kick_returns;

        return $this;
    }

    /**
     * Gets kick_return_yards
     *
     * @return int
     */
    public function getKickReturnYards()
    {
        return $this->container['kick_return_yards'];
    }

    /**
     * Sets kick_return_yards
     *
     * @param int $kick_return_yards kick_return_yards
     *
     * @return $this
     */
    public function setKickReturnYards($kick_return_yards)
    {
        $this->container['kick_return_yards'] = $kick_return_yards;

        return $this;
    }

    /**
     * Gets kick_return_touchdowns
     *
     * @return int
     */
    public function getKickReturnTouchdowns()
    {
        return $this->container['kick_return_touchdowns'];
    }

    /**
     * Sets kick_return_touchdowns
     *
     * @param int $kick_return_touchdowns kick_return_touchdowns
     *
     * @return $this
     */
    public function setKickReturnTouchdowns($kick_return_touchdowns)
    {
        $this->container['kick_return_touchdowns'] = $kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets blocked_kicks
     *
     * @return int
     */
    public function getBlockedKicks()
    {
        return $this->container['blocked_kicks'];
    }

    /**
     * Sets blocked_kicks
     *
     * @param int $blocked_kicks blocked_kicks
     *
     * @return $this
     */
    public function setBlockedKicks($blocked_kicks)
    {
        $this->container['blocked_kicks'] = $blocked_kicks;

        return $this;
    }

    /**
     * Gets blocked_kick_returns
     *
     * @return int
     */
    public function getBlockedKickReturns()
    {
        return $this->container['blocked_kick_returns'];
    }

    /**
     * Sets blocked_kick_returns
     *
     * @param int $blocked_kick_returns blocked_kick_returns
     *
     * @return $this
     */
    public function setBlockedKickReturns($blocked_kick_returns)
    {
        $this->container['blocked_kick_returns'] = $blocked_kick_returns;

        return $this;
    }

    /**
     * Gets blocked_kick_return_yards
     *
     * @return int
     */
    public function getBlockedKickReturnYards()
    {
        return $this->container['blocked_kick_return_yards'];
    }

    /**
     * Sets blocked_kick_return_yards
     *
     * @param int $blocked_kick_return_yards blocked_kick_return_yards
     *
     * @return $this
     */
    public function setBlockedKickReturnYards($blocked_kick_return_yards)
    {
        $this->container['blocked_kick_return_yards'] = $blocked_kick_return_yards;

        return $this;
    }

    /**
     * Gets blocked_kick_return_touchdowns
     *
     * @return int
     */
    public function getBlockedKickReturnTouchdowns()
    {
        return $this->container['blocked_kick_return_touchdowns'];
    }

    /**
     * Sets blocked_kick_return_touchdowns
     *
     * @param int $blocked_kick_return_touchdowns blocked_kick_return_touchdowns
     *
     * @return $this
     */
    public function setBlockedKickReturnTouchdowns($blocked_kick_return_touchdowns)
    {
        $this->container['blocked_kick_return_touchdowns'] = $blocked_kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets field_goal_returns
     *
     * @return int
     */
    public function getFieldGoalReturns()
    {
        return $this->container['field_goal_returns'];
    }

    /**
     * Sets field_goal_returns
     *
     * @param int $field_goal_returns field_goal_returns
     *
     * @return $this
     */
    public function setFieldGoalReturns($field_goal_returns)
    {
        $this->container['field_goal_returns'] = $field_goal_returns;

        return $this;
    }

    /**
     * Gets field_goal_return_yards
     *
     * @return int
     */
    public function getFieldGoalReturnYards()
    {
        return $this->container['field_goal_return_yards'];
    }

    /**
     * Sets field_goal_return_yards
     *
     * @param int $field_goal_return_yards field_goal_return_yards
     *
     * @return $this
     */
    public function setFieldGoalReturnYards($field_goal_return_yards)
    {
        $this->container['field_goal_return_yards'] = $field_goal_return_yards;

        return $this;
    }

    /**
     * Gets field_goal_return_touchdowns
     *
     * @return int
     */
    public function getFieldGoalReturnTouchdowns()
    {
        return $this->container['field_goal_return_touchdowns'];
    }

    /**
     * Sets field_goal_return_touchdowns
     *
     * @param int $field_goal_return_touchdowns field_goal_return_touchdowns
     *
     * @return $this
     */
    public function setFieldGoalReturnTouchdowns($field_goal_return_touchdowns)
    {
        $this->container['field_goal_return_touchdowns'] = $field_goal_return_touchdowns;

        return $this;
    }

    /**
     * Gets kickoffs
     *
     * @return int
     */
    public function getKickoffs()
    {
        return $this->container['kickoffs'];
    }

    /**
     * Sets kickoffs
     *
     * @param int $kickoffs kickoffs
     *
     * @return $this
     */
    public function setKickoffs($kickoffs)
    {
        $this->container['kickoffs'] = $kickoffs;

        return $this;
    }

    /**
     * Gets kickoff_yards
     *
     * @return int
     */
    public function getKickoffYards()
    {
        return $this->container['kickoff_yards'];
    }

    /**
     * Sets kickoff_yards
     *
     * @param int $kickoff_yards kickoff_yards
     *
     * @return $this
     */
    public function setKickoffYards($kickoff_yards)
    {
        $this->container['kickoff_yards'] = $kickoff_yards;

        return $this;
    }

    /**
     * Gets kickoff_touchbacks
     *
     * @return int
     */
    public function getKickoffTouchbacks()
    {
        return $this->container['kickoff_touchbacks'];
    }

    /**
     * Sets kickoff_touchbacks
     *
     * @param int $kickoff_touchbacks kickoff_touchbacks
     *
     * @return $this
     */
    public function setKickoffTouchbacks($kickoff_touchbacks)
    {
        $this->container['kickoff_touchbacks'] = $kickoff_touchbacks;

        return $this;
    }

    /**
     * Gets punts
     *
     * @return int
     */
    public function getPunts()
    {
        return $this->container['punts'];
    }

    /**
     * Sets punts
     *
     * @param int $punts punts
     *
     * @return $this
     */
    public function setPunts($punts)
    {
        $this->container['punts'] = $punts;

        return $this;
    }

    /**
     * Gets punt_yards
     *
     * @return int
     */
    public function getPuntYards()
    {
        return $this->container['punt_yards'];
    }

    /**
     * Sets punt_yards
     *
     * @param int $punt_yards punt_yards
     *
     * @return $this
     */
    public function setPuntYards($punt_yards)
    {
        $this->container['punt_yards'] = $punt_yards;

        return $this;
    }

    /**
     * Gets punt_touchbacks
     *
     * @return int
     */
    public function getPuntTouchbacks()
    {
        return $this->container['punt_touchbacks'];
    }

    /**
     * Sets punt_touchbacks
     *
     * @param int $punt_touchbacks punt_touchbacks
     *
     * @return $this
     */
    public function setPuntTouchbacks($punt_touchbacks)
    {
        $this->container['punt_touchbacks'] = $punt_touchbacks;

        return $this;
    }

    /**
     * Gets punts_had_blocked
     *
     * @return int
     */
    public function getPuntsHadBlocked()
    {
        return $this->container['punts_had_blocked'];
    }

    /**
     * Sets punts_had_blocked
     *
     * @param int $punts_had_blocked punts_had_blocked
     *
     * @return $this
     */
    public function setPuntsHadBlocked($punts_had_blocked)
    {
        $this->container['punts_had_blocked'] = $punts_had_blocked;

        return $this;
    }

    /**
     * Gets field_goals_attempted
     *
     * @return int
     */
    public function getFieldGoalsAttempted()
    {
        return $this->container['field_goals_attempted'];
    }

    /**
     * Sets field_goals_attempted
     *
     * @param int $field_goals_attempted field_goals_attempted
     *
     * @return $this
     */
    public function setFieldGoalsAttempted($field_goals_attempted)
    {
        $this->container['field_goals_attempted'] = $field_goals_attempted;

        return $this;
    }

    /**
     * Gets field_goals_made
     *
     * @return int
     */
    public function getFieldGoalsMade()
    {
        return $this->container['field_goals_made'];
    }

    /**
     * Sets field_goals_made
     *
     * @param int $field_goals_made field_goals_made
     *
     * @return $this
     */
    public function setFieldGoalsMade($field_goals_made)
    {
        $this->container['field_goals_made'] = $field_goals_made;

        return $this;
    }

    /**
     * Gets field_goals_yards
     *
     * @return int
     */
    public function getFieldGoalsYards()
    {
        return $this->container['field_goals_yards'];
    }

    /**
     * Sets field_goals_yards
     *
     * @param int $field_goals_yards field_goals_yards
     *
     * @return $this
     */
    public function setFieldGoalsYards($field_goals_yards)
    {
        $this->container['field_goals_yards'] = $field_goals_yards;

        return $this;
    }

    /**
     * Gets field_goals_had_blocked
     *
     * @return int
     */
    public function getFieldGoalsHadBlocked()
    {
        return $this->container['field_goals_had_blocked'];
    }

    /**
     * Sets field_goals_had_blocked
     *
     * @param int $field_goals_had_blocked field_goals_had_blocked
     *
     * @return $this
     */
    public function setFieldGoalsHadBlocked($field_goals_had_blocked)
    {
        $this->container['field_goals_had_blocked'] = $field_goals_had_blocked;

        return $this;
    }

    /**
     * Gets extra_points_attempted
     *
     * @return int
     */
    public function getExtraPointsAttempted()
    {
        return $this->container['extra_points_attempted'];
    }

    /**
     * Sets extra_points_attempted
     *
     * @param int $extra_points_attempted extra_points_attempted
     *
     * @return $this
     */
    public function setExtraPointsAttempted($extra_points_attempted)
    {
        $this->container['extra_points_attempted'] = $extra_points_attempted;

        return $this;
    }

    /**
     * Gets extra_points_made
     *
     * @return int
     */
    public function getExtraPointsMade()
    {
        return $this->container['extra_points_made'];
    }

    /**
     * Sets extra_points_made
     *
     * @param int $extra_points_made extra_points_made
     *
     * @return $this
     */
    public function setExtraPointsMade($extra_points_made)
    {
        $this->container['extra_points_made'] = $extra_points_made;

        return $this;
    }

    /**
     * Gets extra_points_had_blocked
     *
     * @return int
     */
    public function getExtraPointsHadBlocked()
    {
        return $this->container['extra_points_had_blocked'];
    }

    /**
     * Sets extra_points_had_blocked
     *
     * @param int $extra_points_had_blocked extra_points_had_blocked
     *
     * @return $this
     */
    public function setExtraPointsHadBlocked($extra_points_had_blocked)
    {
        $this->container['extra_points_had_blocked'] = $extra_points_had_blocked;

        return $this;
    }

    /**
     * Gets penalties
     *
     * @return int
     */
    public function getPenalties()
    {
        return $this->container['penalties'];
    }

    /**
     * Sets penalties
     *
     * @param int $penalties penalties
     *
     * @return $this
     */
    public function setPenalties($penalties)
    {
        $this->container['penalties'] = $penalties;

        return $this;
    }

    /**
     * Gets penalty_yards
     *
     * @return int
     */
    public function getPenaltyYards()
    {
        return $this->container['penalty_yards'];
    }

    /**
     * Sets penalty_yards
     *
     * @param int $penalty_yards penalty_yards
     *
     * @return $this
     */
    public function setPenaltyYards($penalty_yards)
    {
        $this->container['penalty_yards'] = $penalty_yards;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param  integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param  integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param  integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


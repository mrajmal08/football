<?php
/**
 * FantasyDefenseGame
 *
 * PHP version 5
 *
 * @category Class
 * @package  Acme\FantasyDataStats
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NFL v3 Stats
 *
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Acme\FantasyDataStats;

use \ArrayAccess;
use \Acme\FantasyDataStats\ObjectSerializer;

/**
 * FantasyDefenseGame Class Doc Comment
 *
 * @category Class
 * @package     Acme\FantasyDataStats
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class FantasyDefenseGame implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FantasyDefenseGame';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'game_key' => 'string',
        'season_type' => 'int',
        'season' => 'int',
        'week' => 'int',
        'date' => 'string',
        'team' => 'string',
        'opponent' => 'string',
        'points_allowed' => 'float',
        'touchdowns_scored' => 'float',
        'solo_tackles' => 'float',
        'assisted_tackles' => 'float',
        'sacks' => 'float',
        'sack_yards' => 'float',
        'passes_defended' => 'float',
        'fumbles_forced' => 'float',
        'fumbles_recovered' => 'float',
        'fumble_return_yards' => 'float',
        'fumble_return_touchdowns' => 'float',
        'interceptions' => 'float',
        'interception_return_yards' => 'float',
        'interception_return_touchdowns' => 'float',
        'blocked_kicks' => 'float',
        'safeties' => 'float',
        'punt_returns' => 'float',
        'punt_return_yards' => 'float',
        'punt_return_touchdowns' => 'float',
        'punt_return_long' => 'float',
        'kick_returns' => 'float',
        'kick_return_yards' => 'float',
        'kick_return_touchdowns' => 'float',
        'kick_return_long' => 'float',
        'blocked_kick_return_touchdowns' => 'float',
        'field_goal_return_touchdowns' => 'float',
        'fantasy_points_allowed' => 'float',
        'quarterback_fantasy_points_allowed' => 'float',
        'runningback_fantasy_points_allowed' => 'float',
        'wide_receiver_fantasy_points_allowed' => 'float',
        'tight_end_fantasy_points_allowed' => 'float',
        'kicker_fantasy_points_allowed' => 'float',
        'blocked_kick_return_yards' => 'float',
        'field_goal_return_yards' => 'float',
        'quarterback_hits' => 'float',
        'tackles_for_loss' => 'float',
        'defensive_touchdowns' => 'float',
        'special_teams_touchdowns' => 'float',
        'is_game_over' => 'bool',
        'fantasy_points' => 'float',
        'stadium' => 'string',
        'temperature' => 'int',
        'humidity' => 'int',
        'wind_speed' => 'int',
        'third_down_attempts' => 'float',
        'third_down_conversions' => 'float',
        'fourth_down_attempts' => 'float',
        'fourth_down_conversions' => 'float',
        'points_allowed_by_defense_special_teams' => 'float',
        'fan_duel_salary' => 'int',
        'draft_kings_salary' => 'int',
        'fantasy_data_salary' => 'int',
        'victiv_salary' => 'int',
        'two_point_conversion_returns' => 'float',
        'fantasy_points_fan_duel' => 'float',
        'fantasy_points_draft_kings' => 'float',
        'offensive_yards_allowed' => 'float',
        'yahoo_salary' => 'int',
        'player_id' => 'int',
        'fantasy_points_yahoo' => 'float',
        'home_or_away' => 'string',
        'opponent_rank' => 'int',
        'opponent_position_rank' => 'int',
        'fantasy_draft_salary' => 'int',
        'team_id' => 'int',
        'opponent_id' => 'int',
        'day' => 'string',
        'date_time' => 'string',
        'global_game_id' => 'int',
        'global_team_id' => 'int',
        'global_opponent_id' => 'int',
        'draft_kings_position' => 'string',
        'fan_duel_position' => 'string',
        'fantasy_draft_position' => 'string',
        'yahoo_position' => 'string',
        'fantasy_defense_id' => 'int',
        'score_id' => 'int',
        'fan_duel_fantasy_points_allowed' => 'float',
        'fan_duel_quarterback_fantasy_points_allowed' => 'float',
        'fan_duel_runningback_fantasy_points_allowed' => 'float',
        'fan_duel_wide_receiver_fantasy_points_allowed' => 'float',
        'fan_duel_tight_end_fantasy_points_allowed' => 'float',
        'fan_duel_kicker_fantasy_points_allowed' => 'float',
        'draft_kings_fantasy_points_allowed' => 'float',
        'draft_kings_quarterback_fantasy_points_allowed' => 'float',
        'draft_kings_runningback_fantasy_points_allowed' => 'float',
        'draft_kings_wide_receiver_fantasy_points_allowed' => 'float',
        'draft_kings_tight_end_fantasy_points_allowed' => 'float',
        'draft_kings_kicker_fantasy_points_allowed' => 'float',
        'yahoo_fantasy_points_allowed' => 'float',
        'yahoo_quarterback_fantasy_points_allowed' => 'float',
        'yahoo_runningback_fantasy_points_allowed' => 'float',
        'yahoo_wide_receiver_fantasy_points_allowed' => 'float',
        'yahoo_tight_end_fantasy_points_allowed' => 'float',
        'yahoo_kicker_fantasy_points_allowed' => 'float',
        'fantasy_points_fantasy_draft' => 'float',
        'fantasy_draft_fantasy_points_allowed' => 'float',
        'fantasy_draft_quarterback_fantasy_points_allowed' => 'float',
        'fantasy_draft_runningback_fantasy_points_allowed' => 'float',
        'fantasy_draft_wide_receiver_fantasy_points_allowed' => 'float',
        'fantasy_draft_tight_end_fantasy_points_allowed' => 'float',
        'fantasy_draft_kicker_fantasy_points_allowed' => 'float',
        'scoring_details' => '\Acme\FantasyDataStats\\ScoringDetail[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'game_key' => null,
        'season_type' => null,
        'season' => null,
        'week' => null,
        'date' => null,
        'team' => null,
        'opponent' => null,
        'points_allowed' => null,
        'touchdowns_scored' => null,
        'solo_tackles' => null,
        'assisted_tackles' => null,
        'sacks' => null,
        'sack_yards' => null,
        'passes_defended' => null,
        'fumbles_forced' => null,
        'fumbles_recovered' => null,
        'fumble_return_yards' => null,
        'fumble_return_touchdowns' => null,
        'interceptions' => null,
        'interception_return_yards' => null,
        'interception_return_touchdowns' => null,
        'blocked_kicks' => null,
        'safeties' => null,
        'punt_returns' => null,
        'punt_return_yards' => null,
        'punt_return_touchdowns' => null,
        'punt_return_long' => null,
        'kick_returns' => null,
        'kick_return_yards' => null,
        'kick_return_touchdowns' => null,
        'kick_return_long' => null,
        'blocked_kick_return_touchdowns' => null,
        'field_goal_return_touchdowns' => null,
        'fantasy_points_allowed' => null,
        'quarterback_fantasy_points_allowed' => null,
        'runningback_fantasy_points_allowed' => null,
        'wide_receiver_fantasy_points_allowed' => null,
        'tight_end_fantasy_points_allowed' => null,
        'kicker_fantasy_points_allowed' => null,
        'blocked_kick_return_yards' => null,
        'field_goal_return_yards' => null,
        'quarterback_hits' => null,
        'tackles_for_loss' => null,
        'defensive_touchdowns' => null,
        'special_teams_touchdowns' => null,
        'is_game_over' => null,
        'fantasy_points' => null,
        'stadium' => null,
        'temperature' => null,
        'humidity' => null,
        'wind_speed' => null,
        'third_down_attempts' => null,
        'third_down_conversions' => null,
        'fourth_down_attempts' => null,
        'fourth_down_conversions' => null,
        'points_allowed_by_defense_special_teams' => null,
        'fan_duel_salary' => null,
        'draft_kings_salary' => null,
        'fantasy_data_salary' => null,
        'victiv_salary' => null,
        'two_point_conversion_returns' => null,
        'fantasy_points_fan_duel' => null,
        'fantasy_points_draft_kings' => null,
        'offensive_yards_allowed' => null,
        'yahoo_salary' => null,
        'player_id' => null,
        'fantasy_points_yahoo' => null,
        'home_or_away' => null,
        'opponent_rank' => null,
        'opponent_position_rank' => null,
        'fantasy_draft_salary' => null,
        'team_id' => null,
        'opponent_id' => null,
        'day' => null,
        'date_time' => null,
        'global_game_id' => null,
        'global_team_id' => null,
        'global_opponent_id' => null,
        'draft_kings_position' => null,
        'fan_duel_position' => null,
        'fantasy_draft_position' => null,
        'yahoo_position' => null,
        'fantasy_defense_id' => null,
        'score_id' => null,
        'fan_duel_fantasy_points_allowed' => null,
        'fan_duel_quarterback_fantasy_points_allowed' => null,
        'fan_duel_runningback_fantasy_points_allowed' => null,
        'fan_duel_wide_receiver_fantasy_points_allowed' => null,
        'fan_duel_tight_end_fantasy_points_allowed' => null,
        'fan_duel_kicker_fantasy_points_allowed' => null,
        'draft_kings_fantasy_points_allowed' => null,
        'draft_kings_quarterback_fantasy_points_allowed' => null,
        'draft_kings_runningback_fantasy_points_allowed' => null,
        'draft_kings_wide_receiver_fantasy_points_allowed' => null,
        'draft_kings_tight_end_fantasy_points_allowed' => null,
        'draft_kings_kicker_fantasy_points_allowed' => null,
        'yahoo_fantasy_points_allowed' => null,
        'yahoo_quarterback_fantasy_points_allowed' => null,
        'yahoo_runningback_fantasy_points_allowed' => null,
        'yahoo_wide_receiver_fantasy_points_allowed' => null,
        'yahoo_tight_end_fantasy_points_allowed' => null,
        'yahoo_kicker_fantasy_points_allowed' => null,
        'fantasy_points_fantasy_draft' => null,
        'fantasy_draft_fantasy_points_allowed' => null,
        'fantasy_draft_quarterback_fantasy_points_allowed' => null,
        'fantasy_draft_runningback_fantasy_points_allowed' => null,
        'fantasy_draft_wide_receiver_fantasy_points_allowed' => null,
        'fantasy_draft_tight_end_fantasy_points_allowed' => null,
        'fantasy_draft_kicker_fantasy_points_allowed' => null,
        'scoring_details' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'game_key' => 'GameKey',
        'season_type' => 'SeasonType',
        'season' => 'Season',
        'week' => 'Week',
        'date' => 'Date',
        'team' => 'Team',
        'opponent' => 'Opponent',
        'points_allowed' => 'PointsAllowed',
        'touchdowns_scored' => 'TouchdownsScored',
        'solo_tackles' => 'SoloTackles',
        'assisted_tackles' => 'AssistedTackles',
        'sacks' => 'Sacks',
        'sack_yards' => 'SackYards',
        'passes_defended' => 'PassesDefended',
        'fumbles_forced' => 'FumblesForced',
        'fumbles_recovered' => 'FumblesRecovered',
        'fumble_return_yards' => 'FumbleReturnYards',
        'fumble_return_touchdowns' => 'FumbleReturnTouchdowns',
        'interceptions' => 'Interceptions',
        'interception_return_yards' => 'InterceptionReturnYards',
        'interception_return_touchdowns' => 'InterceptionReturnTouchdowns',
        'blocked_kicks' => 'BlockedKicks',
        'safeties' => 'Safeties',
        'punt_returns' => 'PuntReturns',
        'punt_return_yards' => 'PuntReturnYards',
        'punt_return_touchdowns' => 'PuntReturnTouchdowns',
        'punt_return_long' => 'PuntReturnLong',
        'kick_returns' => 'KickReturns',
        'kick_return_yards' => 'KickReturnYards',
        'kick_return_touchdowns' => 'KickReturnTouchdowns',
        'kick_return_long' => 'KickReturnLong',
        'blocked_kick_return_touchdowns' => 'BlockedKickReturnTouchdowns',
        'field_goal_return_touchdowns' => 'FieldGoalReturnTouchdowns',
        'fantasy_points_allowed' => 'FantasyPointsAllowed',
        'quarterback_fantasy_points_allowed' => 'QuarterbackFantasyPointsAllowed',
        'runningback_fantasy_points_allowed' => 'RunningbackFantasyPointsAllowed',
        'wide_receiver_fantasy_points_allowed' => 'WideReceiverFantasyPointsAllowed',
        'tight_end_fantasy_points_allowed' => 'TightEndFantasyPointsAllowed',
        'kicker_fantasy_points_allowed' => 'KickerFantasyPointsAllowed',
        'blocked_kick_return_yards' => 'BlockedKickReturnYards',
        'field_goal_return_yards' => 'FieldGoalReturnYards',
        'quarterback_hits' => 'QuarterbackHits',
        'tackles_for_loss' => 'TacklesForLoss',
        'defensive_touchdowns' => 'DefensiveTouchdowns',
        'special_teams_touchdowns' => 'SpecialTeamsTouchdowns',
        'is_game_over' => 'IsGameOver',
        'fantasy_points' => 'FantasyPoints',
        'stadium' => 'Stadium',
        'temperature' => 'Temperature',
        'humidity' => 'Humidity',
        'wind_speed' => 'WindSpeed',
        'third_down_attempts' => 'ThirdDownAttempts',
        'third_down_conversions' => 'ThirdDownConversions',
        'fourth_down_attempts' => 'FourthDownAttempts',
        'fourth_down_conversions' => 'FourthDownConversions',
        'points_allowed_by_defense_special_teams' => 'PointsAllowedByDefenseSpecialTeams',
        'fan_duel_salary' => 'FanDuelSalary',
        'draft_kings_salary' => 'DraftKingsSalary',
        'fantasy_data_salary' => 'FantasyDataSalary',
        'victiv_salary' => 'VictivSalary',
        'two_point_conversion_returns' => 'TwoPointConversionReturns',
        'fantasy_points_fan_duel' => 'FantasyPointsFanDuel',
        'fantasy_points_draft_kings' => 'FantasyPointsDraftKings',
        'offensive_yards_allowed' => 'OffensiveYardsAllowed',
        'yahoo_salary' => 'YahooSalary',
        'player_id' => 'PlayerID',
        'fantasy_points_yahoo' => 'FantasyPointsYahoo',
        'home_or_away' => 'HomeOrAway',
        'opponent_rank' => 'OpponentRank',
        'opponent_position_rank' => 'OpponentPositionRank',
        'fantasy_draft_salary' => 'FantasyDraftSalary',
        'team_id' => 'TeamID',
        'opponent_id' => 'OpponentID',
        'day' => 'Day',
        'date_time' => 'DateTime',
        'global_game_id' => 'GlobalGameID',
        'global_team_id' => 'GlobalTeamID',
        'global_opponent_id' => 'GlobalOpponentID',
        'draft_kings_position' => 'DraftKingsPosition',
        'fan_duel_position' => 'FanDuelPosition',
        'fantasy_draft_position' => 'FantasyDraftPosition',
        'yahoo_position' => 'YahooPosition',
        'fantasy_defense_id' => 'FantasyDefenseID',
        'score_id' => 'ScoreID',
        'fan_duel_fantasy_points_allowed' => 'FanDuelFantasyPointsAllowed',
        'fan_duel_quarterback_fantasy_points_allowed' => 'FanDuelQuarterbackFantasyPointsAllowed',
        'fan_duel_runningback_fantasy_points_allowed' => 'FanDuelRunningbackFantasyPointsAllowed',
        'fan_duel_wide_receiver_fantasy_points_allowed' => 'FanDuelWideReceiverFantasyPointsAllowed',
        'fan_duel_tight_end_fantasy_points_allowed' => 'FanDuelTightEndFantasyPointsAllowed',
        'fan_duel_kicker_fantasy_points_allowed' => 'FanDuelKickerFantasyPointsAllowed',
        'draft_kings_fantasy_points_allowed' => 'DraftKingsFantasyPointsAllowed',
        'draft_kings_quarterback_fantasy_points_allowed' => 'DraftKingsQuarterbackFantasyPointsAllowed',
        'draft_kings_runningback_fantasy_points_allowed' => 'DraftKingsRunningbackFantasyPointsAllowed',
        'draft_kings_wide_receiver_fantasy_points_allowed' => 'DraftKingsWideReceiverFantasyPointsAllowed',
        'draft_kings_tight_end_fantasy_points_allowed' => 'DraftKingsTightEndFantasyPointsAllowed',
        'draft_kings_kicker_fantasy_points_allowed' => 'DraftKingsKickerFantasyPointsAllowed',
        'yahoo_fantasy_points_allowed' => 'YahooFantasyPointsAllowed',
        'yahoo_quarterback_fantasy_points_allowed' => 'YahooQuarterbackFantasyPointsAllowed',
        'yahoo_runningback_fantasy_points_allowed' => 'YahooRunningbackFantasyPointsAllowed',
        'yahoo_wide_receiver_fantasy_points_allowed' => 'YahooWideReceiverFantasyPointsAllowed',
        'yahoo_tight_end_fantasy_points_allowed' => 'YahooTightEndFantasyPointsAllowed',
        'yahoo_kicker_fantasy_points_allowed' => 'YahooKickerFantasyPointsAllowed',
        'fantasy_points_fantasy_draft' => 'FantasyPointsFantasyDraft',
        'fantasy_draft_fantasy_points_allowed' => 'FantasyDraftFantasyPointsAllowed',
        'fantasy_draft_quarterback_fantasy_points_allowed' => 'FantasyDraftQuarterbackFantasyPointsAllowed',
        'fantasy_draft_runningback_fantasy_points_allowed' => 'FantasyDraftRunningbackFantasyPointsAllowed',
        'fantasy_draft_wide_receiver_fantasy_points_allowed' => 'FantasyDraftWideReceiverFantasyPointsAllowed',
        'fantasy_draft_tight_end_fantasy_points_allowed' => 'FantasyDraftTightEndFantasyPointsAllowed',
        'fantasy_draft_kicker_fantasy_points_allowed' => 'FantasyDraftKickerFantasyPointsAllowed',
        'scoring_details' => 'ScoringDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'game_key' => 'setGameKey',
        'season_type' => 'setSeasonType',
        'season' => 'setSeason',
        'week' => 'setWeek',
        'date' => 'setDate',
        'team' => 'setTeam',
        'opponent' => 'setOpponent',
        'points_allowed' => 'setPointsAllowed',
        'touchdowns_scored' => 'setTouchdownsScored',
        'solo_tackles' => 'setSoloTackles',
        'assisted_tackles' => 'setAssistedTackles',
        'sacks' => 'setSacks',
        'sack_yards' => 'setSackYards',
        'passes_defended' => 'setPassesDefended',
        'fumbles_forced' => 'setFumblesForced',
        'fumbles_recovered' => 'setFumblesRecovered',
        'fumble_return_yards' => 'setFumbleReturnYards',
        'fumble_return_touchdowns' => 'setFumbleReturnTouchdowns',
        'interceptions' => 'setInterceptions',
        'interception_return_yards' => 'setInterceptionReturnYards',
        'interception_return_touchdowns' => 'setInterceptionReturnTouchdowns',
        'blocked_kicks' => 'setBlockedKicks',
        'safeties' => 'setSafeties',
        'punt_returns' => 'setPuntReturns',
        'punt_return_yards' => 'setPuntReturnYards',
        'punt_return_touchdowns' => 'setPuntReturnTouchdowns',
        'punt_return_long' => 'setPuntReturnLong',
        'kick_returns' => 'setKickReturns',
        'kick_return_yards' => 'setKickReturnYards',
        'kick_return_touchdowns' => 'setKickReturnTouchdowns',
        'kick_return_long' => 'setKickReturnLong',
        'blocked_kick_return_touchdowns' => 'setBlockedKickReturnTouchdowns',
        'field_goal_return_touchdowns' => 'setFieldGoalReturnTouchdowns',
        'fantasy_points_allowed' => 'setFantasyPointsAllowed',
        'quarterback_fantasy_points_allowed' => 'setQuarterbackFantasyPointsAllowed',
        'runningback_fantasy_points_allowed' => 'setRunningbackFantasyPointsAllowed',
        'wide_receiver_fantasy_points_allowed' => 'setWideReceiverFantasyPointsAllowed',
        'tight_end_fantasy_points_allowed' => 'setTightEndFantasyPointsAllowed',
        'kicker_fantasy_points_allowed' => 'setKickerFantasyPointsAllowed',
        'blocked_kick_return_yards' => 'setBlockedKickReturnYards',
        'field_goal_return_yards' => 'setFieldGoalReturnYards',
        'quarterback_hits' => 'setQuarterbackHits',
        'tackles_for_loss' => 'setTacklesForLoss',
        'defensive_touchdowns' => 'setDefensiveTouchdowns',
        'special_teams_touchdowns' => 'setSpecialTeamsTouchdowns',
        'is_game_over' => 'setIsGameOver',
        'fantasy_points' => 'setFantasyPoints',
        'stadium' => 'setStadium',
        'temperature' => 'setTemperature',
        'humidity' => 'setHumidity',
        'wind_speed' => 'setWindSpeed',
        'third_down_attempts' => 'setThirdDownAttempts',
        'third_down_conversions' => 'setThirdDownConversions',
        'fourth_down_attempts' => 'setFourthDownAttempts',
        'fourth_down_conversions' => 'setFourthDownConversions',
        'points_allowed_by_defense_special_teams' => 'setPointsAllowedByDefenseSpecialTeams',
        'fan_duel_salary' => 'setFanDuelSalary',
        'draft_kings_salary' => 'setDraftKingsSalary',
        'fantasy_data_salary' => 'setFantasyDataSalary',
        'victiv_salary' => 'setVictivSalary',
        'two_point_conversion_returns' => 'setTwoPointConversionReturns',
        'fantasy_points_fan_duel' => 'setFantasyPointsFanDuel',
        'fantasy_points_draft_kings' => 'setFantasyPointsDraftKings',
        'offensive_yards_allowed' => 'setOffensiveYardsAllowed',
        'yahoo_salary' => 'setYahooSalary',
        'player_id' => 'setPlayerId',
        'fantasy_points_yahoo' => 'setFantasyPointsYahoo',
        'home_or_away' => 'setHomeOrAway',
        'opponent_rank' => 'setOpponentRank',
        'opponent_position_rank' => 'setOpponentPositionRank',
        'fantasy_draft_salary' => 'setFantasyDraftSalary',
        'team_id' => 'setTeamId',
        'opponent_id' => 'setOpponentId',
        'day' => 'setDay',
        'date_time' => 'setDateTime',
        'global_game_id' => 'setGlobalGameId',
        'global_team_id' => 'setGlobalTeamId',
        'global_opponent_id' => 'setGlobalOpponentId',
        'draft_kings_position' => 'setDraftKingsPosition',
        'fan_duel_position' => 'setFanDuelPosition',
        'fantasy_draft_position' => 'setFantasyDraftPosition',
        'yahoo_position' => 'setYahooPosition',
        'fantasy_defense_id' => 'setFantasyDefenseId',
        'score_id' => 'setScoreId',
        'fan_duel_fantasy_points_allowed' => 'setFanDuelFantasyPointsAllowed',
        'fan_duel_quarterback_fantasy_points_allowed' => 'setFanDuelQuarterbackFantasyPointsAllowed',
        'fan_duel_runningback_fantasy_points_allowed' => 'setFanDuelRunningbackFantasyPointsAllowed',
        'fan_duel_wide_receiver_fantasy_points_allowed' => 'setFanDuelWideReceiverFantasyPointsAllowed',
        'fan_duel_tight_end_fantasy_points_allowed' => 'setFanDuelTightEndFantasyPointsAllowed',
        'fan_duel_kicker_fantasy_points_allowed' => 'setFanDuelKickerFantasyPointsAllowed',
        'draft_kings_fantasy_points_allowed' => 'setDraftKingsFantasyPointsAllowed',
        'draft_kings_quarterback_fantasy_points_allowed' => 'setDraftKingsQuarterbackFantasyPointsAllowed',
        'draft_kings_runningback_fantasy_points_allowed' => 'setDraftKingsRunningbackFantasyPointsAllowed',
        'draft_kings_wide_receiver_fantasy_points_allowed' => 'setDraftKingsWideReceiverFantasyPointsAllowed',
        'draft_kings_tight_end_fantasy_points_allowed' => 'setDraftKingsTightEndFantasyPointsAllowed',
        'draft_kings_kicker_fantasy_points_allowed' => 'setDraftKingsKickerFantasyPointsAllowed',
        'yahoo_fantasy_points_allowed' => 'setYahooFantasyPointsAllowed',
        'yahoo_quarterback_fantasy_points_allowed' => 'setYahooQuarterbackFantasyPointsAllowed',
        'yahoo_runningback_fantasy_points_allowed' => 'setYahooRunningbackFantasyPointsAllowed',
        'yahoo_wide_receiver_fantasy_points_allowed' => 'setYahooWideReceiverFantasyPointsAllowed',
        'yahoo_tight_end_fantasy_points_allowed' => 'setYahooTightEndFantasyPointsAllowed',
        'yahoo_kicker_fantasy_points_allowed' => 'setYahooKickerFantasyPointsAllowed',
        'fantasy_points_fantasy_draft' => 'setFantasyPointsFantasyDraft',
        'fantasy_draft_fantasy_points_allowed' => 'setFantasyDraftFantasyPointsAllowed',
        'fantasy_draft_quarterback_fantasy_points_allowed' => 'setFantasyDraftQuarterbackFantasyPointsAllowed',
        'fantasy_draft_runningback_fantasy_points_allowed' => 'setFantasyDraftRunningbackFantasyPointsAllowed',
        'fantasy_draft_wide_receiver_fantasy_points_allowed' => 'setFantasyDraftWideReceiverFantasyPointsAllowed',
        'fantasy_draft_tight_end_fantasy_points_allowed' => 'setFantasyDraftTightEndFantasyPointsAllowed',
        'fantasy_draft_kicker_fantasy_points_allowed' => 'setFantasyDraftKickerFantasyPointsAllowed',
        'scoring_details' => 'setScoringDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'game_key' => 'getGameKey',
        'season_type' => 'getSeasonType',
        'season' => 'getSeason',
        'week' => 'getWeek',
        'date' => 'getDate',
        'team' => 'getTeam',
        'opponent' => 'getOpponent',
        'points_allowed' => 'getPointsAllowed',
        'touchdowns_scored' => 'getTouchdownsScored',
        'solo_tackles' => 'getSoloTackles',
        'assisted_tackles' => 'getAssistedTackles',
        'sacks' => 'getSacks',
        'sack_yards' => 'getSackYards',
        'passes_defended' => 'getPassesDefended',
        'fumbles_forced' => 'getFumblesForced',
        'fumbles_recovered' => 'getFumblesRecovered',
        'fumble_return_yards' => 'getFumbleReturnYards',
        'fumble_return_touchdowns' => 'getFumbleReturnTouchdowns',
        'interceptions' => 'getInterceptions',
        'interception_return_yards' => 'getInterceptionReturnYards',
        'interception_return_touchdowns' => 'getInterceptionReturnTouchdowns',
        'blocked_kicks' => 'getBlockedKicks',
        'safeties' => 'getSafeties',
        'punt_returns' => 'getPuntReturns',
        'punt_return_yards' => 'getPuntReturnYards',
        'punt_return_touchdowns' => 'getPuntReturnTouchdowns',
        'punt_return_long' => 'getPuntReturnLong',
        'kick_returns' => 'getKickReturns',
        'kick_return_yards' => 'getKickReturnYards',
        'kick_return_touchdowns' => 'getKickReturnTouchdowns',
        'kick_return_long' => 'getKickReturnLong',
        'blocked_kick_return_touchdowns' => 'getBlockedKickReturnTouchdowns',
        'field_goal_return_touchdowns' => 'getFieldGoalReturnTouchdowns',
        'fantasy_points_allowed' => 'getFantasyPointsAllowed',
        'quarterback_fantasy_points_allowed' => 'getQuarterbackFantasyPointsAllowed',
        'runningback_fantasy_points_allowed' => 'getRunningbackFantasyPointsAllowed',
        'wide_receiver_fantasy_points_allowed' => 'getWideReceiverFantasyPointsAllowed',
        'tight_end_fantasy_points_allowed' => 'getTightEndFantasyPointsAllowed',
        'kicker_fantasy_points_allowed' => 'getKickerFantasyPointsAllowed',
        'blocked_kick_return_yards' => 'getBlockedKickReturnYards',
        'field_goal_return_yards' => 'getFieldGoalReturnYards',
        'quarterback_hits' => 'getQuarterbackHits',
        'tackles_for_loss' => 'getTacklesForLoss',
        'defensive_touchdowns' => 'getDefensiveTouchdowns',
        'special_teams_touchdowns' => 'getSpecialTeamsTouchdowns',
        'is_game_over' => 'getIsGameOver',
        'fantasy_points' => 'getFantasyPoints',
        'stadium' => 'getStadium',
        'temperature' => 'getTemperature',
        'humidity' => 'getHumidity',
        'wind_speed' => 'getWindSpeed',
        'third_down_attempts' => 'getThirdDownAttempts',
        'third_down_conversions' => 'getThirdDownConversions',
        'fourth_down_attempts' => 'getFourthDownAttempts',
        'fourth_down_conversions' => 'getFourthDownConversions',
        'points_allowed_by_defense_special_teams' => 'getPointsAllowedByDefenseSpecialTeams',
        'fan_duel_salary' => 'getFanDuelSalary',
        'draft_kings_salary' => 'getDraftKingsSalary',
        'fantasy_data_salary' => 'getFantasyDataSalary',
        'victiv_salary' => 'getVictivSalary',
        'two_point_conversion_returns' => 'getTwoPointConversionReturns',
        'fantasy_points_fan_duel' => 'getFantasyPointsFanDuel',
        'fantasy_points_draft_kings' => 'getFantasyPointsDraftKings',
        'offensive_yards_allowed' => 'getOffensiveYardsAllowed',
        'yahoo_salary' => 'getYahooSalary',
        'player_id' => 'getPlayerId',
        'fantasy_points_yahoo' => 'getFantasyPointsYahoo',
        'home_or_away' => 'getHomeOrAway',
        'opponent_rank' => 'getOpponentRank',
        'opponent_position_rank' => 'getOpponentPositionRank',
        'fantasy_draft_salary' => 'getFantasyDraftSalary',
        'team_id' => 'getTeamId',
        'opponent_id' => 'getOpponentId',
        'day' => 'getDay',
        'date_time' => 'getDateTime',
        'global_game_id' => 'getGlobalGameId',
        'global_team_id' => 'getGlobalTeamId',
        'global_opponent_id' => 'getGlobalOpponentId',
        'draft_kings_position' => 'getDraftKingsPosition',
        'fan_duel_position' => 'getFanDuelPosition',
        'fantasy_draft_position' => 'getFantasyDraftPosition',
        'yahoo_position' => 'getYahooPosition',
        'fantasy_defense_id' => 'getFantasyDefenseId',
        'score_id' => 'getScoreId',
        'fan_duel_fantasy_points_allowed' => 'getFanDuelFantasyPointsAllowed',
        'fan_duel_quarterback_fantasy_points_allowed' => 'getFanDuelQuarterbackFantasyPointsAllowed',
        'fan_duel_runningback_fantasy_points_allowed' => 'getFanDuelRunningbackFantasyPointsAllowed',
        'fan_duel_wide_receiver_fantasy_points_allowed' => 'getFanDuelWideReceiverFantasyPointsAllowed',
        'fan_duel_tight_end_fantasy_points_allowed' => 'getFanDuelTightEndFantasyPointsAllowed',
        'fan_duel_kicker_fantasy_points_allowed' => 'getFanDuelKickerFantasyPointsAllowed',
        'draft_kings_fantasy_points_allowed' => 'getDraftKingsFantasyPointsAllowed',
        'draft_kings_quarterback_fantasy_points_allowed' => 'getDraftKingsQuarterbackFantasyPointsAllowed',
        'draft_kings_runningback_fantasy_points_allowed' => 'getDraftKingsRunningbackFantasyPointsAllowed',
        'draft_kings_wide_receiver_fantasy_points_allowed' => 'getDraftKingsWideReceiverFantasyPointsAllowed',
        'draft_kings_tight_end_fantasy_points_allowed' => 'getDraftKingsTightEndFantasyPointsAllowed',
        'draft_kings_kicker_fantasy_points_allowed' => 'getDraftKingsKickerFantasyPointsAllowed',
        'yahoo_fantasy_points_allowed' => 'getYahooFantasyPointsAllowed',
        'yahoo_quarterback_fantasy_points_allowed' => 'getYahooQuarterbackFantasyPointsAllowed',
        'yahoo_runningback_fantasy_points_allowed' => 'getYahooRunningbackFantasyPointsAllowed',
        'yahoo_wide_receiver_fantasy_points_allowed' => 'getYahooWideReceiverFantasyPointsAllowed',
        'yahoo_tight_end_fantasy_points_allowed' => 'getYahooTightEndFantasyPointsAllowed',
        'yahoo_kicker_fantasy_points_allowed' => 'getYahooKickerFantasyPointsAllowed',
        'fantasy_points_fantasy_draft' => 'getFantasyPointsFantasyDraft',
        'fantasy_draft_fantasy_points_allowed' => 'getFantasyDraftFantasyPointsAllowed',
        'fantasy_draft_quarterback_fantasy_points_allowed' => 'getFantasyDraftQuarterbackFantasyPointsAllowed',
        'fantasy_draft_runningback_fantasy_points_allowed' => 'getFantasyDraftRunningbackFantasyPointsAllowed',
        'fantasy_draft_wide_receiver_fantasy_points_allowed' => 'getFantasyDraftWideReceiverFantasyPointsAllowed',
        'fantasy_draft_tight_end_fantasy_points_allowed' => 'getFantasyDraftTightEndFantasyPointsAllowed',
        'fantasy_draft_kicker_fantasy_points_allowed' => 'getFantasyDraftKickerFantasyPointsAllowed',
        'scoring_details' => 'getScoringDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['game_key'] = isset($data['game_key']) ? $data['game_key'] : null;
        $this->container['season_type'] = isset($data['season_type']) ? $data['season_type'] : null;
        $this->container['season'] = isset($data['season']) ? $data['season'] : null;
        $this->container['week'] = isset($data['week']) ? $data['week'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['team'] = isset($data['team']) ? $data['team'] : null;
        $this->container['opponent'] = isset($data['opponent']) ? $data['opponent'] : null;
        $this->container['points_allowed'] = isset($data['points_allowed']) ? $data['points_allowed'] : null;
        $this->container['touchdowns_scored'] = isset($data['touchdowns_scored']) ? $data['touchdowns_scored'] : null;
        $this->container['solo_tackles'] = isset($data['solo_tackles']) ? $data['solo_tackles'] : null;
        $this->container['assisted_tackles'] = isset($data['assisted_tackles']) ? $data['assisted_tackles'] : null;
        $this->container['sacks'] = isset($data['sacks']) ? $data['sacks'] : null;
        $this->container['sack_yards'] = isset($data['sack_yards']) ? $data['sack_yards'] : null;
        $this->container['passes_defended'] = isset($data['passes_defended']) ? $data['passes_defended'] : null;
        $this->container['fumbles_forced'] = isset($data['fumbles_forced']) ? $data['fumbles_forced'] : null;
        $this->container['fumbles_recovered'] = isset($data['fumbles_recovered']) ? $data['fumbles_recovered'] : null;
        $this->container['fumble_return_yards'] = isset($data['fumble_return_yards']) ? $data['fumble_return_yards'] : null;
        $this->container['fumble_return_touchdowns'] = isset($data['fumble_return_touchdowns']) ? $data['fumble_return_touchdowns'] : null;
        $this->container['interceptions'] = isset($data['interceptions']) ? $data['interceptions'] : null;
        $this->container['interception_return_yards'] = isset($data['interception_return_yards']) ? $data['interception_return_yards'] : null;
        $this->container['interception_return_touchdowns'] = isset($data['interception_return_touchdowns']) ? $data['interception_return_touchdowns'] : null;
        $this->container['blocked_kicks'] = isset($data['blocked_kicks']) ? $data['blocked_kicks'] : null;
        $this->container['safeties'] = isset($data['safeties']) ? $data['safeties'] : null;
        $this->container['punt_returns'] = isset($data['punt_returns']) ? $data['punt_returns'] : null;
        $this->container['punt_return_yards'] = isset($data['punt_return_yards']) ? $data['punt_return_yards'] : null;
        $this->container['punt_return_touchdowns'] = isset($data['punt_return_touchdowns']) ? $data['punt_return_touchdowns'] : null;
        $this->container['punt_return_long'] = isset($data['punt_return_long']) ? $data['punt_return_long'] : null;
        $this->container['kick_returns'] = isset($data['kick_returns']) ? $data['kick_returns'] : null;
        $this->container['kick_return_yards'] = isset($data['kick_return_yards']) ? $data['kick_return_yards'] : null;
        $this->container['kick_return_touchdowns'] = isset($data['kick_return_touchdowns']) ? $data['kick_return_touchdowns'] : null;
        $this->container['kick_return_long'] = isset($data['kick_return_long']) ? $data['kick_return_long'] : null;
        $this->container['blocked_kick_return_touchdowns'] = isset($data['blocked_kick_return_touchdowns']) ? $data['blocked_kick_return_touchdowns'] : null;
        $this->container['field_goal_return_touchdowns'] = isset($data['field_goal_return_touchdowns']) ? $data['field_goal_return_touchdowns'] : null;
        $this->container['fantasy_points_allowed'] = isset($data['fantasy_points_allowed']) ? $data['fantasy_points_allowed'] : null;
        $this->container['quarterback_fantasy_points_allowed'] = isset($data['quarterback_fantasy_points_allowed']) ? $data['quarterback_fantasy_points_allowed'] : null;
        $this->container['runningback_fantasy_points_allowed'] = isset($data['runningback_fantasy_points_allowed']) ? $data['runningback_fantasy_points_allowed'] : null;
        $this->container['wide_receiver_fantasy_points_allowed'] = isset($data['wide_receiver_fantasy_points_allowed']) ? $data['wide_receiver_fantasy_points_allowed'] : null;
        $this->container['tight_end_fantasy_points_allowed'] = isset($data['tight_end_fantasy_points_allowed']) ? $data['tight_end_fantasy_points_allowed'] : null;
        $this->container['kicker_fantasy_points_allowed'] = isset($data['kicker_fantasy_points_allowed']) ? $data['kicker_fantasy_points_allowed'] : null;
        $this->container['blocked_kick_return_yards'] = isset($data['blocked_kick_return_yards']) ? $data['blocked_kick_return_yards'] : null;
        $this->container['field_goal_return_yards'] = isset($data['field_goal_return_yards']) ? $data['field_goal_return_yards'] : null;
        $this->container['quarterback_hits'] = isset($data['quarterback_hits']) ? $data['quarterback_hits'] : null;
        $this->container['tackles_for_loss'] = isset($data['tackles_for_loss']) ? $data['tackles_for_loss'] : null;
        $this->container['defensive_touchdowns'] = isset($data['defensive_touchdowns']) ? $data['defensive_touchdowns'] : null;
        $this->container['special_teams_touchdowns'] = isset($data['special_teams_touchdowns']) ? $data['special_teams_touchdowns'] : null;
        $this->container['is_game_over'] = isset($data['is_game_over']) ? $data['is_game_over'] : null;
        $this->container['fantasy_points'] = isset($data['fantasy_points']) ? $data['fantasy_points'] : null;
        $this->container['stadium'] = isset($data['stadium']) ? $data['stadium'] : null;
        $this->container['temperature'] = isset($data['temperature']) ? $data['temperature'] : null;
        $this->container['humidity'] = isset($data['humidity']) ? $data['humidity'] : null;
        $this->container['wind_speed'] = isset($data['wind_speed']) ? $data['wind_speed'] : null;
        $this->container['third_down_attempts'] = isset($data['third_down_attempts']) ? $data['third_down_attempts'] : null;
        $this->container['third_down_conversions'] = isset($data['third_down_conversions']) ? $data['third_down_conversions'] : null;
        $this->container['fourth_down_attempts'] = isset($data['fourth_down_attempts']) ? $data['fourth_down_attempts'] : null;
        $this->container['fourth_down_conversions'] = isset($data['fourth_down_conversions']) ? $data['fourth_down_conversions'] : null;
        $this->container['points_allowed_by_defense_special_teams'] = isset($data['points_allowed_by_defense_special_teams']) ? $data['points_allowed_by_defense_special_teams'] : null;
        $this->container['fan_duel_salary'] = isset($data['fan_duel_salary']) ? $data['fan_duel_salary'] : null;
        $this->container['draft_kings_salary'] = isset($data['draft_kings_salary']) ? $data['draft_kings_salary'] : null;
        $this->container['fantasy_data_salary'] = isset($data['fantasy_data_salary']) ? $data['fantasy_data_salary'] : null;
        $this->container['victiv_salary'] = isset($data['victiv_salary']) ? $data['victiv_salary'] : null;
        $this->container['two_point_conversion_returns'] = isset($data['two_point_conversion_returns']) ? $data['two_point_conversion_returns'] : null;
        $this->container['fantasy_points_fan_duel'] = isset($data['fantasy_points_fan_duel']) ? $data['fantasy_points_fan_duel'] : null;
        $this->container['fantasy_points_draft_kings'] = isset($data['fantasy_points_draft_kings']) ? $data['fantasy_points_draft_kings'] : null;
        $this->container['offensive_yards_allowed'] = isset($data['offensive_yards_allowed']) ? $data['offensive_yards_allowed'] : null;
        $this->container['yahoo_salary'] = isset($data['yahoo_salary']) ? $data['yahoo_salary'] : null;
        $this->container['player_id'] = isset($data['player_id']) ? $data['player_id'] : null;
        $this->container['fantasy_points_yahoo'] = isset($data['fantasy_points_yahoo']) ? $data['fantasy_points_yahoo'] : null;
        $this->container['home_or_away'] = isset($data['home_or_away']) ? $data['home_or_away'] : null;
        $this->container['opponent_rank'] = isset($data['opponent_rank']) ? $data['opponent_rank'] : null;
        $this->container['opponent_position_rank'] = isset($data['opponent_position_rank']) ? $data['opponent_position_rank'] : null;
        $this->container['fantasy_draft_salary'] = isset($data['fantasy_draft_salary']) ? $data['fantasy_draft_salary'] : null;
        $this->container['team_id'] = isset($data['team_id']) ? $data['team_id'] : null;
        $this->container['opponent_id'] = isset($data['opponent_id']) ? $data['opponent_id'] : null;
        $this->container['day'] = isset($data['day']) ? $data['day'] : null;
        $this->container['date_time'] = isset($data['date_time']) ? $data['date_time'] : null;
        $this->container['global_game_id'] = isset($data['global_game_id']) ? $data['global_game_id'] : null;
        $this->container['global_team_id'] = isset($data['global_team_id']) ? $data['global_team_id'] : null;
        $this->container['global_opponent_id'] = isset($data['global_opponent_id']) ? $data['global_opponent_id'] : null;
        $this->container['draft_kings_position'] = isset($data['draft_kings_position']) ? $data['draft_kings_position'] : null;
        $this->container['fan_duel_position'] = isset($data['fan_duel_position']) ? $data['fan_duel_position'] : null;
        $this->container['fantasy_draft_position'] = isset($data['fantasy_draft_position']) ? $data['fantasy_draft_position'] : null;
        $this->container['yahoo_position'] = isset($data['yahoo_position']) ? $data['yahoo_position'] : null;
        $this->container['fantasy_defense_id'] = isset($data['fantasy_defense_id']) ? $data['fantasy_defense_id'] : null;
        $this->container['score_id'] = isset($data['score_id']) ? $data['score_id'] : null;
        $this->container['fan_duel_fantasy_points_allowed'] = isset($data['fan_duel_fantasy_points_allowed']) ? $data['fan_duel_fantasy_points_allowed'] : null;
        $this->container['fan_duel_quarterback_fantasy_points_allowed'] = isset($data['fan_duel_quarterback_fantasy_points_allowed']) ? $data['fan_duel_quarterback_fantasy_points_allowed'] : null;
        $this->container['fan_duel_runningback_fantasy_points_allowed'] = isset($data['fan_duel_runningback_fantasy_points_allowed']) ? $data['fan_duel_runningback_fantasy_points_allowed'] : null;
        $this->container['fan_duel_wide_receiver_fantasy_points_allowed'] = isset($data['fan_duel_wide_receiver_fantasy_points_allowed']) ? $data['fan_duel_wide_receiver_fantasy_points_allowed'] : null;
        $this->container['fan_duel_tight_end_fantasy_points_allowed'] = isset($data['fan_duel_tight_end_fantasy_points_allowed']) ? $data['fan_duel_tight_end_fantasy_points_allowed'] : null;
        $this->container['fan_duel_kicker_fantasy_points_allowed'] = isset($data['fan_duel_kicker_fantasy_points_allowed']) ? $data['fan_duel_kicker_fantasy_points_allowed'] : null;
        $this->container['draft_kings_fantasy_points_allowed'] = isset($data['draft_kings_fantasy_points_allowed']) ? $data['draft_kings_fantasy_points_allowed'] : null;
        $this->container['draft_kings_quarterback_fantasy_points_allowed'] = isset($data['draft_kings_quarterback_fantasy_points_allowed']) ? $data['draft_kings_quarterback_fantasy_points_allowed'] : null;
        $this->container['draft_kings_runningback_fantasy_points_allowed'] = isset($data['draft_kings_runningback_fantasy_points_allowed']) ? $data['draft_kings_runningback_fantasy_points_allowed'] : null;
        $this->container['draft_kings_wide_receiver_fantasy_points_allowed'] = isset($data['draft_kings_wide_receiver_fantasy_points_allowed']) ? $data['draft_kings_wide_receiver_fantasy_points_allowed'] : null;
        $this->container['draft_kings_tight_end_fantasy_points_allowed'] = isset($data['draft_kings_tight_end_fantasy_points_allowed']) ? $data['draft_kings_tight_end_fantasy_points_allowed'] : null;
        $this->container['draft_kings_kicker_fantasy_points_allowed'] = isset($data['draft_kings_kicker_fantasy_points_allowed']) ? $data['draft_kings_kicker_fantasy_points_allowed'] : null;
        $this->container['yahoo_fantasy_points_allowed'] = isset($data['yahoo_fantasy_points_allowed']) ? $data['yahoo_fantasy_points_allowed'] : null;
        $this->container['yahoo_quarterback_fantasy_points_allowed'] = isset($data['yahoo_quarterback_fantasy_points_allowed']) ? $data['yahoo_quarterback_fantasy_points_allowed'] : null;
        $this->container['yahoo_runningback_fantasy_points_allowed'] = isset($data['yahoo_runningback_fantasy_points_allowed']) ? $data['yahoo_runningback_fantasy_points_allowed'] : null;
        $this->container['yahoo_wide_receiver_fantasy_points_allowed'] = isset($data['yahoo_wide_receiver_fantasy_points_allowed']) ? $data['yahoo_wide_receiver_fantasy_points_allowed'] : null;
        $this->container['yahoo_tight_end_fantasy_points_allowed'] = isset($data['yahoo_tight_end_fantasy_points_allowed']) ? $data['yahoo_tight_end_fantasy_points_allowed'] : null;
        $this->container['yahoo_kicker_fantasy_points_allowed'] = isset($data['yahoo_kicker_fantasy_points_allowed']) ? $data['yahoo_kicker_fantasy_points_allowed'] : null;
        $this->container['fantasy_points_fantasy_draft'] = isset($data['fantasy_points_fantasy_draft']) ? $data['fantasy_points_fantasy_draft'] : null;
        $this->container['fantasy_draft_fantasy_points_allowed'] = isset($data['fantasy_draft_fantasy_points_allowed']) ? $data['fantasy_draft_fantasy_points_allowed'] : null;
        $this->container['fantasy_draft_quarterback_fantasy_points_allowed'] = isset($data['fantasy_draft_quarterback_fantasy_points_allowed']) ? $data['fantasy_draft_quarterback_fantasy_points_allowed'] : null;
        $this->container['fantasy_draft_runningback_fantasy_points_allowed'] = isset($data['fantasy_draft_runningback_fantasy_points_allowed']) ? $data['fantasy_draft_runningback_fantasy_points_allowed'] : null;
        $this->container['fantasy_draft_wide_receiver_fantasy_points_allowed'] = isset($data['fantasy_draft_wide_receiver_fantasy_points_allowed']) ? $data['fantasy_draft_wide_receiver_fantasy_points_allowed'] : null;
        $this->container['fantasy_draft_tight_end_fantasy_points_allowed'] = isset($data['fantasy_draft_tight_end_fantasy_points_allowed']) ? $data['fantasy_draft_tight_end_fantasy_points_allowed'] : null;
        $this->container['fantasy_draft_kicker_fantasy_points_allowed'] = isset($data['fantasy_draft_kicker_fantasy_points_allowed']) ? $data['fantasy_draft_kicker_fantasy_points_allowed'] : null;
        $this->container['scoring_details'] = isset($data['scoring_details']) ? $data['scoring_details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets game_key
     *
     * @return string
     */
    public function getGameKey()
    {
        return $this->container['game_key'];
    }

    /**
     * Sets game_key
     *
     * @param string $game_key game_key
     *
     * @return $this
     */
    public function setGameKey($game_key)
    {
        $this->container['game_key'] = $game_key;

        return $this;
    }

    /**
     * Gets season_type
     *
     * @return int
     */
    public function getSeasonType()
    {
        return $this->container['season_type'];
    }

    /**
     * Sets season_type
     *
     * @param int $season_type season_type
     *
     * @return $this
     */
    public function setSeasonType($season_type)
    {
        $this->container['season_type'] = $season_type;

        return $this;
    }

    /**
     * Gets season
     *
     * @return int
     */
    public function getSeason()
    {
        return $this->container['season'];
    }

    /**
     * Sets season
     *
     * @param int $season season
     *
     * @return $this
     */
    public function setSeason($season)
    {
        $this->container['season'] = $season;

        return $this;
    }

    /**
     * Gets week
     *
     * @return int
     */
    public function getWeek()
    {
        return $this->container['week'];
    }

    /**
     * Sets week
     *
     * @param int $week week
     *
     * @return $this
     */
    public function setWeek($week)
    {
        $this->container['week'] = $week;

        return $this;
    }

    /**
     * Gets date
     *
     * @return string
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param string $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets team
     *
     * @return string
     */
    public function getTeam()
    {
        return $this->container['team'];
    }

    /**
     * Sets team
     *
     * @param string $team team
     *
     * @return $this
     */
    public function setTeam($team)
    {
        $this->container['team'] = $team;

        return $this;
    }

    /**
     * Gets opponent
     *
     * @return string
     */
    public function getOpponent()
    {
        return $this->container['opponent'];
    }

    /**
     * Sets opponent
     *
     * @param string $opponent opponent
     *
     * @return $this
     */
    public function setOpponent($opponent)
    {
        $this->container['opponent'] = $opponent;

        return $this;
    }

    /**
     * Gets points_allowed
     *
     * @return float
     */
    public function getPointsAllowed()
    {
        return $this->container['points_allowed'];
    }

    /**
     * Sets points_allowed
     *
     * @param float $points_allowed points_allowed
     *
     * @return $this
     */
    public function setPointsAllowed($points_allowed)
    {
        $this->container['points_allowed'] = $points_allowed;

        return $this;
    }

    /**
     * Gets touchdowns_scored
     *
     * @return float
     */
    public function getTouchdownsScored()
    {
        return $this->container['touchdowns_scored'];
    }

    /**
     * Sets touchdowns_scored
     *
     * @param float $touchdowns_scored touchdowns_scored
     *
     * @return $this
     */
    public function setTouchdownsScored($touchdowns_scored)
    {
        $this->container['touchdowns_scored'] = $touchdowns_scored;

        return $this;
    }

    /**
     * Gets solo_tackles
     *
     * @return float
     */
    public function getSoloTackles()
    {
        return $this->container['solo_tackles'];
    }

    /**
     * Sets solo_tackles
     *
     * @param float $solo_tackles solo_tackles
     *
     * @return $this
     */
    public function setSoloTackles($solo_tackles)
    {
        $this->container['solo_tackles'] = $solo_tackles;

        return $this;
    }

    /**
     * Gets assisted_tackles
     *
     * @return float
     */
    public function getAssistedTackles()
    {
        return $this->container['assisted_tackles'];
    }

    /**
     * Sets assisted_tackles
     *
     * @param float $assisted_tackles assisted_tackles
     *
     * @return $this
     */
    public function setAssistedTackles($assisted_tackles)
    {
        $this->container['assisted_tackles'] = $assisted_tackles;

        return $this;
    }

    /**
     * Gets sacks
     *
     * @return float
     */
    public function getSacks()
    {
        return $this->container['sacks'];
    }

    /**
     * Sets sacks
     *
     * @param float $sacks sacks
     *
     * @return $this
     */
    public function setSacks($sacks)
    {
        $this->container['sacks'] = $sacks;

        return $this;
    }

    /**
     * Gets sack_yards
     *
     * @return float
     */
    public function getSackYards()
    {
        return $this->container['sack_yards'];
    }

    /**
     * Sets sack_yards
     *
     * @param float $sack_yards sack_yards
     *
     * @return $this
     */
    public function setSackYards($sack_yards)
    {
        $this->container['sack_yards'] = $sack_yards;

        return $this;
    }

    /**
     * Gets passes_defended
     *
     * @return float
     */
    public function getPassesDefended()
    {
        return $this->container['passes_defended'];
    }

    /**
     * Sets passes_defended
     *
     * @param float $passes_defended passes_defended
     *
     * @return $this
     */
    public function setPassesDefended($passes_defended)
    {
        $this->container['passes_defended'] = $passes_defended;

        return $this;
    }

    /**
     * Gets fumbles_forced
     *
     * @return float
     */
    public function getFumblesForced()
    {
        return $this->container['fumbles_forced'];
    }

    /**
     * Sets fumbles_forced
     *
     * @param float $fumbles_forced fumbles_forced
     *
     * @return $this
     */
    public function setFumblesForced($fumbles_forced)
    {
        $this->container['fumbles_forced'] = $fumbles_forced;

        return $this;
    }

    /**
     * Gets fumbles_recovered
     *
     * @return float
     */
    public function getFumblesRecovered()
    {
        return $this->container['fumbles_recovered'];
    }

    /**
     * Sets fumbles_recovered
     *
     * @param float $fumbles_recovered fumbles_recovered
     *
     * @return $this
     */
    public function setFumblesRecovered($fumbles_recovered)
    {
        $this->container['fumbles_recovered'] = $fumbles_recovered;

        return $this;
    }

    /**
     * Gets fumble_return_yards
     *
     * @return float
     */
    public function getFumbleReturnYards()
    {
        return $this->container['fumble_return_yards'];
    }

    /**
     * Sets fumble_return_yards
     *
     * @param float $fumble_return_yards fumble_return_yards
     *
     * @return $this
     */
    public function setFumbleReturnYards($fumble_return_yards)
    {
        $this->container['fumble_return_yards'] = $fumble_return_yards;

        return $this;
    }

    /**
     * Gets fumble_return_touchdowns
     *
     * @return float
     */
    public function getFumbleReturnTouchdowns()
    {
        return $this->container['fumble_return_touchdowns'];
    }

    /**
     * Sets fumble_return_touchdowns
     *
     * @param float $fumble_return_touchdowns fumble_return_touchdowns
     *
     * @return $this
     */
    public function setFumbleReturnTouchdowns($fumble_return_touchdowns)
    {
        $this->container['fumble_return_touchdowns'] = $fumble_return_touchdowns;

        return $this;
    }

    /**
     * Gets interceptions
     *
     * @return float
     */
    public function getInterceptions()
    {
        return $this->container['interceptions'];
    }

    /**
     * Sets interceptions
     *
     * @param float $interceptions interceptions
     *
     * @return $this
     */
    public function setInterceptions($interceptions)
    {
        $this->container['interceptions'] = $interceptions;

        return $this;
    }

    /**
     * Gets interception_return_yards
     *
     * @return float
     */
    public function getInterceptionReturnYards()
    {
        return $this->container['interception_return_yards'];
    }

    /**
     * Sets interception_return_yards
     *
     * @param float $interception_return_yards interception_return_yards
     *
     * @return $this
     */
    public function setInterceptionReturnYards($interception_return_yards)
    {
        $this->container['interception_return_yards'] = $interception_return_yards;

        return $this;
    }

    /**
     * Gets interception_return_touchdowns
     *
     * @return float
     */
    public function getInterceptionReturnTouchdowns()
    {
        return $this->container['interception_return_touchdowns'];
    }

    /**
     * Sets interception_return_touchdowns
     *
     * @param float $interception_return_touchdowns interception_return_touchdowns
     *
     * @return $this
     */
    public function setInterceptionReturnTouchdowns($interception_return_touchdowns)
    {
        $this->container['interception_return_touchdowns'] = $interception_return_touchdowns;

        return $this;
    }

    /**
     * Gets blocked_kicks
     *
     * @return float
     */
    public function getBlockedKicks()
    {
        return $this->container['blocked_kicks'];
    }

    /**
     * Sets blocked_kicks
     *
     * @param float $blocked_kicks blocked_kicks
     *
     * @return $this
     */
    public function setBlockedKicks($blocked_kicks)
    {
        $this->container['blocked_kicks'] = $blocked_kicks;

        return $this;
    }

    /**
     * Gets safeties
     *
     * @return float
     */
    public function getSafeties()
    {
        return $this->container['safeties'];
    }

    /**
     * Sets safeties
     *
     * @param float $safeties safeties
     *
     * @return $this
     */
    public function setSafeties($safeties)
    {
        $this->container['safeties'] = $safeties;

        return $this;
    }

    /**
     * Gets punt_returns
     *
     * @return float
     */
    public function getPuntReturns()
    {
        return $this->container['punt_returns'];
    }

    /**
     * Sets punt_returns
     *
     * @param float $punt_returns punt_returns
     *
     * @return $this
     */
    public function setPuntReturns($punt_returns)
    {
        $this->container['punt_returns'] = $punt_returns;

        return $this;
    }

    /**
     * Gets punt_return_yards
     *
     * @return float
     */
    public function getPuntReturnYards()
    {
        return $this->container['punt_return_yards'];
    }

    /**
     * Sets punt_return_yards
     *
     * @param float $punt_return_yards punt_return_yards
     *
     * @return $this
     */
    public function setPuntReturnYards($punt_return_yards)
    {
        $this->container['punt_return_yards'] = $punt_return_yards;

        return $this;
    }

    /**
     * Gets punt_return_touchdowns
     *
     * @return float
     */
    public function getPuntReturnTouchdowns()
    {
        return $this->container['punt_return_touchdowns'];
    }

    /**
     * Sets punt_return_touchdowns
     *
     * @param float $punt_return_touchdowns punt_return_touchdowns
     *
     * @return $this
     */
    public function setPuntReturnTouchdowns($punt_return_touchdowns)
    {
        $this->container['punt_return_touchdowns'] = $punt_return_touchdowns;

        return $this;
    }

    /**
     * Gets punt_return_long
     *
     * @return float
     */
    public function getPuntReturnLong()
    {
        return $this->container['punt_return_long'];
    }

    /**
     * Sets punt_return_long
     *
     * @param float $punt_return_long punt_return_long
     *
     * @return $this
     */
    public function setPuntReturnLong($punt_return_long)
    {
        $this->container['punt_return_long'] = $punt_return_long;

        return $this;
    }

    /**
     * Gets kick_returns
     *
     * @return float
     */
    public function getKickReturns()
    {
        return $this->container['kick_returns'];
    }

    /**
     * Sets kick_returns
     *
     * @param float $kick_returns kick_returns
     *
     * @return $this
     */
    public function setKickReturns($kick_returns)
    {
        $this->container['kick_returns'] = $kick_returns;

        return $this;
    }

    /**
     * Gets kick_return_yards
     *
     * @return float
     */
    public function getKickReturnYards()
    {
        return $this->container['kick_return_yards'];
    }

    /**
     * Sets kick_return_yards
     *
     * @param float $kick_return_yards kick_return_yards
     *
     * @return $this
     */
    public function setKickReturnYards($kick_return_yards)
    {
        $this->container['kick_return_yards'] = $kick_return_yards;

        return $this;
    }

    /**
     * Gets kick_return_touchdowns
     *
     * @return float
     */
    public function getKickReturnTouchdowns()
    {
        return $this->container['kick_return_touchdowns'];
    }

    /**
     * Sets kick_return_touchdowns
     *
     * @param float $kick_return_touchdowns kick_return_touchdowns
     *
     * @return $this
     */
    public function setKickReturnTouchdowns($kick_return_touchdowns)
    {
        $this->container['kick_return_touchdowns'] = $kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets kick_return_long
     *
     * @return float
     */
    public function getKickReturnLong()
    {
        return $this->container['kick_return_long'];
    }

    /**
     * Sets kick_return_long
     *
     * @param float $kick_return_long kick_return_long
     *
     * @return $this
     */
    public function setKickReturnLong($kick_return_long)
    {
        $this->container['kick_return_long'] = $kick_return_long;

        return $this;
    }

    /**
     * Gets blocked_kick_return_touchdowns
     *
     * @return float
     */
    public function getBlockedKickReturnTouchdowns()
    {
        return $this->container['blocked_kick_return_touchdowns'];
    }

    /**
     * Sets blocked_kick_return_touchdowns
     *
     * @param float $blocked_kick_return_touchdowns blocked_kick_return_touchdowns
     *
     * @return $this
     */
    public function setBlockedKickReturnTouchdowns($blocked_kick_return_touchdowns)
    {
        $this->container['blocked_kick_return_touchdowns'] = $blocked_kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets field_goal_return_touchdowns
     *
     * @return float
     */
    public function getFieldGoalReturnTouchdowns()
    {
        return $this->container['field_goal_return_touchdowns'];
    }

    /**
     * Sets field_goal_return_touchdowns
     *
     * @param float $field_goal_return_touchdowns field_goal_return_touchdowns
     *
     * @return $this
     */
    public function setFieldGoalReturnTouchdowns($field_goal_return_touchdowns)
    {
        $this->container['field_goal_return_touchdowns'] = $field_goal_return_touchdowns;

        return $this;
    }

    /**
     * Gets fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyPointsAllowed()
    {
        return $this->container['fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_points_allowed
     *
     * @param float $fantasy_points_allowed fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyPointsAllowed($fantasy_points_allowed)
    {
        $this->container['fantasy_points_allowed'] = $fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets quarterback_fantasy_points_allowed
     *
     * @return float
     */
    public function getQuarterbackFantasyPointsAllowed()
    {
        return $this->container['quarterback_fantasy_points_allowed'];
    }

    /**
     * Sets quarterback_fantasy_points_allowed
     *
     * @param float $quarterback_fantasy_points_allowed quarterback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setQuarterbackFantasyPointsAllowed($quarterback_fantasy_points_allowed)
    {
        $this->container['quarterback_fantasy_points_allowed'] = $quarterback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets runningback_fantasy_points_allowed
     *
     * @return float
     */
    public function getRunningbackFantasyPointsAllowed()
    {
        return $this->container['runningback_fantasy_points_allowed'];
    }

    /**
     * Sets runningback_fantasy_points_allowed
     *
     * @param float $runningback_fantasy_points_allowed runningback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setRunningbackFantasyPointsAllowed($runningback_fantasy_points_allowed)
    {
        $this->container['runningback_fantasy_points_allowed'] = $runningback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets wide_receiver_fantasy_points_allowed
     *
     * @return float
     */
    public function getWideReceiverFantasyPointsAllowed()
    {
        return $this->container['wide_receiver_fantasy_points_allowed'];
    }

    /**
     * Sets wide_receiver_fantasy_points_allowed
     *
     * @param float $wide_receiver_fantasy_points_allowed wide_receiver_fantasy_points_allowed
     *
     * @return $this
     */
    public function setWideReceiverFantasyPointsAllowed($wide_receiver_fantasy_points_allowed)
    {
        $this->container['wide_receiver_fantasy_points_allowed'] = $wide_receiver_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets tight_end_fantasy_points_allowed
     *
     * @return float
     */
    public function getTightEndFantasyPointsAllowed()
    {
        return $this->container['tight_end_fantasy_points_allowed'];
    }

    /**
     * Sets tight_end_fantasy_points_allowed
     *
     * @param float $tight_end_fantasy_points_allowed tight_end_fantasy_points_allowed
     *
     * @return $this
     */
    public function setTightEndFantasyPointsAllowed($tight_end_fantasy_points_allowed)
    {
        $this->container['tight_end_fantasy_points_allowed'] = $tight_end_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets kicker_fantasy_points_allowed
     *
     * @return float
     */
    public function getKickerFantasyPointsAllowed()
    {
        return $this->container['kicker_fantasy_points_allowed'];
    }

    /**
     * Sets kicker_fantasy_points_allowed
     *
     * @param float $kicker_fantasy_points_allowed kicker_fantasy_points_allowed
     *
     * @return $this
     */
    public function setKickerFantasyPointsAllowed($kicker_fantasy_points_allowed)
    {
        $this->container['kicker_fantasy_points_allowed'] = $kicker_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets blocked_kick_return_yards
     *
     * @return float
     */
    public function getBlockedKickReturnYards()
    {
        return $this->container['blocked_kick_return_yards'];
    }

    /**
     * Sets blocked_kick_return_yards
     *
     * @param float $blocked_kick_return_yards blocked_kick_return_yards
     *
     * @return $this
     */
    public function setBlockedKickReturnYards($blocked_kick_return_yards)
    {
        $this->container['blocked_kick_return_yards'] = $blocked_kick_return_yards;

        return $this;
    }

    /**
     * Gets field_goal_return_yards
     *
     * @return float
     */
    public function getFieldGoalReturnYards()
    {
        return $this->container['field_goal_return_yards'];
    }

    /**
     * Sets field_goal_return_yards
     *
     * @param float $field_goal_return_yards field_goal_return_yards
     *
     * @return $this
     */
    public function setFieldGoalReturnYards($field_goal_return_yards)
    {
        $this->container['field_goal_return_yards'] = $field_goal_return_yards;

        return $this;
    }

    /**
     * Gets quarterback_hits
     *
     * @return float
     */
    public function getQuarterbackHits()
    {
        return $this->container['quarterback_hits'];
    }

    /**
     * Sets quarterback_hits
     *
     * @param float $quarterback_hits quarterback_hits
     *
     * @return $this
     */
    public function setQuarterbackHits($quarterback_hits)
    {
        $this->container['quarterback_hits'] = $quarterback_hits;

        return $this;
    }

    /**
     * Gets tackles_for_loss
     *
     * @return float
     */
    public function getTacklesForLoss()
    {
        return $this->container['tackles_for_loss'];
    }

    /**
     * Sets tackles_for_loss
     *
     * @param float $tackles_for_loss tackles_for_loss
     *
     * @return $this
     */
    public function setTacklesForLoss($tackles_for_loss)
    {
        $this->container['tackles_for_loss'] = $tackles_for_loss;

        return $this;
    }

    /**
     * Gets defensive_touchdowns
     *
     * @return float
     */
    public function getDefensiveTouchdowns()
    {
        return $this->container['defensive_touchdowns'];
    }

    /**
     * Sets defensive_touchdowns
     *
     * @param float $defensive_touchdowns defensive_touchdowns
     *
     * @return $this
     */
    public function setDefensiveTouchdowns($defensive_touchdowns)
    {
        $this->container['defensive_touchdowns'] = $defensive_touchdowns;

        return $this;
    }

    /**
     * Gets special_teams_touchdowns
     *
     * @return float
     */
    public function getSpecialTeamsTouchdowns()
    {
        return $this->container['special_teams_touchdowns'];
    }

    /**
     * Sets special_teams_touchdowns
     *
     * @param float $special_teams_touchdowns special_teams_touchdowns
     *
     * @return $this
     */
    public function setSpecialTeamsTouchdowns($special_teams_touchdowns)
    {
        $this->container['special_teams_touchdowns'] = $special_teams_touchdowns;

        return $this;
    }

    /**
     * Gets is_game_over
     *
     * @return bool
     */
    public function getIsGameOver()
    {
        return $this->container['is_game_over'];
    }

    /**
     * Sets is_game_over
     *
     * @param bool $is_game_over is_game_over
     *
     * @return $this
     */
    public function setIsGameOver($is_game_over)
    {
        $this->container['is_game_over'] = $is_game_over;

        return $this;
    }

    /**
     * Gets fantasy_points
     *
     * @return float
     */
    public function getFantasyPoints()
    {
        return $this->container['fantasy_points'];
    }

    /**
     * Sets fantasy_points
     *
     * @param float $fantasy_points fantasy_points
     *
     * @return $this
     */
    public function setFantasyPoints($fantasy_points)
    {
        $this->container['fantasy_points'] = $fantasy_points;

        return $this;
    }

    /**
     * Gets stadium
     *
     * @return string
     */
    public function getStadium()
    {
        return $this->container['stadium'];
    }

    /**
     * Sets stadium
     *
     * @param string $stadium stadium
     *
     * @return $this
     */
    public function setStadium($stadium)
    {
        $this->container['stadium'] = $stadium;

        return $this;
    }

    /**
     * Gets temperature
     *
     * @return int
     */
    public function getTemperature()
    {
        return $this->container['temperature'];
    }

    /**
     * Sets temperature
     *
     * @param int $temperature temperature
     *
     * @return $this
     */
    public function setTemperature($temperature)
    {
        $this->container['temperature'] = $temperature;

        return $this;
    }

    /**
     * Gets humidity
     *
     * @return int
     */
    public function getHumidity()
    {
        return $this->container['humidity'];
    }

    /**
     * Sets humidity
     *
     * @param int $humidity humidity
     *
     * @return $this
     */
    public function setHumidity($humidity)
    {
        $this->container['humidity'] = $humidity;

        return $this;
    }

    /**
     * Gets wind_speed
     *
     * @return int
     */
    public function getWindSpeed()
    {
        return $this->container['wind_speed'];
    }

    /**
     * Sets wind_speed
     *
     * @param int $wind_speed wind_speed
     *
     * @return $this
     */
    public function setWindSpeed($wind_speed)
    {
        $this->container['wind_speed'] = $wind_speed;

        return $this;
    }

    /**
     * Gets third_down_attempts
     *
     * @return float
     */
    public function getThirdDownAttempts()
    {
        return $this->container['third_down_attempts'];
    }

    /**
     * Sets third_down_attempts
     *
     * @param float $third_down_attempts third_down_attempts
     *
     * @return $this
     */
    public function setThirdDownAttempts($third_down_attempts)
    {
        $this->container['third_down_attempts'] = $third_down_attempts;

        return $this;
    }

    /**
     * Gets third_down_conversions
     *
     * @return float
     */
    public function getThirdDownConversions()
    {
        return $this->container['third_down_conversions'];
    }

    /**
     * Sets third_down_conversions
     *
     * @param float $third_down_conversions third_down_conversions
     *
     * @return $this
     */
    public function setThirdDownConversions($third_down_conversions)
    {
        $this->container['third_down_conversions'] = $third_down_conversions;

        return $this;
    }

    /**
     * Gets fourth_down_attempts
     *
     * @return float
     */
    public function getFourthDownAttempts()
    {
        return $this->container['fourth_down_attempts'];
    }

    /**
     * Sets fourth_down_attempts
     *
     * @param float $fourth_down_attempts fourth_down_attempts
     *
     * @return $this
     */
    public function setFourthDownAttempts($fourth_down_attempts)
    {
        $this->container['fourth_down_attempts'] = $fourth_down_attempts;

        return $this;
    }

    /**
     * Gets fourth_down_conversions
     *
     * @return float
     */
    public function getFourthDownConversions()
    {
        return $this->container['fourth_down_conversions'];
    }

    /**
     * Sets fourth_down_conversions
     *
     * @param float $fourth_down_conversions fourth_down_conversions
     *
     * @return $this
     */
    public function setFourthDownConversions($fourth_down_conversions)
    {
        $this->container['fourth_down_conversions'] = $fourth_down_conversions;

        return $this;
    }

    /**
     * Gets points_allowed_by_defense_special_teams
     *
     * @return float
     */
    public function getPointsAllowedByDefenseSpecialTeams()
    {
        return $this->container['points_allowed_by_defense_special_teams'];
    }

    /**
     * Sets points_allowed_by_defense_special_teams
     *
     * @param float $points_allowed_by_defense_special_teams points_allowed_by_defense_special_teams
     *
     * @return $this
     */
    public function setPointsAllowedByDefenseSpecialTeams($points_allowed_by_defense_special_teams)
    {
        $this->container['points_allowed_by_defense_special_teams'] = $points_allowed_by_defense_special_teams;

        return $this;
    }

    /**
     * Gets fan_duel_salary
     *
     * @return int
     */
    public function getFanDuelSalary()
    {
        return $this->container['fan_duel_salary'];
    }

    /**
     * Sets fan_duel_salary
     *
     * @param int $fan_duel_salary fan_duel_salary
     *
     * @return $this
     */
    public function setFanDuelSalary($fan_duel_salary)
    {
        $this->container['fan_duel_salary'] = $fan_duel_salary;

        return $this;
    }

    /**
     * Gets draft_kings_salary
     *
     * @return int
     */
    public function getDraftKingsSalary()
    {
        return $this->container['draft_kings_salary'];
    }

    /**
     * Sets draft_kings_salary
     *
     * @param int $draft_kings_salary draft_kings_salary
     *
     * @return $this
     */
    public function setDraftKingsSalary($draft_kings_salary)
    {
        $this->container['draft_kings_salary'] = $draft_kings_salary;

        return $this;
    }

    /**
     * Gets fantasy_data_salary
     *
     * @return int
     */
    public function getFantasyDataSalary()
    {
        return $this->container['fantasy_data_salary'];
    }

    /**
     * Sets fantasy_data_salary
     *
     * @param int $fantasy_data_salary fantasy_data_salary
     *
     * @return $this
     */
    public function setFantasyDataSalary($fantasy_data_salary)
    {
        $this->container['fantasy_data_salary'] = $fantasy_data_salary;

        return $this;
    }

    /**
     * Gets victiv_salary
     *
     * @return int
     */
    public function getVictivSalary()
    {
        return $this->container['victiv_salary'];
    }

    /**
     * Sets victiv_salary
     *
     * @param int $victiv_salary victiv_salary
     *
     * @return $this
     */
    public function setVictivSalary($victiv_salary)
    {
        $this->container['victiv_salary'] = $victiv_salary;

        return $this;
    }

    /**
     * Gets two_point_conversion_returns
     *
     * @return float
     */
    public function getTwoPointConversionReturns()
    {
        return $this->container['two_point_conversion_returns'];
    }

    /**
     * Sets two_point_conversion_returns
     *
     * @param float $two_point_conversion_returns two_point_conversion_returns
     *
     * @return $this
     */
    public function setTwoPointConversionReturns($two_point_conversion_returns)
    {
        $this->container['two_point_conversion_returns'] = $two_point_conversion_returns;

        return $this;
    }

    /**
     * Gets fantasy_points_fan_duel
     *
     * @return float
     */
    public function getFantasyPointsFanDuel()
    {
        return $this->container['fantasy_points_fan_duel'];
    }

    /**
     * Sets fantasy_points_fan_duel
     *
     * @param float $fantasy_points_fan_duel fantasy_points_fan_duel
     *
     * @return $this
     */
    public function setFantasyPointsFanDuel($fantasy_points_fan_duel)
    {
        $this->container['fantasy_points_fan_duel'] = $fantasy_points_fan_duel;

        return $this;
    }

    /**
     * Gets fantasy_points_draft_kings
     *
     * @return float
     */
    public function getFantasyPointsDraftKings()
    {
        return $this->container['fantasy_points_draft_kings'];
    }

    /**
     * Sets fantasy_points_draft_kings
     *
     * @param float $fantasy_points_draft_kings fantasy_points_draft_kings
     *
     * @return $this
     */
    public function setFantasyPointsDraftKings($fantasy_points_draft_kings)
    {
        $this->container['fantasy_points_draft_kings'] = $fantasy_points_draft_kings;

        return $this;
    }

    /**
     * Gets offensive_yards_allowed
     *
     * @return float
     */
    public function getOffensiveYardsAllowed()
    {
        return $this->container['offensive_yards_allowed'];
    }

    /**
     * Sets offensive_yards_allowed
     *
     * @param float $offensive_yards_allowed offensive_yards_allowed
     *
     * @return $this
     */
    public function setOffensiveYardsAllowed($offensive_yards_allowed)
    {
        $this->container['offensive_yards_allowed'] = $offensive_yards_allowed;

        return $this;
    }

    /**
     * Gets yahoo_salary
     *
     * @return int
     */
    public function getYahooSalary()
    {
        return $this->container['yahoo_salary'];
    }

    /**
     * Sets yahoo_salary
     *
     * @param int $yahoo_salary yahoo_salary
     *
     * @return $this
     */
    public function setYahooSalary($yahoo_salary)
    {
        $this->container['yahoo_salary'] = $yahoo_salary;

        return $this;
    }

    /**
     * Gets player_id
     *
     * @return int
     */
    public function getPlayerId()
    {
        return $this->container['player_id'];
    }

    /**
     * Sets player_id
     *
     * @param int $player_id player_id
     *
     * @return $this
     */
    public function setPlayerId($player_id)
    {
        $this->container['player_id'] = $player_id;

        return $this;
    }

    /**
     * Gets fantasy_points_yahoo
     *
     * @return float
     */
    public function getFantasyPointsYahoo()
    {
        return $this->container['fantasy_points_yahoo'];
    }

    /**
     * Sets fantasy_points_yahoo
     *
     * @param float $fantasy_points_yahoo fantasy_points_yahoo
     *
     * @return $this
     */
    public function setFantasyPointsYahoo($fantasy_points_yahoo)
    {
        $this->container['fantasy_points_yahoo'] = $fantasy_points_yahoo;

        return $this;
    }

    /**
     * Gets home_or_away
     *
     * @return string
     */
    public function getHomeOrAway()
    {
        return $this->container['home_or_away'];
    }

    /**
     * Sets home_or_away
     *
     * @param string $home_or_away home_or_away
     *
     * @return $this
     */
    public function setHomeOrAway($home_or_away)
    {
        $this->container['home_or_away'] = $home_or_away;

        return $this;
    }

    /**
     * Gets opponent_rank
     *
     * @return int
     */
    public function getOpponentRank()
    {
        return $this->container['opponent_rank'];
    }

    /**
     * Sets opponent_rank
     *
     * @param int $opponent_rank opponent_rank
     *
     * @return $this
     */
    public function setOpponentRank($opponent_rank)
    {
        $this->container['opponent_rank'] = $opponent_rank;

        return $this;
    }

    /**
     * Gets opponent_position_rank
     *
     * @return int
     */
    public function getOpponentPositionRank()
    {
        return $this->container['opponent_position_rank'];
    }

    /**
     * Sets opponent_position_rank
     *
     * @param int $opponent_position_rank opponent_position_rank
     *
     * @return $this
     */
    public function setOpponentPositionRank($opponent_position_rank)
    {
        $this->container['opponent_position_rank'] = $opponent_position_rank;

        return $this;
    }

    /**
     * Gets fantasy_draft_salary
     *
     * @return int
     */
    public function getFantasyDraftSalary()
    {
        return $this->container['fantasy_draft_salary'];
    }

    /**
     * Sets fantasy_draft_salary
     *
     * @param int $fantasy_draft_salary fantasy_draft_salary
     *
     * @return $this
     */
    public function setFantasyDraftSalary($fantasy_draft_salary)
    {
        $this->container['fantasy_draft_salary'] = $fantasy_draft_salary;

        return $this;
    }

    /**
     * Gets team_id
     *
     * @return int
     */
    public function getTeamId()
    {
        return $this->container['team_id'];
    }

    /**
     * Sets team_id
     *
     * @param int $team_id team_id
     *
     * @return $this
     */
    public function setTeamId($team_id)
    {
        $this->container['team_id'] = $team_id;

        return $this;
    }

    /**
     * Gets opponent_id
     *
     * @return int
     */
    public function getOpponentId()
    {
        return $this->container['opponent_id'];
    }

    /**
     * Sets opponent_id
     *
     * @param int $opponent_id opponent_id
     *
     * @return $this
     */
    public function setOpponentId($opponent_id)
    {
        $this->container['opponent_id'] = $opponent_id;

        return $this;
    }

    /**
     * Gets day
     *
     * @return string
     */
    public function getDay()
    {
        return $this->container['day'];
    }

    /**
     * Sets day
     *
     * @param string $day day
     *
     * @return $this
     */
    public function setDay($day)
    {
        $this->container['day'] = $day;

        return $this;
    }

    /**
     * Gets date_time
     *
     * @return string
     */
    public function getDateTime()
    {
        return $this->container['date_time'];
    }

    /**
     * Sets date_time
     *
     * @param string $date_time date_time
     *
     * @return $this
     */
    public function setDateTime($date_time)
    {
        $this->container['date_time'] = $date_time;

        return $this;
    }

    /**
     * Gets global_game_id
     *
     * @return int
     */
    public function getGlobalGameId()
    {
        return $this->container['global_game_id'];
    }

    /**
     * Sets global_game_id
     *
     * @param int $global_game_id global_game_id
     *
     * @return $this
     */
    public function setGlobalGameId($global_game_id)
    {
        $this->container['global_game_id'] = $global_game_id;

        return $this;
    }

    /**
     * Gets global_team_id
     *
     * @return int
     */
    public function getGlobalTeamId()
    {
        return $this->container['global_team_id'];
    }

    /**
     * Sets global_team_id
     *
     * @param int $global_team_id global_team_id
     *
     * @return $this
     */
    public function setGlobalTeamId($global_team_id)
    {
        $this->container['global_team_id'] = $global_team_id;

        return $this;
    }

    /**
     * Gets global_opponent_id
     *
     * @return int
     */
    public function getGlobalOpponentId()
    {
        return $this->container['global_opponent_id'];
    }

    /**
     * Sets global_opponent_id
     *
     * @param int $global_opponent_id global_opponent_id
     *
     * @return $this
     */
    public function setGlobalOpponentId($global_opponent_id)
    {
        $this->container['global_opponent_id'] = $global_opponent_id;

        return $this;
    }

    /**
     * Gets draft_kings_position
     *
     * @return string
     */
    public function getDraftKingsPosition()
    {
        return $this->container['draft_kings_position'];
    }

    /**
     * Sets draft_kings_position
     *
     * @param string $draft_kings_position draft_kings_position
     *
     * @return $this
     */
    public function setDraftKingsPosition($draft_kings_position)
    {
        $this->container['draft_kings_position'] = $draft_kings_position;

        return $this;
    }

    /**
     * Gets fan_duel_position
     *
     * @return string
     */
    public function getFanDuelPosition()
    {
        return $this->container['fan_duel_position'];
    }

    /**
     * Sets fan_duel_position
     *
     * @param string $fan_duel_position fan_duel_position
     *
     * @return $this
     */
    public function setFanDuelPosition($fan_duel_position)
    {
        $this->container['fan_duel_position'] = $fan_duel_position;

        return $this;
    }

    /**
     * Gets fantasy_draft_position
     *
     * @return string
     */
    public function getFantasyDraftPosition()
    {
        return $this->container['fantasy_draft_position'];
    }

    /**
     * Sets fantasy_draft_position
     *
     * @param string $fantasy_draft_position fantasy_draft_position
     *
     * @return $this
     */
    public function setFantasyDraftPosition($fantasy_draft_position)
    {
        $this->container['fantasy_draft_position'] = $fantasy_draft_position;

        return $this;
    }

    /**
     * Gets yahoo_position
     *
     * @return string
     */
    public function getYahooPosition()
    {
        return $this->container['yahoo_position'];
    }

    /**
     * Sets yahoo_position
     *
     * @param string $yahoo_position yahoo_position
     *
     * @return $this
     */
    public function setYahooPosition($yahoo_position)
    {
        $this->container['yahoo_position'] = $yahoo_position;

        return $this;
    }

    /**
     * Gets fantasy_defense_id
     *
     * @return int
     */
    public function getFantasyDefenseId()
    {
        return $this->container['fantasy_defense_id'];
    }

    /**
     * Sets fantasy_defense_id
     *
     * @param int $fantasy_defense_id fantasy_defense_id
     *
     * @return $this
     */
    public function setFantasyDefenseId($fantasy_defense_id)
    {
        $this->container['fantasy_defense_id'] = $fantasy_defense_id;

        return $this;
    }

    /**
     * Gets score_id
     *
     * @return int
     */
    public function getScoreId()
    {
        return $this->container['score_id'];
    }

    /**
     * Sets score_id
     *
     * @param int $score_id score_id
     *
     * @return $this
     */
    public function setScoreId($score_id)
    {
        $this->container['score_id'] = $score_id;

        return $this;
    }

    /**
     * Gets fan_duel_fantasy_points_allowed
     *
     * @return float
     */
    public function getFanDuelFantasyPointsAllowed()
    {
        return $this->container['fan_duel_fantasy_points_allowed'];
    }

    /**
     * Sets fan_duel_fantasy_points_allowed
     *
     * @param float $fan_duel_fantasy_points_allowed fan_duel_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFanDuelFantasyPointsAllowed($fan_duel_fantasy_points_allowed)
    {
        $this->container['fan_duel_fantasy_points_allowed'] = $fan_duel_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fan_duel_quarterback_fantasy_points_allowed
     *
     * @return float
     */
    public function getFanDuelQuarterbackFantasyPointsAllowed()
    {
        return $this->container['fan_duel_quarterback_fantasy_points_allowed'];
    }

    /**
     * Sets fan_duel_quarterback_fantasy_points_allowed
     *
     * @param float $fan_duel_quarterback_fantasy_points_allowed fan_duel_quarterback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFanDuelQuarterbackFantasyPointsAllowed($fan_duel_quarterback_fantasy_points_allowed)
    {
        $this->container['fan_duel_quarterback_fantasy_points_allowed'] = $fan_duel_quarterback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fan_duel_runningback_fantasy_points_allowed
     *
     * @return float
     */
    public function getFanDuelRunningbackFantasyPointsAllowed()
    {
        return $this->container['fan_duel_runningback_fantasy_points_allowed'];
    }

    /**
     * Sets fan_duel_runningback_fantasy_points_allowed
     *
     * @param float $fan_duel_runningback_fantasy_points_allowed fan_duel_runningback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFanDuelRunningbackFantasyPointsAllowed($fan_duel_runningback_fantasy_points_allowed)
    {
        $this->container['fan_duel_runningback_fantasy_points_allowed'] = $fan_duel_runningback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fan_duel_wide_receiver_fantasy_points_allowed
     *
     * @return float
     */
    public function getFanDuelWideReceiverFantasyPointsAllowed()
    {
        return $this->container['fan_duel_wide_receiver_fantasy_points_allowed'];
    }

    /**
     * Sets fan_duel_wide_receiver_fantasy_points_allowed
     *
     * @param float $fan_duel_wide_receiver_fantasy_points_allowed fan_duel_wide_receiver_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFanDuelWideReceiverFantasyPointsAllowed($fan_duel_wide_receiver_fantasy_points_allowed)
    {
        $this->container['fan_duel_wide_receiver_fantasy_points_allowed'] = $fan_duel_wide_receiver_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fan_duel_tight_end_fantasy_points_allowed
     *
     * @return float
     */
    public function getFanDuelTightEndFantasyPointsAllowed()
    {
        return $this->container['fan_duel_tight_end_fantasy_points_allowed'];
    }

    /**
     * Sets fan_duel_tight_end_fantasy_points_allowed
     *
     * @param float $fan_duel_tight_end_fantasy_points_allowed fan_duel_tight_end_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFanDuelTightEndFantasyPointsAllowed($fan_duel_tight_end_fantasy_points_allowed)
    {
        $this->container['fan_duel_tight_end_fantasy_points_allowed'] = $fan_duel_tight_end_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fan_duel_kicker_fantasy_points_allowed
     *
     * @return float
     */
    public function getFanDuelKickerFantasyPointsAllowed()
    {
        return $this->container['fan_duel_kicker_fantasy_points_allowed'];
    }

    /**
     * Sets fan_duel_kicker_fantasy_points_allowed
     *
     * @param float $fan_duel_kicker_fantasy_points_allowed fan_duel_kicker_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFanDuelKickerFantasyPointsAllowed($fan_duel_kicker_fantasy_points_allowed)
    {
        $this->container['fan_duel_kicker_fantasy_points_allowed'] = $fan_duel_kicker_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets draft_kings_fantasy_points_allowed
     *
     * @return float
     */
    public function getDraftKingsFantasyPointsAllowed()
    {
        return $this->container['draft_kings_fantasy_points_allowed'];
    }

    /**
     * Sets draft_kings_fantasy_points_allowed
     *
     * @param float $draft_kings_fantasy_points_allowed draft_kings_fantasy_points_allowed
     *
     * @return $this
     */
    public function setDraftKingsFantasyPointsAllowed($draft_kings_fantasy_points_allowed)
    {
        $this->container['draft_kings_fantasy_points_allowed'] = $draft_kings_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets draft_kings_quarterback_fantasy_points_allowed
     *
     * @return float
     */
    public function getDraftKingsQuarterbackFantasyPointsAllowed()
    {
        return $this->container['draft_kings_quarterback_fantasy_points_allowed'];
    }

    /**
     * Sets draft_kings_quarterback_fantasy_points_allowed
     *
     * @param float $draft_kings_quarterback_fantasy_points_allowed draft_kings_quarterback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setDraftKingsQuarterbackFantasyPointsAllowed($draft_kings_quarterback_fantasy_points_allowed)
    {
        $this->container['draft_kings_quarterback_fantasy_points_allowed'] = $draft_kings_quarterback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets draft_kings_runningback_fantasy_points_allowed
     *
     * @return float
     */
    public function getDraftKingsRunningbackFantasyPointsAllowed()
    {
        return $this->container['draft_kings_runningback_fantasy_points_allowed'];
    }

    /**
     * Sets draft_kings_runningback_fantasy_points_allowed
     *
     * @param float $draft_kings_runningback_fantasy_points_allowed draft_kings_runningback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setDraftKingsRunningbackFantasyPointsAllowed($draft_kings_runningback_fantasy_points_allowed)
    {
        $this->container['draft_kings_runningback_fantasy_points_allowed'] = $draft_kings_runningback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets draft_kings_wide_receiver_fantasy_points_allowed
     *
     * @return float
     */
    public function getDraftKingsWideReceiverFantasyPointsAllowed()
    {
        return $this->container['draft_kings_wide_receiver_fantasy_points_allowed'];
    }

    /**
     * Sets draft_kings_wide_receiver_fantasy_points_allowed
     *
     * @param float $draft_kings_wide_receiver_fantasy_points_allowed draft_kings_wide_receiver_fantasy_points_allowed
     *
     * @return $this
     */
    public function setDraftKingsWideReceiverFantasyPointsAllowed($draft_kings_wide_receiver_fantasy_points_allowed)
    {
        $this->container['draft_kings_wide_receiver_fantasy_points_allowed'] = $draft_kings_wide_receiver_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets draft_kings_tight_end_fantasy_points_allowed
     *
     * @return float
     */
    public function getDraftKingsTightEndFantasyPointsAllowed()
    {
        return $this->container['draft_kings_tight_end_fantasy_points_allowed'];
    }

    /**
     * Sets draft_kings_tight_end_fantasy_points_allowed
     *
     * @param float $draft_kings_tight_end_fantasy_points_allowed draft_kings_tight_end_fantasy_points_allowed
     *
     * @return $this
     */
    public function setDraftKingsTightEndFantasyPointsAllowed($draft_kings_tight_end_fantasy_points_allowed)
    {
        $this->container['draft_kings_tight_end_fantasy_points_allowed'] = $draft_kings_tight_end_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets draft_kings_kicker_fantasy_points_allowed
     *
     * @return float
     */
    public function getDraftKingsKickerFantasyPointsAllowed()
    {
        return $this->container['draft_kings_kicker_fantasy_points_allowed'];
    }

    /**
     * Sets draft_kings_kicker_fantasy_points_allowed
     *
     * @param float $draft_kings_kicker_fantasy_points_allowed draft_kings_kicker_fantasy_points_allowed
     *
     * @return $this
     */
    public function setDraftKingsKickerFantasyPointsAllowed($draft_kings_kicker_fantasy_points_allowed)
    {
        $this->container['draft_kings_kicker_fantasy_points_allowed'] = $draft_kings_kicker_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets yahoo_fantasy_points_allowed
     *
     * @return float
     */
    public function getYahooFantasyPointsAllowed()
    {
        return $this->container['yahoo_fantasy_points_allowed'];
    }

    /**
     * Sets yahoo_fantasy_points_allowed
     *
     * @param float $yahoo_fantasy_points_allowed yahoo_fantasy_points_allowed
     *
     * @return $this
     */
    public function setYahooFantasyPointsAllowed($yahoo_fantasy_points_allowed)
    {
        $this->container['yahoo_fantasy_points_allowed'] = $yahoo_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets yahoo_quarterback_fantasy_points_allowed
     *
     * @return float
     */
    public function getYahooQuarterbackFantasyPointsAllowed()
    {
        return $this->container['yahoo_quarterback_fantasy_points_allowed'];
    }

    /**
     * Sets yahoo_quarterback_fantasy_points_allowed
     *
     * @param float $yahoo_quarterback_fantasy_points_allowed yahoo_quarterback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setYahooQuarterbackFantasyPointsAllowed($yahoo_quarterback_fantasy_points_allowed)
    {
        $this->container['yahoo_quarterback_fantasy_points_allowed'] = $yahoo_quarterback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets yahoo_runningback_fantasy_points_allowed
     *
     * @return float
     */
    public function getYahooRunningbackFantasyPointsAllowed()
    {
        return $this->container['yahoo_runningback_fantasy_points_allowed'];
    }

    /**
     * Sets yahoo_runningback_fantasy_points_allowed
     *
     * @param float $yahoo_runningback_fantasy_points_allowed yahoo_runningback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setYahooRunningbackFantasyPointsAllowed($yahoo_runningback_fantasy_points_allowed)
    {
        $this->container['yahoo_runningback_fantasy_points_allowed'] = $yahoo_runningback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets yahoo_wide_receiver_fantasy_points_allowed
     *
     * @return float
     */
    public function getYahooWideReceiverFantasyPointsAllowed()
    {
        return $this->container['yahoo_wide_receiver_fantasy_points_allowed'];
    }

    /**
     * Sets yahoo_wide_receiver_fantasy_points_allowed
     *
     * @param float $yahoo_wide_receiver_fantasy_points_allowed yahoo_wide_receiver_fantasy_points_allowed
     *
     * @return $this
     */
    public function setYahooWideReceiverFantasyPointsAllowed($yahoo_wide_receiver_fantasy_points_allowed)
    {
        $this->container['yahoo_wide_receiver_fantasy_points_allowed'] = $yahoo_wide_receiver_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets yahoo_tight_end_fantasy_points_allowed
     *
     * @return float
     */
    public function getYahooTightEndFantasyPointsAllowed()
    {
        return $this->container['yahoo_tight_end_fantasy_points_allowed'];
    }

    /**
     * Sets yahoo_tight_end_fantasy_points_allowed
     *
     * @param float $yahoo_tight_end_fantasy_points_allowed yahoo_tight_end_fantasy_points_allowed
     *
     * @return $this
     */
    public function setYahooTightEndFantasyPointsAllowed($yahoo_tight_end_fantasy_points_allowed)
    {
        $this->container['yahoo_tight_end_fantasy_points_allowed'] = $yahoo_tight_end_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets yahoo_kicker_fantasy_points_allowed
     *
     * @return float
     */
    public function getYahooKickerFantasyPointsAllowed()
    {
        return $this->container['yahoo_kicker_fantasy_points_allowed'];
    }

    /**
     * Sets yahoo_kicker_fantasy_points_allowed
     *
     * @param float $yahoo_kicker_fantasy_points_allowed yahoo_kicker_fantasy_points_allowed
     *
     * @return $this
     */
    public function setYahooKickerFantasyPointsAllowed($yahoo_kicker_fantasy_points_allowed)
    {
        $this->container['yahoo_kicker_fantasy_points_allowed'] = $yahoo_kicker_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fantasy_points_fantasy_draft
     *
     * @return float
     */
    public function getFantasyPointsFantasyDraft()
    {
        return $this->container['fantasy_points_fantasy_draft'];
    }

    /**
     * Sets fantasy_points_fantasy_draft
     *
     * @param float $fantasy_points_fantasy_draft fantasy_points_fantasy_draft
     *
     * @return $this
     */
    public function setFantasyPointsFantasyDraft($fantasy_points_fantasy_draft)
    {
        $this->container['fantasy_points_fantasy_draft'] = $fantasy_points_fantasy_draft;

        return $this;
    }

    /**
     * Gets fantasy_draft_fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyDraftFantasyPointsAllowed()
    {
        return $this->container['fantasy_draft_fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_draft_fantasy_points_allowed
     *
     * @param float $fantasy_draft_fantasy_points_allowed fantasy_draft_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyDraftFantasyPointsAllowed($fantasy_draft_fantasy_points_allowed)
    {
        $this->container['fantasy_draft_fantasy_points_allowed'] = $fantasy_draft_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fantasy_draft_quarterback_fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyDraftQuarterbackFantasyPointsAllowed()
    {
        return $this->container['fantasy_draft_quarterback_fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_draft_quarterback_fantasy_points_allowed
     *
     * @param float $fantasy_draft_quarterback_fantasy_points_allowed fantasy_draft_quarterback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyDraftQuarterbackFantasyPointsAllowed($fantasy_draft_quarterback_fantasy_points_allowed)
    {
        $this->container['fantasy_draft_quarterback_fantasy_points_allowed'] = $fantasy_draft_quarterback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fantasy_draft_runningback_fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyDraftRunningbackFantasyPointsAllowed()
    {
        return $this->container['fantasy_draft_runningback_fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_draft_runningback_fantasy_points_allowed
     *
     * @param float $fantasy_draft_runningback_fantasy_points_allowed fantasy_draft_runningback_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyDraftRunningbackFantasyPointsAllowed($fantasy_draft_runningback_fantasy_points_allowed)
    {
        $this->container['fantasy_draft_runningback_fantasy_points_allowed'] = $fantasy_draft_runningback_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fantasy_draft_wide_receiver_fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyDraftWideReceiverFantasyPointsAllowed()
    {
        return $this->container['fantasy_draft_wide_receiver_fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_draft_wide_receiver_fantasy_points_allowed
     *
     * @param float $fantasy_draft_wide_receiver_fantasy_points_allowed fantasy_draft_wide_receiver_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyDraftWideReceiverFantasyPointsAllowed($fantasy_draft_wide_receiver_fantasy_points_allowed)
    {
        $this->container['fantasy_draft_wide_receiver_fantasy_points_allowed'] = $fantasy_draft_wide_receiver_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fantasy_draft_tight_end_fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyDraftTightEndFantasyPointsAllowed()
    {
        return $this->container['fantasy_draft_tight_end_fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_draft_tight_end_fantasy_points_allowed
     *
     * @param float $fantasy_draft_tight_end_fantasy_points_allowed fantasy_draft_tight_end_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyDraftTightEndFantasyPointsAllowed($fantasy_draft_tight_end_fantasy_points_allowed)
    {
        $this->container['fantasy_draft_tight_end_fantasy_points_allowed'] = $fantasy_draft_tight_end_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets fantasy_draft_kicker_fantasy_points_allowed
     *
     * @return float
     */
    public function getFantasyDraftKickerFantasyPointsAllowed()
    {
        return $this->container['fantasy_draft_kicker_fantasy_points_allowed'];
    }

    /**
     * Sets fantasy_draft_kicker_fantasy_points_allowed
     *
     * @param float $fantasy_draft_kicker_fantasy_points_allowed fantasy_draft_kicker_fantasy_points_allowed
     *
     * @return $this
     */
    public function setFantasyDraftKickerFantasyPointsAllowed($fantasy_draft_kicker_fantasy_points_allowed)
    {
        $this->container['fantasy_draft_kicker_fantasy_points_allowed'] = $fantasy_draft_kicker_fantasy_points_allowed;

        return $this;
    }

    /**
     * Gets scoring_details
     *
     * @return \Acme\FantasyDataStats\\ScoringDetail[]
     */
    public function getScoringDetails()
    {
        return $this->container['scoring_details'];
    }

    /**
     * Sets scoring_details
     *
     * @param \Acme\FantasyDataStats\\ScoringDetail[] $scoring_details scoring_details
     *
     * @return $this
     */
    public function setScoringDetails($scoring_details)
    {
        $this->container['scoring_details'] = $scoring_details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param  integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param  integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param  integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


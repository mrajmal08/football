<?php
/**
 * PlayerSeasonThirdDown
 *
 * PHP version 5
 *
 * @category Class
 * @package  Acme\FantasyDataStats
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NFL v3 Stats
 *
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Acme\FantasyDataStats;

use \ArrayAccess;
use \Acme\FantasyDataStats\ObjectSerializer;

/**
 * PlayerSeasonThirdDown Class Doc Comment
 *
 * @category Class
 * @package     Acme\FantasyDataStats
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PlayerSeasonThirdDown implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'PlayerSeasonThirdDown';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'player_id' => 'int',
        'season_type' => 'int',
        'season' => 'int',
        'team' => 'string',
        'number' => 'int',
        'name' => 'string',
        'position' => 'string',
        'position_category' => 'string',
        'activated' => 'int',
        'played' => 'int',
        'started' => 'int',
        'passing_attempts' => 'float',
        'passing_completions' => 'float',
        'passing_yards' => 'float',
        'passing_completion_percentage' => 'float',
        'passing_yards_per_attempt' => 'float',
        'passing_yards_per_completion' => 'float',
        'passing_touchdowns' => 'float',
        'passing_interceptions' => 'float',
        'passing_rating' => 'float',
        'passing_long' => 'float',
        'passing_sacks' => 'float',
        'passing_sack_yards' => 'float',
        'rushing_attempts' => 'float',
        'rushing_yards' => 'float',
        'rushing_yards_per_attempt' => 'float',
        'rushing_touchdowns' => 'float',
        'rushing_long' => 'float',
        'receiving_targets' => 'float',
        'receptions' => 'float',
        'receiving_yards' => 'float',
        'receiving_yards_per_reception' => 'float',
        'receiving_touchdowns' => 'float',
        'receiving_long' => 'float',
        'fumbles' => 'float',
        'fumbles_lost' => 'float',
        'punt_returns' => 'float',
        'punt_return_yards' => 'float',
        'punt_return_yards_per_attempt' => 'float',
        'punt_return_touchdowns' => 'float',
        'punt_return_long' => 'float',
        'kick_returns' => 'float',
        'kick_return_yards' => 'float',
        'kick_return_yards_per_attempt' => 'float',
        'kick_return_touchdowns' => 'float',
        'kick_return_long' => 'float',
        'solo_tackles' => 'float',
        'assisted_tackles' => 'float',
        'tackles_for_loss' => 'float',
        'sacks' => 'float',
        'sack_yards' => 'float',
        'quarterback_hits' => 'float',
        'passes_defended' => 'float',
        'fumbles_forced' => 'float',
        'fumbles_recovered' => 'float',
        'fumble_return_yards' => 'float',
        'fumble_return_touchdowns' => 'float',
        'interceptions' => 'float',
        'interception_return_yards' => 'float',
        'interception_return_touchdowns' => 'float',
        'blocked_kicks' => 'float',
        'special_teams_solo_tackles' => 'float',
        'special_teams_assisted_tackles' => 'float',
        'misc_solo_tackles' => 'float',
        'misc_assisted_tackles' => 'float',
        'punts' => 'float',
        'punt_yards' => 'float',
        'punt_average' => 'float',
        'field_goals_attempted' => 'float',
        'field_goals_made' => 'float',
        'field_goals_longest_made' => 'float',
        'extra_points_made' => 'float',
        'two_point_conversion_passes' => 'float',
        'two_point_conversion_runs' => 'float',
        'two_point_conversion_receptions' => 'float',
        'fantasy_points' => 'float',
        'fantasy_points_ppr' => 'float',
        'reception_percentage' => 'float',
        'receiving_yards_per_target' => 'float',
        'tackles' => 'float',
        'offensive_touchdowns' => 'float',
        'defensive_touchdowns' => 'float',
        'special_teams_touchdowns' => 'float',
        'touchdowns' => 'float',
        'fantasy_position' => 'string',
        'field_goal_percentage' => 'float',
        'player_season_id' => 'int',
        'fumbles_own_recoveries' => 'float',
        'fumbles_out_of_bounds' => 'float',
        'kick_return_fair_catches' => 'float',
        'punt_return_fair_catches' => 'float',
        'punt_touchbacks' => 'float',
        'punt_inside20' => 'float',
        'punt_net_average' => 'float',
        'extra_points_attempted' => 'float',
        'blocked_kick_return_touchdowns' => 'float',
        'field_goal_return_touchdowns' => 'float',
        'safeties' => 'float',
        'field_goals_had_blocked' => 'float',
        'punts_had_blocked' => 'float',
        'extra_points_had_blocked' => 'float',
        'punt_long' => 'float',
        'blocked_kick_return_yards' => 'float',
        'field_goal_return_yards' => 'float',
        'punt_net_yards' => 'float',
        'special_teams_fumbles_forced' => 'float',
        'special_teams_fumbles_recovered' => 'float',
        'misc_fumbles_forced' => 'float',
        'misc_fumbles_recovered' => 'float',
        'short_name' => 'string',
        'safeties_allowed' => 'float',
        'temperature' => 'int',
        'humidity' => 'int',
        'wind_speed' => 'int',
        'offensive_snaps_played' => 'int',
        'defensive_snaps_played' => 'int',
        'special_teams_snaps_played' => 'int',
        'offensive_team_snaps' => 'int',
        'defensive_team_snaps' => 'int',
        'special_teams_team_snaps' => 'int',
        'auction_value' => 'float',
        'auction_value_ppr' => 'float',
        'two_point_conversion_returns' => 'float',
        'fantasy_points_fan_duel' => 'float',
        'field_goals_made0to19' => 'float',
        'field_goals_made20to29' => 'float',
        'field_goals_made30to39' => 'float',
        'field_goals_made40to49' => 'float',
        'field_goals_made50_plus' => 'float',
        'fantasy_points_draft_kings' => 'float',
        'fantasy_points_yahoo' => 'float',
        'average_draft_position' => 'float',
        'average_draft_position_ppr' => 'float',
        'team_id' => 'int',
        'global_team_id' => 'int',
        'fantasy_points_fantasy_draft' => 'float',
        'scoring_details' => '\Acme\FantasyDataStats\\ScoringDetail[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'player_id' => null,
        'season_type' => null,
        'season' => null,
        'team' => null,
        'number' => null,
        'name' => null,
        'position' => null,
        'position_category' => null,
        'activated' => null,
        'played' => null,
        'started' => null,
        'passing_attempts' => null,
        'passing_completions' => null,
        'passing_yards' => null,
        'passing_completion_percentage' => null,
        'passing_yards_per_attempt' => null,
        'passing_yards_per_completion' => null,
        'passing_touchdowns' => null,
        'passing_interceptions' => null,
        'passing_rating' => null,
        'passing_long' => null,
        'passing_sacks' => null,
        'passing_sack_yards' => null,
        'rushing_attempts' => null,
        'rushing_yards' => null,
        'rushing_yards_per_attempt' => null,
        'rushing_touchdowns' => null,
        'rushing_long' => null,
        'receiving_targets' => null,
        'receptions' => null,
        'receiving_yards' => null,
        'receiving_yards_per_reception' => null,
        'receiving_touchdowns' => null,
        'receiving_long' => null,
        'fumbles' => null,
        'fumbles_lost' => null,
        'punt_returns' => null,
        'punt_return_yards' => null,
        'punt_return_yards_per_attempt' => null,
        'punt_return_touchdowns' => null,
        'punt_return_long' => null,
        'kick_returns' => null,
        'kick_return_yards' => null,
        'kick_return_yards_per_attempt' => null,
        'kick_return_touchdowns' => null,
        'kick_return_long' => null,
        'solo_tackles' => null,
        'assisted_tackles' => null,
        'tackles_for_loss' => null,
        'sacks' => null,
        'sack_yards' => null,
        'quarterback_hits' => null,
        'passes_defended' => null,
        'fumbles_forced' => null,
        'fumbles_recovered' => null,
        'fumble_return_yards' => null,
        'fumble_return_touchdowns' => null,
        'interceptions' => null,
        'interception_return_yards' => null,
        'interception_return_touchdowns' => null,
        'blocked_kicks' => null,
        'special_teams_solo_tackles' => null,
        'special_teams_assisted_tackles' => null,
        'misc_solo_tackles' => null,
        'misc_assisted_tackles' => null,
        'punts' => null,
        'punt_yards' => null,
        'punt_average' => null,
        'field_goals_attempted' => null,
        'field_goals_made' => null,
        'field_goals_longest_made' => null,
        'extra_points_made' => null,
        'two_point_conversion_passes' => null,
        'two_point_conversion_runs' => null,
        'two_point_conversion_receptions' => null,
        'fantasy_points' => null,
        'fantasy_points_ppr' => null,
        'reception_percentage' => null,
        'receiving_yards_per_target' => null,
        'tackles' => null,
        'offensive_touchdowns' => null,
        'defensive_touchdowns' => null,
        'special_teams_touchdowns' => null,
        'touchdowns' => null,
        'fantasy_position' => null,
        'field_goal_percentage' => null,
        'player_season_id' => null,
        'fumbles_own_recoveries' => null,
        'fumbles_out_of_bounds' => null,
        'kick_return_fair_catches' => null,
        'punt_return_fair_catches' => null,
        'punt_touchbacks' => null,
        'punt_inside20' => null,
        'punt_net_average' => null,
        'extra_points_attempted' => null,
        'blocked_kick_return_touchdowns' => null,
        'field_goal_return_touchdowns' => null,
        'safeties' => null,
        'field_goals_had_blocked' => null,
        'punts_had_blocked' => null,
        'extra_points_had_blocked' => null,
        'punt_long' => null,
        'blocked_kick_return_yards' => null,
        'field_goal_return_yards' => null,
        'punt_net_yards' => null,
        'special_teams_fumbles_forced' => null,
        'special_teams_fumbles_recovered' => null,
        'misc_fumbles_forced' => null,
        'misc_fumbles_recovered' => null,
        'short_name' => null,
        'safeties_allowed' => null,
        'temperature' => null,
        'humidity' => null,
        'wind_speed' => null,
        'offensive_snaps_played' => null,
        'defensive_snaps_played' => null,
        'special_teams_snaps_played' => null,
        'offensive_team_snaps' => null,
        'defensive_team_snaps' => null,
        'special_teams_team_snaps' => null,
        'auction_value' => null,
        'auction_value_ppr' => null,
        'two_point_conversion_returns' => null,
        'fantasy_points_fan_duel' => null,
        'field_goals_made0to19' => null,
        'field_goals_made20to29' => null,
        'field_goals_made30to39' => null,
        'field_goals_made40to49' => null,
        'field_goals_made50_plus' => null,
        'fantasy_points_draft_kings' => null,
        'fantasy_points_yahoo' => null,
        'average_draft_position' => null,
        'average_draft_position_ppr' => null,
        'team_id' => null,
        'global_team_id' => null,
        'fantasy_points_fantasy_draft' => null,
        'scoring_details' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'player_id' => 'PlayerID',
        'season_type' => 'SeasonType',
        'season' => 'Season',
        'team' => 'Team',
        'number' => 'Number',
        'name' => 'Name',
        'position' => 'Position',
        'position_category' => 'PositionCategory',
        'activated' => 'Activated',
        'played' => 'Played',
        'started' => 'Started',
        'passing_attempts' => 'PassingAttempts',
        'passing_completions' => 'PassingCompletions',
        'passing_yards' => 'PassingYards',
        'passing_completion_percentage' => 'PassingCompletionPercentage',
        'passing_yards_per_attempt' => 'PassingYardsPerAttempt',
        'passing_yards_per_completion' => 'PassingYardsPerCompletion',
        'passing_touchdowns' => 'PassingTouchdowns',
        'passing_interceptions' => 'PassingInterceptions',
        'passing_rating' => 'PassingRating',
        'passing_long' => 'PassingLong',
        'passing_sacks' => 'PassingSacks',
        'passing_sack_yards' => 'PassingSackYards',
        'rushing_attempts' => 'RushingAttempts',
        'rushing_yards' => 'RushingYards',
        'rushing_yards_per_attempt' => 'RushingYardsPerAttempt',
        'rushing_touchdowns' => 'RushingTouchdowns',
        'rushing_long' => 'RushingLong',
        'receiving_targets' => 'ReceivingTargets',
        'receptions' => 'Receptions',
        'receiving_yards' => 'ReceivingYards',
        'receiving_yards_per_reception' => 'ReceivingYardsPerReception',
        'receiving_touchdowns' => 'ReceivingTouchdowns',
        'receiving_long' => 'ReceivingLong',
        'fumbles' => 'Fumbles',
        'fumbles_lost' => 'FumblesLost',
        'punt_returns' => 'PuntReturns',
        'punt_return_yards' => 'PuntReturnYards',
        'punt_return_yards_per_attempt' => 'PuntReturnYardsPerAttempt',
        'punt_return_touchdowns' => 'PuntReturnTouchdowns',
        'punt_return_long' => 'PuntReturnLong',
        'kick_returns' => 'KickReturns',
        'kick_return_yards' => 'KickReturnYards',
        'kick_return_yards_per_attempt' => 'KickReturnYardsPerAttempt',
        'kick_return_touchdowns' => 'KickReturnTouchdowns',
        'kick_return_long' => 'KickReturnLong',
        'solo_tackles' => 'SoloTackles',
        'assisted_tackles' => 'AssistedTackles',
        'tackles_for_loss' => 'TacklesForLoss',
        'sacks' => 'Sacks',
        'sack_yards' => 'SackYards',
        'quarterback_hits' => 'QuarterbackHits',
        'passes_defended' => 'PassesDefended',
        'fumbles_forced' => 'FumblesForced',
        'fumbles_recovered' => 'FumblesRecovered',
        'fumble_return_yards' => 'FumbleReturnYards',
        'fumble_return_touchdowns' => 'FumbleReturnTouchdowns',
        'interceptions' => 'Interceptions',
        'interception_return_yards' => 'InterceptionReturnYards',
        'interception_return_touchdowns' => 'InterceptionReturnTouchdowns',
        'blocked_kicks' => 'BlockedKicks',
        'special_teams_solo_tackles' => 'SpecialTeamsSoloTackles',
        'special_teams_assisted_tackles' => 'SpecialTeamsAssistedTackles',
        'misc_solo_tackles' => 'MiscSoloTackles',
        'misc_assisted_tackles' => 'MiscAssistedTackles',
        'punts' => 'Punts',
        'punt_yards' => 'PuntYards',
        'punt_average' => 'PuntAverage',
        'field_goals_attempted' => 'FieldGoalsAttempted',
        'field_goals_made' => 'FieldGoalsMade',
        'field_goals_longest_made' => 'FieldGoalsLongestMade',
        'extra_points_made' => 'ExtraPointsMade',
        'two_point_conversion_passes' => 'TwoPointConversionPasses',
        'two_point_conversion_runs' => 'TwoPointConversionRuns',
        'two_point_conversion_receptions' => 'TwoPointConversionReceptions',
        'fantasy_points' => 'FantasyPoints',
        'fantasy_points_ppr' => 'FantasyPointsPPR',
        'reception_percentage' => 'ReceptionPercentage',
        'receiving_yards_per_target' => 'ReceivingYardsPerTarget',
        'tackles' => 'Tackles',
        'offensive_touchdowns' => 'OffensiveTouchdowns',
        'defensive_touchdowns' => 'DefensiveTouchdowns',
        'special_teams_touchdowns' => 'SpecialTeamsTouchdowns',
        'touchdowns' => 'Touchdowns',
        'fantasy_position' => 'FantasyPosition',
        'field_goal_percentage' => 'FieldGoalPercentage',
        'player_season_id' => 'PlayerSeasonID',
        'fumbles_own_recoveries' => 'FumblesOwnRecoveries',
        'fumbles_out_of_bounds' => 'FumblesOutOfBounds',
        'kick_return_fair_catches' => 'KickReturnFairCatches',
        'punt_return_fair_catches' => 'PuntReturnFairCatches',
        'punt_touchbacks' => 'PuntTouchbacks',
        'punt_inside20' => 'PuntInside20',
        'punt_net_average' => 'PuntNetAverage',
        'extra_points_attempted' => 'ExtraPointsAttempted',
        'blocked_kick_return_touchdowns' => 'BlockedKickReturnTouchdowns',
        'field_goal_return_touchdowns' => 'FieldGoalReturnTouchdowns',
        'safeties' => 'Safeties',
        'field_goals_had_blocked' => 'FieldGoalsHadBlocked',
        'punts_had_blocked' => 'PuntsHadBlocked',
        'extra_points_had_blocked' => 'ExtraPointsHadBlocked',
        'punt_long' => 'PuntLong',
        'blocked_kick_return_yards' => 'BlockedKickReturnYards',
        'field_goal_return_yards' => 'FieldGoalReturnYards',
        'punt_net_yards' => 'PuntNetYards',
        'special_teams_fumbles_forced' => 'SpecialTeamsFumblesForced',
        'special_teams_fumbles_recovered' => 'SpecialTeamsFumblesRecovered',
        'misc_fumbles_forced' => 'MiscFumblesForced',
        'misc_fumbles_recovered' => 'MiscFumblesRecovered',
        'short_name' => 'ShortName',
        'safeties_allowed' => 'SafetiesAllowed',
        'temperature' => 'Temperature',
        'humidity' => 'Humidity',
        'wind_speed' => 'WindSpeed',
        'offensive_snaps_played' => 'OffensiveSnapsPlayed',
        'defensive_snaps_played' => 'DefensiveSnapsPlayed',
        'special_teams_snaps_played' => 'SpecialTeamsSnapsPlayed',
        'offensive_team_snaps' => 'OffensiveTeamSnaps',
        'defensive_team_snaps' => 'DefensiveTeamSnaps',
        'special_teams_team_snaps' => 'SpecialTeamsTeamSnaps',
        'auction_value' => 'AuctionValue',
        'auction_value_ppr' => 'AuctionValuePPR',
        'two_point_conversion_returns' => 'TwoPointConversionReturns',
        'fantasy_points_fan_duel' => 'FantasyPointsFanDuel',
        'field_goals_made0to19' => 'FieldGoalsMade0to19',
        'field_goals_made20to29' => 'FieldGoalsMade20to29',
        'field_goals_made30to39' => 'FieldGoalsMade30to39',
        'field_goals_made40to49' => 'FieldGoalsMade40to49',
        'field_goals_made50_plus' => 'FieldGoalsMade50Plus',
        'fantasy_points_draft_kings' => 'FantasyPointsDraftKings',
        'fantasy_points_yahoo' => 'FantasyPointsYahoo',
        'average_draft_position' => 'AverageDraftPosition',
        'average_draft_position_ppr' => 'AverageDraftPositionPPR',
        'team_id' => 'TeamID',
        'global_team_id' => 'GlobalTeamID',
        'fantasy_points_fantasy_draft' => 'FantasyPointsFantasyDraft',
        'scoring_details' => 'ScoringDetails'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'player_id' => 'setPlayerId',
        'season_type' => 'setSeasonType',
        'season' => 'setSeason',
        'team' => 'setTeam',
        'number' => 'setNumber',
        'name' => 'setName',
        'position' => 'setPosition',
        'position_category' => 'setPositionCategory',
        'activated' => 'setActivated',
        'played' => 'setPlayed',
        'started' => 'setStarted',
        'passing_attempts' => 'setPassingAttempts',
        'passing_completions' => 'setPassingCompletions',
        'passing_yards' => 'setPassingYards',
        'passing_completion_percentage' => 'setPassingCompletionPercentage',
        'passing_yards_per_attempt' => 'setPassingYardsPerAttempt',
        'passing_yards_per_completion' => 'setPassingYardsPerCompletion',
        'passing_touchdowns' => 'setPassingTouchdowns',
        'passing_interceptions' => 'setPassingInterceptions',
        'passing_rating' => 'setPassingRating',
        'passing_long' => 'setPassingLong',
        'passing_sacks' => 'setPassingSacks',
        'passing_sack_yards' => 'setPassingSackYards',
        'rushing_attempts' => 'setRushingAttempts',
        'rushing_yards' => 'setRushingYards',
        'rushing_yards_per_attempt' => 'setRushingYardsPerAttempt',
        'rushing_touchdowns' => 'setRushingTouchdowns',
        'rushing_long' => 'setRushingLong',
        'receiving_targets' => 'setReceivingTargets',
        'receptions' => 'setReceptions',
        'receiving_yards' => 'setReceivingYards',
        'receiving_yards_per_reception' => 'setReceivingYardsPerReception',
        'receiving_touchdowns' => 'setReceivingTouchdowns',
        'receiving_long' => 'setReceivingLong',
        'fumbles' => 'setFumbles',
        'fumbles_lost' => 'setFumblesLost',
        'punt_returns' => 'setPuntReturns',
        'punt_return_yards' => 'setPuntReturnYards',
        'punt_return_yards_per_attempt' => 'setPuntReturnYardsPerAttempt',
        'punt_return_touchdowns' => 'setPuntReturnTouchdowns',
        'punt_return_long' => 'setPuntReturnLong',
        'kick_returns' => 'setKickReturns',
        'kick_return_yards' => 'setKickReturnYards',
        'kick_return_yards_per_attempt' => 'setKickReturnYardsPerAttempt',
        'kick_return_touchdowns' => 'setKickReturnTouchdowns',
        'kick_return_long' => 'setKickReturnLong',
        'solo_tackles' => 'setSoloTackles',
        'assisted_tackles' => 'setAssistedTackles',
        'tackles_for_loss' => 'setTacklesForLoss',
        'sacks' => 'setSacks',
        'sack_yards' => 'setSackYards',
        'quarterback_hits' => 'setQuarterbackHits',
        'passes_defended' => 'setPassesDefended',
        'fumbles_forced' => 'setFumblesForced',
        'fumbles_recovered' => 'setFumblesRecovered',
        'fumble_return_yards' => 'setFumbleReturnYards',
        'fumble_return_touchdowns' => 'setFumbleReturnTouchdowns',
        'interceptions' => 'setInterceptions',
        'interception_return_yards' => 'setInterceptionReturnYards',
        'interception_return_touchdowns' => 'setInterceptionReturnTouchdowns',
        'blocked_kicks' => 'setBlockedKicks',
        'special_teams_solo_tackles' => 'setSpecialTeamsSoloTackles',
        'special_teams_assisted_tackles' => 'setSpecialTeamsAssistedTackles',
        'misc_solo_tackles' => 'setMiscSoloTackles',
        'misc_assisted_tackles' => 'setMiscAssistedTackles',
        'punts' => 'setPunts',
        'punt_yards' => 'setPuntYards',
        'punt_average' => 'setPuntAverage',
        'field_goals_attempted' => 'setFieldGoalsAttempted',
        'field_goals_made' => 'setFieldGoalsMade',
        'field_goals_longest_made' => 'setFieldGoalsLongestMade',
        'extra_points_made' => 'setExtraPointsMade',
        'two_point_conversion_passes' => 'setTwoPointConversionPasses',
        'two_point_conversion_runs' => 'setTwoPointConversionRuns',
        'two_point_conversion_receptions' => 'setTwoPointConversionReceptions',
        'fantasy_points' => 'setFantasyPoints',
        'fantasy_points_ppr' => 'setFantasyPointsPpr',
        'reception_percentage' => 'setReceptionPercentage',
        'receiving_yards_per_target' => 'setReceivingYardsPerTarget',
        'tackles' => 'setTackles',
        'offensive_touchdowns' => 'setOffensiveTouchdowns',
        'defensive_touchdowns' => 'setDefensiveTouchdowns',
        'special_teams_touchdowns' => 'setSpecialTeamsTouchdowns',
        'touchdowns' => 'setTouchdowns',
        'fantasy_position' => 'setFantasyPosition',
        'field_goal_percentage' => 'setFieldGoalPercentage',
        'player_season_id' => 'setPlayerSeasonId',
        'fumbles_own_recoveries' => 'setFumblesOwnRecoveries',
        'fumbles_out_of_bounds' => 'setFumblesOutOfBounds',
        'kick_return_fair_catches' => 'setKickReturnFairCatches',
        'punt_return_fair_catches' => 'setPuntReturnFairCatches',
        'punt_touchbacks' => 'setPuntTouchbacks',
        'punt_inside20' => 'setPuntInside20',
        'punt_net_average' => 'setPuntNetAverage',
        'extra_points_attempted' => 'setExtraPointsAttempted',
        'blocked_kick_return_touchdowns' => 'setBlockedKickReturnTouchdowns',
        'field_goal_return_touchdowns' => 'setFieldGoalReturnTouchdowns',
        'safeties' => 'setSafeties',
        'field_goals_had_blocked' => 'setFieldGoalsHadBlocked',
        'punts_had_blocked' => 'setPuntsHadBlocked',
        'extra_points_had_blocked' => 'setExtraPointsHadBlocked',
        'punt_long' => 'setPuntLong',
        'blocked_kick_return_yards' => 'setBlockedKickReturnYards',
        'field_goal_return_yards' => 'setFieldGoalReturnYards',
        'punt_net_yards' => 'setPuntNetYards',
        'special_teams_fumbles_forced' => 'setSpecialTeamsFumblesForced',
        'special_teams_fumbles_recovered' => 'setSpecialTeamsFumblesRecovered',
        'misc_fumbles_forced' => 'setMiscFumblesForced',
        'misc_fumbles_recovered' => 'setMiscFumblesRecovered',
        'short_name' => 'setShortName',
        'safeties_allowed' => 'setSafetiesAllowed',
        'temperature' => 'setTemperature',
        'humidity' => 'setHumidity',
        'wind_speed' => 'setWindSpeed',
        'offensive_snaps_played' => 'setOffensiveSnapsPlayed',
        'defensive_snaps_played' => 'setDefensiveSnapsPlayed',
        'special_teams_snaps_played' => 'setSpecialTeamsSnapsPlayed',
        'offensive_team_snaps' => 'setOffensiveTeamSnaps',
        'defensive_team_snaps' => 'setDefensiveTeamSnaps',
        'special_teams_team_snaps' => 'setSpecialTeamsTeamSnaps',
        'auction_value' => 'setAuctionValue',
        'auction_value_ppr' => 'setAuctionValuePpr',
        'two_point_conversion_returns' => 'setTwoPointConversionReturns',
        'fantasy_points_fan_duel' => 'setFantasyPointsFanDuel',
        'field_goals_made0to19' => 'setFieldGoalsMade0to19',
        'field_goals_made20to29' => 'setFieldGoalsMade20to29',
        'field_goals_made30to39' => 'setFieldGoalsMade30to39',
        'field_goals_made40to49' => 'setFieldGoalsMade40to49',
        'field_goals_made50_plus' => 'setFieldGoalsMade50Plus',
        'fantasy_points_draft_kings' => 'setFantasyPointsDraftKings',
        'fantasy_points_yahoo' => 'setFantasyPointsYahoo',
        'average_draft_position' => 'setAverageDraftPosition',
        'average_draft_position_ppr' => 'setAverageDraftPositionPpr',
        'team_id' => 'setTeamId',
        'global_team_id' => 'setGlobalTeamId',
        'fantasy_points_fantasy_draft' => 'setFantasyPointsFantasyDraft',
        'scoring_details' => 'setScoringDetails'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'player_id' => 'getPlayerId',
        'season_type' => 'getSeasonType',
        'season' => 'getSeason',
        'team' => 'getTeam',
        'number' => 'getNumber',
        'name' => 'getName',
        'position' => 'getPosition',
        'position_category' => 'getPositionCategory',
        'activated' => 'getActivated',
        'played' => 'getPlayed',
        'started' => 'getStarted',
        'passing_attempts' => 'getPassingAttempts',
        'passing_completions' => 'getPassingCompletions',
        'passing_yards' => 'getPassingYards',
        'passing_completion_percentage' => 'getPassingCompletionPercentage',
        'passing_yards_per_attempt' => 'getPassingYardsPerAttempt',
        'passing_yards_per_completion' => 'getPassingYardsPerCompletion',
        'passing_touchdowns' => 'getPassingTouchdowns',
        'passing_interceptions' => 'getPassingInterceptions',
        'passing_rating' => 'getPassingRating',
        'passing_long' => 'getPassingLong',
        'passing_sacks' => 'getPassingSacks',
        'passing_sack_yards' => 'getPassingSackYards',
        'rushing_attempts' => 'getRushingAttempts',
        'rushing_yards' => 'getRushingYards',
        'rushing_yards_per_attempt' => 'getRushingYardsPerAttempt',
        'rushing_touchdowns' => 'getRushingTouchdowns',
        'rushing_long' => 'getRushingLong',
        'receiving_targets' => 'getReceivingTargets',
        'receptions' => 'getReceptions',
        'receiving_yards' => 'getReceivingYards',
        'receiving_yards_per_reception' => 'getReceivingYardsPerReception',
        'receiving_touchdowns' => 'getReceivingTouchdowns',
        'receiving_long' => 'getReceivingLong',
        'fumbles' => 'getFumbles',
        'fumbles_lost' => 'getFumblesLost',
        'punt_returns' => 'getPuntReturns',
        'punt_return_yards' => 'getPuntReturnYards',
        'punt_return_yards_per_attempt' => 'getPuntReturnYardsPerAttempt',
        'punt_return_touchdowns' => 'getPuntReturnTouchdowns',
        'punt_return_long' => 'getPuntReturnLong',
        'kick_returns' => 'getKickReturns',
        'kick_return_yards' => 'getKickReturnYards',
        'kick_return_yards_per_attempt' => 'getKickReturnYardsPerAttempt',
        'kick_return_touchdowns' => 'getKickReturnTouchdowns',
        'kick_return_long' => 'getKickReturnLong',
        'solo_tackles' => 'getSoloTackles',
        'assisted_tackles' => 'getAssistedTackles',
        'tackles_for_loss' => 'getTacklesForLoss',
        'sacks' => 'getSacks',
        'sack_yards' => 'getSackYards',
        'quarterback_hits' => 'getQuarterbackHits',
        'passes_defended' => 'getPassesDefended',
        'fumbles_forced' => 'getFumblesForced',
        'fumbles_recovered' => 'getFumblesRecovered',
        'fumble_return_yards' => 'getFumbleReturnYards',
        'fumble_return_touchdowns' => 'getFumbleReturnTouchdowns',
        'interceptions' => 'getInterceptions',
        'interception_return_yards' => 'getInterceptionReturnYards',
        'interception_return_touchdowns' => 'getInterceptionReturnTouchdowns',
        'blocked_kicks' => 'getBlockedKicks',
        'special_teams_solo_tackles' => 'getSpecialTeamsSoloTackles',
        'special_teams_assisted_tackles' => 'getSpecialTeamsAssistedTackles',
        'misc_solo_tackles' => 'getMiscSoloTackles',
        'misc_assisted_tackles' => 'getMiscAssistedTackles',
        'punts' => 'getPunts',
        'punt_yards' => 'getPuntYards',
        'punt_average' => 'getPuntAverage',
        'field_goals_attempted' => 'getFieldGoalsAttempted',
        'field_goals_made' => 'getFieldGoalsMade',
        'field_goals_longest_made' => 'getFieldGoalsLongestMade',
        'extra_points_made' => 'getExtraPointsMade',
        'two_point_conversion_passes' => 'getTwoPointConversionPasses',
        'two_point_conversion_runs' => 'getTwoPointConversionRuns',
        'two_point_conversion_receptions' => 'getTwoPointConversionReceptions',
        'fantasy_points' => 'getFantasyPoints',
        'fantasy_points_ppr' => 'getFantasyPointsPpr',
        'reception_percentage' => 'getReceptionPercentage',
        'receiving_yards_per_target' => 'getReceivingYardsPerTarget',
        'tackles' => 'getTackles',
        'offensive_touchdowns' => 'getOffensiveTouchdowns',
        'defensive_touchdowns' => 'getDefensiveTouchdowns',
        'special_teams_touchdowns' => 'getSpecialTeamsTouchdowns',
        'touchdowns' => 'getTouchdowns',
        'fantasy_position' => 'getFantasyPosition',
        'field_goal_percentage' => 'getFieldGoalPercentage',
        'player_season_id' => 'getPlayerSeasonId',
        'fumbles_own_recoveries' => 'getFumblesOwnRecoveries',
        'fumbles_out_of_bounds' => 'getFumblesOutOfBounds',
        'kick_return_fair_catches' => 'getKickReturnFairCatches',
        'punt_return_fair_catches' => 'getPuntReturnFairCatches',
        'punt_touchbacks' => 'getPuntTouchbacks',
        'punt_inside20' => 'getPuntInside20',
        'punt_net_average' => 'getPuntNetAverage',
        'extra_points_attempted' => 'getExtraPointsAttempted',
        'blocked_kick_return_touchdowns' => 'getBlockedKickReturnTouchdowns',
        'field_goal_return_touchdowns' => 'getFieldGoalReturnTouchdowns',
        'safeties' => 'getSafeties',
        'field_goals_had_blocked' => 'getFieldGoalsHadBlocked',
        'punts_had_blocked' => 'getPuntsHadBlocked',
        'extra_points_had_blocked' => 'getExtraPointsHadBlocked',
        'punt_long' => 'getPuntLong',
        'blocked_kick_return_yards' => 'getBlockedKickReturnYards',
        'field_goal_return_yards' => 'getFieldGoalReturnYards',
        'punt_net_yards' => 'getPuntNetYards',
        'special_teams_fumbles_forced' => 'getSpecialTeamsFumblesForced',
        'special_teams_fumbles_recovered' => 'getSpecialTeamsFumblesRecovered',
        'misc_fumbles_forced' => 'getMiscFumblesForced',
        'misc_fumbles_recovered' => 'getMiscFumblesRecovered',
        'short_name' => 'getShortName',
        'safeties_allowed' => 'getSafetiesAllowed',
        'temperature' => 'getTemperature',
        'humidity' => 'getHumidity',
        'wind_speed' => 'getWindSpeed',
        'offensive_snaps_played' => 'getOffensiveSnapsPlayed',
        'defensive_snaps_played' => 'getDefensiveSnapsPlayed',
        'special_teams_snaps_played' => 'getSpecialTeamsSnapsPlayed',
        'offensive_team_snaps' => 'getOffensiveTeamSnaps',
        'defensive_team_snaps' => 'getDefensiveTeamSnaps',
        'special_teams_team_snaps' => 'getSpecialTeamsTeamSnaps',
        'auction_value' => 'getAuctionValue',
        'auction_value_ppr' => 'getAuctionValuePpr',
        'two_point_conversion_returns' => 'getTwoPointConversionReturns',
        'fantasy_points_fan_duel' => 'getFantasyPointsFanDuel',
        'field_goals_made0to19' => 'getFieldGoalsMade0to19',
        'field_goals_made20to29' => 'getFieldGoalsMade20to29',
        'field_goals_made30to39' => 'getFieldGoalsMade30to39',
        'field_goals_made40to49' => 'getFieldGoalsMade40to49',
        'field_goals_made50_plus' => 'getFieldGoalsMade50Plus',
        'fantasy_points_draft_kings' => 'getFantasyPointsDraftKings',
        'fantasy_points_yahoo' => 'getFantasyPointsYahoo',
        'average_draft_position' => 'getAverageDraftPosition',
        'average_draft_position_ppr' => 'getAverageDraftPositionPpr',
        'team_id' => 'getTeamId',
        'global_team_id' => 'getGlobalTeamId',
        'fantasy_points_fantasy_draft' => 'getFantasyPointsFantasyDraft',
        'scoring_details' => 'getScoringDetails'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['player_id'] = isset($data['player_id']) ? $data['player_id'] : null;
        $this->container['season_type'] = isset($data['season_type']) ? $data['season_type'] : null;
        $this->container['season'] = isset($data['season']) ? $data['season'] : null;
        $this->container['team'] = isset($data['team']) ? $data['team'] : null;
        $this->container['number'] = isset($data['number']) ? $data['number'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['position'] = isset($data['position']) ? $data['position'] : null;
        $this->container['position_category'] = isset($data['position_category']) ? $data['position_category'] : null;
        $this->container['activated'] = isset($data['activated']) ? $data['activated'] : null;
        $this->container['played'] = isset($data['played']) ? $data['played'] : null;
        $this->container['started'] = isset($data['started']) ? $data['started'] : null;
        $this->container['passing_attempts'] = isset($data['passing_attempts']) ? $data['passing_attempts'] : null;
        $this->container['passing_completions'] = isset($data['passing_completions']) ? $data['passing_completions'] : null;
        $this->container['passing_yards'] = isset($data['passing_yards']) ? $data['passing_yards'] : null;
        $this->container['passing_completion_percentage'] = isset($data['passing_completion_percentage']) ? $data['passing_completion_percentage'] : null;
        $this->container['passing_yards_per_attempt'] = isset($data['passing_yards_per_attempt']) ? $data['passing_yards_per_attempt'] : null;
        $this->container['passing_yards_per_completion'] = isset($data['passing_yards_per_completion']) ? $data['passing_yards_per_completion'] : null;
        $this->container['passing_touchdowns'] = isset($data['passing_touchdowns']) ? $data['passing_touchdowns'] : null;
        $this->container['passing_interceptions'] = isset($data['passing_interceptions']) ? $data['passing_interceptions'] : null;
        $this->container['passing_rating'] = isset($data['passing_rating']) ? $data['passing_rating'] : null;
        $this->container['passing_long'] = isset($data['passing_long']) ? $data['passing_long'] : null;
        $this->container['passing_sacks'] = isset($data['passing_sacks']) ? $data['passing_sacks'] : null;
        $this->container['passing_sack_yards'] = isset($data['passing_sack_yards']) ? $data['passing_sack_yards'] : null;
        $this->container['rushing_attempts'] = isset($data['rushing_attempts']) ? $data['rushing_attempts'] : null;
        $this->container['rushing_yards'] = isset($data['rushing_yards']) ? $data['rushing_yards'] : null;
        $this->container['rushing_yards_per_attempt'] = isset($data['rushing_yards_per_attempt']) ? $data['rushing_yards_per_attempt'] : null;
        $this->container['rushing_touchdowns'] = isset($data['rushing_touchdowns']) ? $data['rushing_touchdowns'] : null;
        $this->container['rushing_long'] = isset($data['rushing_long']) ? $data['rushing_long'] : null;
        $this->container['receiving_targets'] = isset($data['receiving_targets']) ? $data['receiving_targets'] : null;
        $this->container['receptions'] = isset($data['receptions']) ? $data['receptions'] : null;
        $this->container['receiving_yards'] = isset($data['receiving_yards']) ? $data['receiving_yards'] : null;
        $this->container['receiving_yards_per_reception'] = isset($data['receiving_yards_per_reception']) ? $data['receiving_yards_per_reception'] : null;
        $this->container['receiving_touchdowns'] = isset($data['receiving_touchdowns']) ? $data['receiving_touchdowns'] : null;
        $this->container['receiving_long'] = isset($data['receiving_long']) ? $data['receiving_long'] : null;
        $this->container['fumbles'] = isset($data['fumbles']) ? $data['fumbles'] : null;
        $this->container['fumbles_lost'] = isset($data['fumbles_lost']) ? $data['fumbles_lost'] : null;
        $this->container['punt_returns'] = isset($data['punt_returns']) ? $data['punt_returns'] : null;
        $this->container['punt_return_yards'] = isset($data['punt_return_yards']) ? $data['punt_return_yards'] : null;
        $this->container['punt_return_yards_per_attempt'] = isset($data['punt_return_yards_per_attempt']) ? $data['punt_return_yards_per_attempt'] : null;
        $this->container['punt_return_touchdowns'] = isset($data['punt_return_touchdowns']) ? $data['punt_return_touchdowns'] : null;
        $this->container['punt_return_long'] = isset($data['punt_return_long']) ? $data['punt_return_long'] : null;
        $this->container['kick_returns'] = isset($data['kick_returns']) ? $data['kick_returns'] : null;
        $this->container['kick_return_yards'] = isset($data['kick_return_yards']) ? $data['kick_return_yards'] : null;
        $this->container['kick_return_yards_per_attempt'] = isset($data['kick_return_yards_per_attempt']) ? $data['kick_return_yards_per_attempt'] : null;
        $this->container['kick_return_touchdowns'] = isset($data['kick_return_touchdowns']) ? $data['kick_return_touchdowns'] : null;
        $this->container['kick_return_long'] = isset($data['kick_return_long']) ? $data['kick_return_long'] : null;
        $this->container['solo_tackles'] = isset($data['solo_tackles']) ? $data['solo_tackles'] : null;
        $this->container['assisted_tackles'] = isset($data['assisted_tackles']) ? $data['assisted_tackles'] : null;
        $this->container['tackles_for_loss'] = isset($data['tackles_for_loss']) ? $data['tackles_for_loss'] : null;
        $this->container['sacks'] = isset($data['sacks']) ? $data['sacks'] : null;
        $this->container['sack_yards'] = isset($data['sack_yards']) ? $data['sack_yards'] : null;
        $this->container['quarterback_hits'] = isset($data['quarterback_hits']) ? $data['quarterback_hits'] : null;
        $this->container['passes_defended'] = isset($data['passes_defended']) ? $data['passes_defended'] : null;
        $this->container['fumbles_forced'] = isset($data['fumbles_forced']) ? $data['fumbles_forced'] : null;
        $this->container['fumbles_recovered'] = isset($data['fumbles_recovered']) ? $data['fumbles_recovered'] : null;
        $this->container['fumble_return_yards'] = isset($data['fumble_return_yards']) ? $data['fumble_return_yards'] : null;
        $this->container['fumble_return_touchdowns'] = isset($data['fumble_return_touchdowns']) ? $data['fumble_return_touchdowns'] : null;
        $this->container['interceptions'] = isset($data['interceptions']) ? $data['interceptions'] : null;
        $this->container['interception_return_yards'] = isset($data['interception_return_yards']) ? $data['interception_return_yards'] : null;
        $this->container['interception_return_touchdowns'] = isset($data['interception_return_touchdowns']) ? $data['interception_return_touchdowns'] : null;
        $this->container['blocked_kicks'] = isset($data['blocked_kicks']) ? $data['blocked_kicks'] : null;
        $this->container['special_teams_solo_tackles'] = isset($data['special_teams_solo_tackles']) ? $data['special_teams_solo_tackles'] : null;
        $this->container['special_teams_assisted_tackles'] = isset($data['special_teams_assisted_tackles']) ? $data['special_teams_assisted_tackles'] : null;
        $this->container['misc_solo_tackles'] = isset($data['misc_solo_tackles']) ? $data['misc_solo_tackles'] : null;
        $this->container['misc_assisted_tackles'] = isset($data['misc_assisted_tackles']) ? $data['misc_assisted_tackles'] : null;
        $this->container['punts'] = isset($data['punts']) ? $data['punts'] : null;
        $this->container['punt_yards'] = isset($data['punt_yards']) ? $data['punt_yards'] : null;
        $this->container['punt_average'] = isset($data['punt_average']) ? $data['punt_average'] : null;
        $this->container['field_goals_attempted'] = isset($data['field_goals_attempted']) ? $data['field_goals_attempted'] : null;
        $this->container['field_goals_made'] = isset($data['field_goals_made']) ? $data['field_goals_made'] : null;
        $this->container['field_goals_longest_made'] = isset($data['field_goals_longest_made']) ? $data['field_goals_longest_made'] : null;
        $this->container['extra_points_made'] = isset($data['extra_points_made']) ? $data['extra_points_made'] : null;
        $this->container['two_point_conversion_passes'] = isset($data['two_point_conversion_passes']) ? $data['two_point_conversion_passes'] : null;
        $this->container['two_point_conversion_runs'] = isset($data['two_point_conversion_runs']) ? $data['two_point_conversion_runs'] : null;
        $this->container['two_point_conversion_receptions'] = isset($data['two_point_conversion_receptions']) ? $data['two_point_conversion_receptions'] : null;
        $this->container['fantasy_points'] = isset($data['fantasy_points']) ? $data['fantasy_points'] : null;
        $this->container['fantasy_points_ppr'] = isset($data['fantasy_points_ppr']) ? $data['fantasy_points_ppr'] : null;
        $this->container['reception_percentage'] = isset($data['reception_percentage']) ? $data['reception_percentage'] : null;
        $this->container['receiving_yards_per_target'] = isset($data['receiving_yards_per_target']) ? $data['receiving_yards_per_target'] : null;
        $this->container['tackles'] = isset($data['tackles']) ? $data['tackles'] : null;
        $this->container['offensive_touchdowns'] = isset($data['offensive_touchdowns']) ? $data['offensive_touchdowns'] : null;
        $this->container['defensive_touchdowns'] = isset($data['defensive_touchdowns']) ? $data['defensive_touchdowns'] : null;
        $this->container['special_teams_touchdowns'] = isset($data['special_teams_touchdowns']) ? $data['special_teams_touchdowns'] : null;
        $this->container['touchdowns'] = isset($data['touchdowns']) ? $data['touchdowns'] : null;
        $this->container['fantasy_position'] = isset($data['fantasy_position']) ? $data['fantasy_position'] : null;
        $this->container['field_goal_percentage'] = isset($data['field_goal_percentage']) ? $data['field_goal_percentage'] : null;
        $this->container['player_season_id'] = isset($data['player_season_id']) ? $data['player_season_id'] : null;
        $this->container['fumbles_own_recoveries'] = isset($data['fumbles_own_recoveries']) ? $data['fumbles_own_recoveries'] : null;
        $this->container['fumbles_out_of_bounds'] = isset($data['fumbles_out_of_bounds']) ? $data['fumbles_out_of_bounds'] : null;
        $this->container['kick_return_fair_catches'] = isset($data['kick_return_fair_catches']) ? $data['kick_return_fair_catches'] : null;
        $this->container['punt_return_fair_catches'] = isset($data['punt_return_fair_catches']) ? $data['punt_return_fair_catches'] : null;
        $this->container['punt_touchbacks'] = isset($data['punt_touchbacks']) ? $data['punt_touchbacks'] : null;
        $this->container['punt_inside20'] = isset($data['punt_inside20']) ? $data['punt_inside20'] : null;
        $this->container['punt_net_average'] = isset($data['punt_net_average']) ? $data['punt_net_average'] : null;
        $this->container['extra_points_attempted'] = isset($data['extra_points_attempted']) ? $data['extra_points_attempted'] : null;
        $this->container['blocked_kick_return_touchdowns'] = isset($data['blocked_kick_return_touchdowns']) ? $data['blocked_kick_return_touchdowns'] : null;
        $this->container['field_goal_return_touchdowns'] = isset($data['field_goal_return_touchdowns']) ? $data['field_goal_return_touchdowns'] : null;
        $this->container['safeties'] = isset($data['safeties']) ? $data['safeties'] : null;
        $this->container['field_goals_had_blocked'] = isset($data['field_goals_had_blocked']) ? $data['field_goals_had_blocked'] : null;
        $this->container['punts_had_blocked'] = isset($data['punts_had_blocked']) ? $data['punts_had_blocked'] : null;
        $this->container['extra_points_had_blocked'] = isset($data['extra_points_had_blocked']) ? $data['extra_points_had_blocked'] : null;
        $this->container['punt_long'] = isset($data['punt_long']) ? $data['punt_long'] : null;
        $this->container['blocked_kick_return_yards'] = isset($data['blocked_kick_return_yards']) ? $data['blocked_kick_return_yards'] : null;
        $this->container['field_goal_return_yards'] = isset($data['field_goal_return_yards']) ? $data['field_goal_return_yards'] : null;
        $this->container['punt_net_yards'] = isset($data['punt_net_yards']) ? $data['punt_net_yards'] : null;
        $this->container['special_teams_fumbles_forced'] = isset($data['special_teams_fumbles_forced']) ? $data['special_teams_fumbles_forced'] : null;
        $this->container['special_teams_fumbles_recovered'] = isset($data['special_teams_fumbles_recovered']) ? $data['special_teams_fumbles_recovered'] : null;
        $this->container['misc_fumbles_forced'] = isset($data['misc_fumbles_forced']) ? $data['misc_fumbles_forced'] : null;
        $this->container['misc_fumbles_recovered'] = isset($data['misc_fumbles_recovered']) ? $data['misc_fumbles_recovered'] : null;
        $this->container['short_name'] = isset($data['short_name']) ? $data['short_name'] : null;
        $this->container['safeties_allowed'] = isset($data['safeties_allowed']) ? $data['safeties_allowed'] : null;
        $this->container['temperature'] = isset($data['temperature']) ? $data['temperature'] : null;
        $this->container['humidity'] = isset($data['humidity']) ? $data['humidity'] : null;
        $this->container['wind_speed'] = isset($data['wind_speed']) ? $data['wind_speed'] : null;
        $this->container['offensive_snaps_played'] = isset($data['offensive_snaps_played']) ? $data['offensive_snaps_played'] : null;
        $this->container['defensive_snaps_played'] = isset($data['defensive_snaps_played']) ? $data['defensive_snaps_played'] : null;
        $this->container['special_teams_snaps_played'] = isset($data['special_teams_snaps_played']) ? $data['special_teams_snaps_played'] : null;
        $this->container['offensive_team_snaps'] = isset($data['offensive_team_snaps']) ? $data['offensive_team_snaps'] : null;
        $this->container['defensive_team_snaps'] = isset($data['defensive_team_snaps']) ? $data['defensive_team_snaps'] : null;
        $this->container['special_teams_team_snaps'] = isset($data['special_teams_team_snaps']) ? $data['special_teams_team_snaps'] : null;
        $this->container['auction_value'] = isset($data['auction_value']) ? $data['auction_value'] : null;
        $this->container['auction_value_ppr'] = isset($data['auction_value_ppr']) ? $data['auction_value_ppr'] : null;
        $this->container['two_point_conversion_returns'] = isset($data['two_point_conversion_returns']) ? $data['two_point_conversion_returns'] : null;
        $this->container['fantasy_points_fan_duel'] = isset($data['fantasy_points_fan_duel']) ? $data['fantasy_points_fan_duel'] : null;
        $this->container['field_goals_made0to19'] = isset($data['field_goals_made0to19']) ? $data['field_goals_made0to19'] : null;
        $this->container['field_goals_made20to29'] = isset($data['field_goals_made20to29']) ? $data['field_goals_made20to29'] : null;
        $this->container['field_goals_made30to39'] = isset($data['field_goals_made30to39']) ? $data['field_goals_made30to39'] : null;
        $this->container['field_goals_made40to49'] = isset($data['field_goals_made40to49']) ? $data['field_goals_made40to49'] : null;
        $this->container['field_goals_made50_plus'] = isset($data['field_goals_made50_plus']) ? $data['field_goals_made50_plus'] : null;
        $this->container['fantasy_points_draft_kings'] = isset($data['fantasy_points_draft_kings']) ? $data['fantasy_points_draft_kings'] : null;
        $this->container['fantasy_points_yahoo'] = isset($data['fantasy_points_yahoo']) ? $data['fantasy_points_yahoo'] : null;
        $this->container['average_draft_position'] = isset($data['average_draft_position']) ? $data['average_draft_position'] : null;
        $this->container['average_draft_position_ppr'] = isset($data['average_draft_position_ppr']) ? $data['average_draft_position_ppr'] : null;
        $this->container['team_id'] = isset($data['team_id']) ? $data['team_id'] : null;
        $this->container['global_team_id'] = isset($data['global_team_id']) ? $data['global_team_id'] : null;
        $this->container['fantasy_points_fantasy_draft'] = isset($data['fantasy_points_fantasy_draft']) ? $data['fantasy_points_fantasy_draft'] : null;
        $this->container['scoring_details'] = isset($data['scoring_details']) ? $data['scoring_details'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets player_id
     *
     * @return int
     */
    public function getPlayerId()
    {
        return $this->container['player_id'];
    }

    /**
     * Sets player_id
     *
     * @param int $player_id player_id
     *
     * @return $this
     */
    public function setPlayerId($player_id)
    {
        $this->container['player_id'] = $player_id;

        return $this;
    }

    /**
     * Gets season_type
     *
     * @return int
     */
    public function getSeasonType()
    {
        return $this->container['season_type'];
    }

    /**
     * Sets season_type
     *
     * @param int $season_type season_type
     *
     * @return $this
     */
    public function setSeasonType($season_type)
    {
        $this->container['season_type'] = $season_type;

        return $this;
    }

    /**
     * Gets season
     *
     * @return int
     */
    public function getSeason()
    {
        return $this->container['season'];
    }

    /**
     * Sets season
     *
     * @param int $season season
     *
     * @return $this
     */
    public function setSeason($season)
    {
        $this->container['season'] = $season;

        return $this;
    }

    /**
     * Gets team
     *
     * @return string
     */
    public function getTeam()
    {
        return $this->container['team'];
    }

    /**
     * Sets team
     *
     * @param string $team team
     *
     * @return $this
     */
    public function setTeam($team)
    {
        $this->container['team'] = $team;

        return $this;
    }

    /**
     * Gets number
     *
     * @return int
     */
    public function getNumber()
    {
        return $this->container['number'];
    }

    /**
     * Sets number
     *
     * @param int $number number
     *
     * @return $this
     */
    public function setNumber($number)
    {
        $this->container['number'] = $number;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets position
     *
     * @return string
     */
    public function getPosition()
    {
        return $this->container['position'];
    }

    /**
     * Sets position
     *
     * @param string $position position
     *
     * @return $this
     */
    public function setPosition($position)
    {
        $this->container['position'] = $position;

        return $this;
    }

    /**
     * Gets position_category
     *
     * @return string
     */
    public function getPositionCategory()
    {
        return $this->container['position_category'];
    }

    /**
     * Sets position_category
     *
     * @param string $position_category position_category
     *
     * @return $this
     */
    public function setPositionCategory($position_category)
    {
        $this->container['position_category'] = $position_category;

        return $this;
    }

    /**
     * Gets activated
     *
     * @return int
     */
    public function getActivated()
    {
        return $this->container['activated'];
    }

    /**
     * Sets activated
     *
     * @param int $activated activated
     *
     * @return $this
     */
    public function setActivated($activated)
    {
        $this->container['activated'] = $activated;

        return $this;
    }

    /**
     * Gets played
     *
     * @return int
     */
    public function getPlayed()
    {
        return $this->container['played'];
    }

    /**
     * Sets played
     *
     * @param int $played played
     *
     * @return $this
     */
    public function setPlayed($played)
    {
        $this->container['played'] = $played;

        return $this;
    }

    /**
     * Gets started
     *
     * @return int
     */
    public function getStarted()
    {
        return $this->container['started'];
    }

    /**
     * Sets started
     *
     * @param int $started started
     *
     * @return $this
     */
    public function setStarted($started)
    {
        $this->container['started'] = $started;

        return $this;
    }

    /**
     * Gets passing_attempts
     *
     * @return float
     */
    public function getPassingAttempts()
    {
        return $this->container['passing_attempts'];
    }

    /**
     * Sets passing_attempts
     *
     * @param float $passing_attempts passing_attempts
     *
     * @return $this
     */
    public function setPassingAttempts($passing_attempts)
    {
        $this->container['passing_attempts'] = $passing_attempts;

        return $this;
    }

    /**
     * Gets passing_completions
     *
     * @return float
     */
    public function getPassingCompletions()
    {
        return $this->container['passing_completions'];
    }

    /**
     * Sets passing_completions
     *
     * @param float $passing_completions passing_completions
     *
     * @return $this
     */
    public function setPassingCompletions($passing_completions)
    {
        $this->container['passing_completions'] = $passing_completions;

        return $this;
    }

    /**
     * Gets passing_yards
     *
     * @return float
     */
    public function getPassingYards()
    {
        return $this->container['passing_yards'];
    }

    /**
     * Sets passing_yards
     *
     * @param float $passing_yards passing_yards
     *
     * @return $this
     */
    public function setPassingYards($passing_yards)
    {
        $this->container['passing_yards'] = $passing_yards;

        return $this;
    }

    /**
     * Gets passing_completion_percentage
     *
     * @return float
     */
    public function getPassingCompletionPercentage()
    {
        return $this->container['passing_completion_percentage'];
    }

    /**
     * Sets passing_completion_percentage
     *
     * @param float $passing_completion_percentage passing_completion_percentage
     *
     * @return $this
     */
    public function setPassingCompletionPercentage($passing_completion_percentage)
    {
        $this->container['passing_completion_percentage'] = $passing_completion_percentage;

        return $this;
    }

    /**
     * Gets passing_yards_per_attempt
     *
     * @return float
     */
    public function getPassingYardsPerAttempt()
    {
        return $this->container['passing_yards_per_attempt'];
    }

    /**
     * Sets passing_yards_per_attempt
     *
     * @param float $passing_yards_per_attempt passing_yards_per_attempt
     *
     * @return $this
     */
    public function setPassingYardsPerAttempt($passing_yards_per_attempt)
    {
        $this->container['passing_yards_per_attempt'] = $passing_yards_per_attempt;

        return $this;
    }

    /**
     * Gets passing_yards_per_completion
     *
     * @return float
     */
    public function getPassingYardsPerCompletion()
    {
        return $this->container['passing_yards_per_completion'];
    }

    /**
     * Sets passing_yards_per_completion
     *
     * @param float $passing_yards_per_completion passing_yards_per_completion
     *
     * @return $this
     */
    public function setPassingYardsPerCompletion($passing_yards_per_completion)
    {
        $this->container['passing_yards_per_completion'] = $passing_yards_per_completion;

        return $this;
    }

    /**
     * Gets passing_touchdowns
     *
     * @return float
     */
    public function getPassingTouchdowns()
    {
        return $this->container['passing_touchdowns'];
    }

    /**
     * Sets passing_touchdowns
     *
     * @param float $passing_touchdowns passing_touchdowns
     *
     * @return $this
     */
    public function setPassingTouchdowns($passing_touchdowns)
    {
        $this->container['passing_touchdowns'] = $passing_touchdowns;

        return $this;
    }

    /**
     * Gets passing_interceptions
     *
     * @return float
     */
    public function getPassingInterceptions()
    {
        return $this->container['passing_interceptions'];
    }

    /**
     * Sets passing_interceptions
     *
     * @param float $passing_interceptions passing_interceptions
     *
     * @return $this
     */
    public function setPassingInterceptions($passing_interceptions)
    {
        $this->container['passing_interceptions'] = $passing_interceptions;

        return $this;
    }

    /**
     * Gets passing_rating
     *
     * @return float
     */
    public function getPassingRating()
    {
        return $this->container['passing_rating'];
    }

    /**
     * Sets passing_rating
     *
     * @param float $passing_rating passing_rating
     *
     * @return $this
     */
    public function setPassingRating($passing_rating)
    {
        $this->container['passing_rating'] = $passing_rating;

        return $this;
    }

    /**
     * Gets passing_long
     *
     * @return float
     */
    public function getPassingLong()
    {
        return $this->container['passing_long'];
    }

    /**
     * Sets passing_long
     *
     * @param float $passing_long passing_long
     *
     * @return $this
     */
    public function setPassingLong($passing_long)
    {
        $this->container['passing_long'] = $passing_long;

        return $this;
    }

    /**
     * Gets passing_sacks
     *
     * @return float
     */
    public function getPassingSacks()
    {
        return $this->container['passing_sacks'];
    }

    /**
     * Sets passing_sacks
     *
     * @param float $passing_sacks passing_sacks
     *
     * @return $this
     */
    public function setPassingSacks($passing_sacks)
    {
        $this->container['passing_sacks'] = $passing_sacks;

        return $this;
    }

    /**
     * Gets passing_sack_yards
     *
     * @return float
     */
    public function getPassingSackYards()
    {
        return $this->container['passing_sack_yards'];
    }

    /**
     * Sets passing_sack_yards
     *
     * @param float $passing_sack_yards passing_sack_yards
     *
     * @return $this
     */
    public function setPassingSackYards($passing_sack_yards)
    {
        $this->container['passing_sack_yards'] = $passing_sack_yards;

        return $this;
    }

    /**
     * Gets rushing_attempts
     *
     * @return float
     */
    public function getRushingAttempts()
    {
        return $this->container['rushing_attempts'];
    }

    /**
     * Sets rushing_attempts
     *
     * @param float $rushing_attempts rushing_attempts
     *
     * @return $this
     */
    public function setRushingAttempts($rushing_attempts)
    {
        $this->container['rushing_attempts'] = $rushing_attempts;

        return $this;
    }

    /**
     * Gets rushing_yards
     *
     * @return float
     */
    public function getRushingYards()
    {
        return $this->container['rushing_yards'];
    }

    /**
     * Sets rushing_yards
     *
     * @param float $rushing_yards rushing_yards
     *
     * @return $this
     */
    public function setRushingYards($rushing_yards)
    {
        $this->container['rushing_yards'] = $rushing_yards;

        return $this;
    }

    /**
     * Gets rushing_yards_per_attempt
     *
     * @return float
     */
    public function getRushingYardsPerAttempt()
    {
        return $this->container['rushing_yards_per_attempt'];
    }

    /**
     * Sets rushing_yards_per_attempt
     *
     * @param float $rushing_yards_per_attempt rushing_yards_per_attempt
     *
     * @return $this
     */
    public function setRushingYardsPerAttempt($rushing_yards_per_attempt)
    {
        $this->container['rushing_yards_per_attempt'] = $rushing_yards_per_attempt;

        return $this;
    }

    /**
     * Gets rushing_touchdowns
     *
     * @return float
     */
    public function getRushingTouchdowns()
    {
        return $this->container['rushing_touchdowns'];
    }

    /**
     * Sets rushing_touchdowns
     *
     * @param float $rushing_touchdowns rushing_touchdowns
     *
     * @return $this
     */
    public function setRushingTouchdowns($rushing_touchdowns)
    {
        $this->container['rushing_touchdowns'] = $rushing_touchdowns;

        return $this;
    }

    /**
     * Gets rushing_long
     *
     * @return float
     */
    public function getRushingLong()
    {
        return $this->container['rushing_long'];
    }

    /**
     * Sets rushing_long
     *
     * @param float $rushing_long rushing_long
     *
     * @return $this
     */
    public function setRushingLong($rushing_long)
    {
        $this->container['rushing_long'] = $rushing_long;

        return $this;
    }

    /**
     * Gets receiving_targets
     *
     * @return float
     */
    public function getReceivingTargets()
    {
        return $this->container['receiving_targets'];
    }

    /**
     * Sets receiving_targets
     *
     * @param float $receiving_targets receiving_targets
     *
     * @return $this
     */
    public function setReceivingTargets($receiving_targets)
    {
        $this->container['receiving_targets'] = $receiving_targets;

        return $this;
    }

    /**
     * Gets receptions
     *
     * @return float
     */
    public function getReceptions()
    {
        return $this->container['receptions'];
    }

    /**
     * Sets receptions
     *
     * @param float $receptions receptions
     *
     * @return $this
     */
    public function setReceptions($receptions)
    {
        $this->container['receptions'] = $receptions;

        return $this;
    }

    /**
     * Gets receiving_yards
     *
     * @return float
     */
    public function getReceivingYards()
    {
        return $this->container['receiving_yards'];
    }

    /**
     * Sets receiving_yards
     *
     * @param float $receiving_yards receiving_yards
     *
     * @return $this
     */
    public function setReceivingYards($receiving_yards)
    {
        $this->container['receiving_yards'] = $receiving_yards;

        return $this;
    }

    /**
     * Gets receiving_yards_per_reception
     *
     * @return float
     */
    public function getReceivingYardsPerReception()
    {
        return $this->container['receiving_yards_per_reception'];
    }

    /**
     * Sets receiving_yards_per_reception
     *
     * @param float $receiving_yards_per_reception receiving_yards_per_reception
     *
     * @return $this
     */
    public function setReceivingYardsPerReception($receiving_yards_per_reception)
    {
        $this->container['receiving_yards_per_reception'] = $receiving_yards_per_reception;

        return $this;
    }

    /**
     * Gets receiving_touchdowns
     *
     * @return float
     */
    public function getReceivingTouchdowns()
    {
        return $this->container['receiving_touchdowns'];
    }

    /**
     * Sets receiving_touchdowns
     *
     * @param float $receiving_touchdowns receiving_touchdowns
     *
     * @return $this
     */
    public function setReceivingTouchdowns($receiving_touchdowns)
    {
        $this->container['receiving_touchdowns'] = $receiving_touchdowns;

        return $this;
    }

    /**
     * Gets receiving_long
     *
     * @return float
     */
    public function getReceivingLong()
    {
        return $this->container['receiving_long'];
    }

    /**
     * Sets receiving_long
     *
     * @param float $receiving_long receiving_long
     *
     * @return $this
     */
    public function setReceivingLong($receiving_long)
    {
        $this->container['receiving_long'] = $receiving_long;

        return $this;
    }

    /**
     * Gets fumbles
     *
     * @return float
     */
    public function getFumbles()
    {
        return $this->container['fumbles'];
    }

    /**
     * Sets fumbles
     *
     * @param float $fumbles fumbles
     *
     * @return $this
     */
    public function setFumbles($fumbles)
    {
        $this->container['fumbles'] = $fumbles;

        return $this;
    }

    /**
     * Gets fumbles_lost
     *
     * @return float
     */
    public function getFumblesLost()
    {
        return $this->container['fumbles_lost'];
    }

    /**
     * Sets fumbles_lost
     *
     * @param float $fumbles_lost fumbles_lost
     *
     * @return $this
     */
    public function setFumblesLost($fumbles_lost)
    {
        $this->container['fumbles_lost'] = $fumbles_lost;

        return $this;
    }

    /**
     * Gets punt_returns
     *
     * @return float
     */
    public function getPuntReturns()
    {
        return $this->container['punt_returns'];
    }

    /**
     * Sets punt_returns
     *
     * @param float $punt_returns punt_returns
     *
     * @return $this
     */
    public function setPuntReturns($punt_returns)
    {
        $this->container['punt_returns'] = $punt_returns;

        return $this;
    }

    /**
     * Gets punt_return_yards
     *
     * @return float
     */
    public function getPuntReturnYards()
    {
        return $this->container['punt_return_yards'];
    }

    /**
     * Sets punt_return_yards
     *
     * @param float $punt_return_yards punt_return_yards
     *
     * @return $this
     */
    public function setPuntReturnYards($punt_return_yards)
    {
        $this->container['punt_return_yards'] = $punt_return_yards;

        return $this;
    }

    /**
     * Gets punt_return_yards_per_attempt
     *
     * @return float
     */
    public function getPuntReturnYardsPerAttempt()
    {
        return $this->container['punt_return_yards_per_attempt'];
    }

    /**
     * Sets punt_return_yards_per_attempt
     *
     * @param float $punt_return_yards_per_attempt punt_return_yards_per_attempt
     *
     * @return $this
     */
    public function setPuntReturnYardsPerAttempt($punt_return_yards_per_attempt)
    {
        $this->container['punt_return_yards_per_attempt'] = $punt_return_yards_per_attempt;

        return $this;
    }

    /**
     * Gets punt_return_touchdowns
     *
     * @return float
     */
    public function getPuntReturnTouchdowns()
    {
        return $this->container['punt_return_touchdowns'];
    }

    /**
     * Sets punt_return_touchdowns
     *
     * @param float $punt_return_touchdowns punt_return_touchdowns
     *
     * @return $this
     */
    public function setPuntReturnTouchdowns($punt_return_touchdowns)
    {
        $this->container['punt_return_touchdowns'] = $punt_return_touchdowns;

        return $this;
    }

    /**
     * Gets punt_return_long
     *
     * @return float
     */
    public function getPuntReturnLong()
    {
        return $this->container['punt_return_long'];
    }

    /**
     * Sets punt_return_long
     *
     * @param float $punt_return_long punt_return_long
     *
     * @return $this
     */
    public function setPuntReturnLong($punt_return_long)
    {
        $this->container['punt_return_long'] = $punt_return_long;

        return $this;
    }

    /**
     * Gets kick_returns
     *
     * @return float
     */
    public function getKickReturns()
    {
        return $this->container['kick_returns'];
    }

    /**
     * Sets kick_returns
     *
     * @param float $kick_returns kick_returns
     *
     * @return $this
     */
    public function setKickReturns($kick_returns)
    {
        $this->container['kick_returns'] = $kick_returns;

        return $this;
    }

    /**
     * Gets kick_return_yards
     *
     * @return float
     */
    public function getKickReturnYards()
    {
        return $this->container['kick_return_yards'];
    }

    /**
     * Sets kick_return_yards
     *
     * @param float $kick_return_yards kick_return_yards
     *
     * @return $this
     */
    public function setKickReturnYards($kick_return_yards)
    {
        $this->container['kick_return_yards'] = $kick_return_yards;

        return $this;
    }

    /**
     * Gets kick_return_yards_per_attempt
     *
     * @return float
     */
    public function getKickReturnYardsPerAttempt()
    {
        return $this->container['kick_return_yards_per_attempt'];
    }

    /**
     * Sets kick_return_yards_per_attempt
     *
     * @param float $kick_return_yards_per_attempt kick_return_yards_per_attempt
     *
     * @return $this
     */
    public function setKickReturnYardsPerAttempt($kick_return_yards_per_attempt)
    {
        $this->container['kick_return_yards_per_attempt'] = $kick_return_yards_per_attempt;

        return $this;
    }

    /**
     * Gets kick_return_touchdowns
     *
     * @return float
     */
    public function getKickReturnTouchdowns()
    {
        return $this->container['kick_return_touchdowns'];
    }

    /**
     * Sets kick_return_touchdowns
     *
     * @param float $kick_return_touchdowns kick_return_touchdowns
     *
     * @return $this
     */
    public function setKickReturnTouchdowns($kick_return_touchdowns)
    {
        $this->container['kick_return_touchdowns'] = $kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets kick_return_long
     *
     * @return float
     */
    public function getKickReturnLong()
    {
        return $this->container['kick_return_long'];
    }

    /**
     * Sets kick_return_long
     *
     * @param float $kick_return_long kick_return_long
     *
     * @return $this
     */
    public function setKickReturnLong($kick_return_long)
    {
        $this->container['kick_return_long'] = $kick_return_long;

        return $this;
    }

    /**
     * Gets solo_tackles
     *
     * @return float
     */
    public function getSoloTackles()
    {
        return $this->container['solo_tackles'];
    }

    /**
     * Sets solo_tackles
     *
     * @param float $solo_tackles solo_tackles
     *
     * @return $this
     */
    public function setSoloTackles($solo_tackles)
    {
        $this->container['solo_tackles'] = $solo_tackles;

        return $this;
    }

    /**
     * Gets assisted_tackles
     *
     * @return float
     */
    public function getAssistedTackles()
    {
        return $this->container['assisted_tackles'];
    }

    /**
     * Sets assisted_tackles
     *
     * @param float $assisted_tackles assisted_tackles
     *
     * @return $this
     */
    public function setAssistedTackles($assisted_tackles)
    {
        $this->container['assisted_tackles'] = $assisted_tackles;

        return $this;
    }

    /**
     * Gets tackles_for_loss
     *
     * @return float
     */
    public function getTacklesForLoss()
    {
        return $this->container['tackles_for_loss'];
    }

    /**
     * Sets tackles_for_loss
     *
     * @param float $tackles_for_loss tackles_for_loss
     *
     * @return $this
     */
    public function setTacklesForLoss($tackles_for_loss)
    {
        $this->container['tackles_for_loss'] = $tackles_for_loss;

        return $this;
    }

    /**
     * Gets sacks
     *
     * @return float
     */
    public function getSacks()
    {
        return $this->container['sacks'];
    }

    /**
     * Sets sacks
     *
     * @param float $sacks sacks
     *
     * @return $this
     */
    public function setSacks($sacks)
    {
        $this->container['sacks'] = $sacks;

        return $this;
    }

    /**
     * Gets sack_yards
     *
     * @return float
     */
    public function getSackYards()
    {
        return $this->container['sack_yards'];
    }

    /**
     * Sets sack_yards
     *
     * @param float $sack_yards sack_yards
     *
     * @return $this
     */
    public function setSackYards($sack_yards)
    {
        $this->container['sack_yards'] = $sack_yards;

        return $this;
    }

    /**
     * Gets quarterback_hits
     *
     * @return float
     */
    public function getQuarterbackHits()
    {
        return $this->container['quarterback_hits'];
    }

    /**
     * Sets quarterback_hits
     *
     * @param float $quarterback_hits quarterback_hits
     *
     * @return $this
     */
    public function setQuarterbackHits($quarterback_hits)
    {
        $this->container['quarterback_hits'] = $quarterback_hits;

        return $this;
    }

    /**
     * Gets passes_defended
     *
     * @return float
     */
    public function getPassesDefended()
    {
        return $this->container['passes_defended'];
    }

    /**
     * Sets passes_defended
     *
     * @param float $passes_defended passes_defended
     *
     * @return $this
     */
    public function setPassesDefended($passes_defended)
    {
        $this->container['passes_defended'] = $passes_defended;

        return $this;
    }

    /**
     * Gets fumbles_forced
     *
     * @return float
     */
    public function getFumblesForced()
    {
        return $this->container['fumbles_forced'];
    }

    /**
     * Sets fumbles_forced
     *
     * @param float $fumbles_forced fumbles_forced
     *
     * @return $this
     */
    public function setFumblesForced($fumbles_forced)
    {
        $this->container['fumbles_forced'] = $fumbles_forced;

        return $this;
    }

    /**
     * Gets fumbles_recovered
     *
     * @return float
     */
    public function getFumblesRecovered()
    {
        return $this->container['fumbles_recovered'];
    }

    /**
     * Sets fumbles_recovered
     *
     * @param float $fumbles_recovered fumbles_recovered
     *
     * @return $this
     */
    public function setFumblesRecovered($fumbles_recovered)
    {
        $this->container['fumbles_recovered'] = $fumbles_recovered;

        return $this;
    }

    /**
     * Gets fumble_return_yards
     *
     * @return float
     */
    public function getFumbleReturnYards()
    {
        return $this->container['fumble_return_yards'];
    }

    /**
     * Sets fumble_return_yards
     *
     * @param float $fumble_return_yards fumble_return_yards
     *
     * @return $this
     */
    public function setFumbleReturnYards($fumble_return_yards)
    {
        $this->container['fumble_return_yards'] = $fumble_return_yards;

        return $this;
    }

    /**
     * Gets fumble_return_touchdowns
     *
     * @return float
     */
    public function getFumbleReturnTouchdowns()
    {
        return $this->container['fumble_return_touchdowns'];
    }

    /**
     * Sets fumble_return_touchdowns
     *
     * @param float $fumble_return_touchdowns fumble_return_touchdowns
     *
     * @return $this
     */
    public function setFumbleReturnTouchdowns($fumble_return_touchdowns)
    {
        $this->container['fumble_return_touchdowns'] = $fumble_return_touchdowns;

        return $this;
    }

    /**
     * Gets interceptions
     *
     * @return float
     */
    public function getInterceptions()
    {
        return $this->container['interceptions'];
    }

    /**
     * Sets interceptions
     *
     * @param float $interceptions interceptions
     *
     * @return $this
     */
    public function setInterceptions($interceptions)
    {
        $this->container['interceptions'] = $interceptions;

        return $this;
    }

    /**
     * Gets interception_return_yards
     *
     * @return float
     */
    public function getInterceptionReturnYards()
    {
        return $this->container['interception_return_yards'];
    }

    /**
     * Sets interception_return_yards
     *
     * @param float $interception_return_yards interception_return_yards
     *
     * @return $this
     */
    public function setInterceptionReturnYards($interception_return_yards)
    {
        $this->container['interception_return_yards'] = $interception_return_yards;

        return $this;
    }

    /**
     * Gets interception_return_touchdowns
     *
     * @return float
     */
    public function getInterceptionReturnTouchdowns()
    {
        return $this->container['interception_return_touchdowns'];
    }

    /**
     * Sets interception_return_touchdowns
     *
     * @param float $interception_return_touchdowns interception_return_touchdowns
     *
     * @return $this
     */
    public function setInterceptionReturnTouchdowns($interception_return_touchdowns)
    {
        $this->container['interception_return_touchdowns'] = $interception_return_touchdowns;

        return $this;
    }

    /**
     * Gets blocked_kicks
     *
     * @return float
     */
    public function getBlockedKicks()
    {
        return $this->container['blocked_kicks'];
    }

    /**
     * Sets blocked_kicks
     *
     * @param float $blocked_kicks blocked_kicks
     *
     * @return $this
     */
    public function setBlockedKicks($blocked_kicks)
    {
        $this->container['blocked_kicks'] = $blocked_kicks;

        return $this;
    }

    /**
     * Gets special_teams_solo_tackles
     *
     * @return float
     */
    public function getSpecialTeamsSoloTackles()
    {
        return $this->container['special_teams_solo_tackles'];
    }

    /**
     * Sets special_teams_solo_tackles
     *
     * @param float $special_teams_solo_tackles special_teams_solo_tackles
     *
     * @return $this
     */
    public function setSpecialTeamsSoloTackles($special_teams_solo_tackles)
    {
        $this->container['special_teams_solo_tackles'] = $special_teams_solo_tackles;

        return $this;
    }

    /**
     * Gets special_teams_assisted_tackles
     *
     * @return float
     */
    public function getSpecialTeamsAssistedTackles()
    {
        return $this->container['special_teams_assisted_tackles'];
    }

    /**
     * Sets special_teams_assisted_tackles
     *
     * @param float $special_teams_assisted_tackles special_teams_assisted_tackles
     *
     * @return $this
     */
    public function setSpecialTeamsAssistedTackles($special_teams_assisted_tackles)
    {
        $this->container['special_teams_assisted_tackles'] = $special_teams_assisted_tackles;

        return $this;
    }

    /**
     * Gets misc_solo_tackles
     *
     * @return float
     */
    public function getMiscSoloTackles()
    {
        return $this->container['misc_solo_tackles'];
    }

    /**
     * Sets misc_solo_tackles
     *
     * @param float $misc_solo_tackles misc_solo_tackles
     *
     * @return $this
     */
    public function setMiscSoloTackles($misc_solo_tackles)
    {
        $this->container['misc_solo_tackles'] = $misc_solo_tackles;

        return $this;
    }

    /**
     * Gets misc_assisted_tackles
     *
     * @return float
     */
    public function getMiscAssistedTackles()
    {
        return $this->container['misc_assisted_tackles'];
    }

    /**
     * Sets misc_assisted_tackles
     *
     * @param float $misc_assisted_tackles misc_assisted_tackles
     *
     * @return $this
     */
    public function setMiscAssistedTackles($misc_assisted_tackles)
    {
        $this->container['misc_assisted_tackles'] = $misc_assisted_tackles;

        return $this;
    }

    /**
     * Gets punts
     *
     * @return float
     */
    public function getPunts()
    {
        return $this->container['punts'];
    }

    /**
     * Sets punts
     *
     * @param float $punts punts
     *
     * @return $this
     */
    public function setPunts($punts)
    {
        $this->container['punts'] = $punts;

        return $this;
    }

    /**
     * Gets punt_yards
     *
     * @return float
     */
    public function getPuntYards()
    {
        return $this->container['punt_yards'];
    }

    /**
     * Sets punt_yards
     *
     * @param float $punt_yards punt_yards
     *
     * @return $this
     */
    public function setPuntYards($punt_yards)
    {
        $this->container['punt_yards'] = $punt_yards;

        return $this;
    }

    /**
     * Gets punt_average
     *
     * @return float
     */
    public function getPuntAverage()
    {
        return $this->container['punt_average'];
    }

    /**
     * Sets punt_average
     *
     * @param float $punt_average punt_average
     *
     * @return $this
     */
    public function setPuntAverage($punt_average)
    {
        $this->container['punt_average'] = $punt_average;

        return $this;
    }

    /**
     * Gets field_goals_attempted
     *
     * @return float
     */
    public function getFieldGoalsAttempted()
    {
        return $this->container['field_goals_attempted'];
    }

    /**
     * Sets field_goals_attempted
     *
     * @param float $field_goals_attempted field_goals_attempted
     *
     * @return $this
     */
    public function setFieldGoalsAttempted($field_goals_attempted)
    {
        $this->container['field_goals_attempted'] = $field_goals_attempted;

        return $this;
    }

    /**
     * Gets field_goals_made
     *
     * @return float
     */
    public function getFieldGoalsMade()
    {
        return $this->container['field_goals_made'];
    }

    /**
     * Sets field_goals_made
     *
     * @param float $field_goals_made field_goals_made
     *
     * @return $this
     */
    public function setFieldGoalsMade($field_goals_made)
    {
        $this->container['field_goals_made'] = $field_goals_made;

        return $this;
    }

    /**
     * Gets field_goals_longest_made
     *
     * @return float
     */
    public function getFieldGoalsLongestMade()
    {
        return $this->container['field_goals_longest_made'];
    }

    /**
     * Sets field_goals_longest_made
     *
     * @param float $field_goals_longest_made field_goals_longest_made
     *
     * @return $this
     */
    public function setFieldGoalsLongestMade($field_goals_longest_made)
    {
        $this->container['field_goals_longest_made'] = $field_goals_longest_made;

        return $this;
    }

    /**
     * Gets extra_points_made
     *
     * @return float
     */
    public function getExtraPointsMade()
    {
        return $this->container['extra_points_made'];
    }

    /**
     * Sets extra_points_made
     *
     * @param float $extra_points_made extra_points_made
     *
     * @return $this
     */
    public function setExtraPointsMade($extra_points_made)
    {
        $this->container['extra_points_made'] = $extra_points_made;

        return $this;
    }

    /**
     * Gets two_point_conversion_passes
     *
     * @return float
     */
    public function getTwoPointConversionPasses()
    {
        return $this->container['two_point_conversion_passes'];
    }

    /**
     * Sets two_point_conversion_passes
     *
     * @param float $two_point_conversion_passes two_point_conversion_passes
     *
     * @return $this
     */
    public function setTwoPointConversionPasses($two_point_conversion_passes)
    {
        $this->container['two_point_conversion_passes'] = $two_point_conversion_passes;

        return $this;
    }

    /**
     * Gets two_point_conversion_runs
     *
     * @return float
     */
    public function getTwoPointConversionRuns()
    {
        return $this->container['two_point_conversion_runs'];
    }

    /**
     * Sets two_point_conversion_runs
     *
     * @param float $two_point_conversion_runs two_point_conversion_runs
     *
     * @return $this
     */
    public function setTwoPointConversionRuns($two_point_conversion_runs)
    {
        $this->container['two_point_conversion_runs'] = $two_point_conversion_runs;

        return $this;
    }

    /**
     * Gets two_point_conversion_receptions
     *
     * @return float
     */
    public function getTwoPointConversionReceptions()
    {
        return $this->container['two_point_conversion_receptions'];
    }

    /**
     * Sets two_point_conversion_receptions
     *
     * @param float $two_point_conversion_receptions two_point_conversion_receptions
     *
     * @return $this
     */
    public function setTwoPointConversionReceptions($two_point_conversion_receptions)
    {
        $this->container['two_point_conversion_receptions'] = $two_point_conversion_receptions;

        return $this;
    }

    /**
     * Gets fantasy_points
     *
     * @return float
     */
    public function getFantasyPoints()
    {
        return $this->container['fantasy_points'];
    }

    /**
     * Sets fantasy_points
     *
     * @param float $fantasy_points fantasy_points
     *
     * @return $this
     */
    public function setFantasyPoints($fantasy_points)
    {
        $this->container['fantasy_points'] = $fantasy_points;

        return $this;
    }

    /**
     * Gets fantasy_points_ppr
     *
     * @return float
     */
    public function getFantasyPointsPpr()
    {
        return $this->container['fantasy_points_ppr'];
    }

    /**
     * Sets fantasy_points_ppr
     *
     * @param float $fantasy_points_ppr fantasy_points_ppr
     *
     * @return $this
     */
    public function setFantasyPointsPpr($fantasy_points_ppr)
    {
        $this->container['fantasy_points_ppr'] = $fantasy_points_ppr;

        return $this;
    }

    /**
     * Gets reception_percentage
     *
     * @return float
     */
    public function getReceptionPercentage()
    {
        return $this->container['reception_percentage'];
    }

    /**
     * Sets reception_percentage
     *
     * @param float $reception_percentage reception_percentage
     *
     * @return $this
     */
    public function setReceptionPercentage($reception_percentage)
    {
        $this->container['reception_percentage'] = $reception_percentage;

        return $this;
    }

    /**
     * Gets receiving_yards_per_target
     *
     * @return float
     */
    public function getReceivingYardsPerTarget()
    {
        return $this->container['receiving_yards_per_target'];
    }

    /**
     * Sets receiving_yards_per_target
     *
     * @param float $receiving_yards_per_target receiving_yards_per_target
     *
     * @return $this
     */
    public function setReceivingYardsPerTarget($receiving_yards_per_target)
    {
        $this->container['receiving_yards_per_target'] = $receiving_yards_per_target;

        return $this;
    }

    /**
     * Gets tackles
     *
     * @return float
     */
    public function getTackles()
    {
        return $this->container['tackles'];
    }

    /**
     * Sets tackles
     *
     * @param float $tackles tackles
     *
     * @return $this
     */
    public function setTackles($tackles)
    {
        $this->container['tackles'] = $tackles;

        return $this;
    }

    /**
     * Gets offensive_touchdowns
     *
     * @return float
     */
    public function getOffensiveTouchdowns()
    {
        return $this->container['offensive_touchdowns'];
    }

    /**
     * Sets offensive_touchdowns
     *
     * @param float $offensive_touchdowns offensive_touchdowns
     *
     * @return $this
     */
    public function setOffensiveTouchdowns($offensive_touchdowns)
    {
        $this->container['offensive_touchdowns'] = $offensive_touchdowns;

        return $this;
    }

    /**
     * Gets defensive_touchdowns
     *
     * @return float
     */
    public function getDefensiveTouchdowns()
    {
        return $this->container['defensive_touchdowns'];
    }

    /**
     * Sets defensive_touchdowns
     *
     * @param float $defensive_touchdowns defensive_touchdowns
     *
     * @return $this
     */
    public function setDefensiveTouchdowns($defensive_touchdowns)
    {
        $this->container['defensive_touchdowns'] = $defensive_touchdowns;

        return $this;
    }

    /**
     * Gets special_teams_touchdowns
     *
     * @return float
     */
    public function getSpecialTeamsTouchdowns()
    {
        return $this->container['special_teams_touchdowns'];
    }

    /**
     * Sets special_teams_touchdowns
     *
     * @param float $special_teams_touchdowns special_teams_touchdowns
     *
     * @return $this
     */
    public function setSpecialTeamsTouchdowns($special_teams_touchdowns)
    {
        $this->container['special_teams_touchdowns'] = $special_teams_touchdowns;

        return $this;
    }

    /**
     * Gets touchdowns
     *
     * @return float
     */
    public function getTouchdowns()
    {
        return $this->container['touchdowns'];
    }

    /**
     * Sets touchdowns
     *
     * @param float $touchdowns touchdowns
     *
     * @return $this
     */
    public function setTouchdowns($touchdowns)
    {
        $this->container['touchdowns'] = $touchdowns;

        return $this;
    }

    /**
     * Gets fantasy_position
     *
     * @return string
     */
    public function getFantasyPosition()
    {
        return $this->container['fantasy_position'];
    }

    /**
     * Sets fantasy_position
     *
     * @param string $fantasy_position fantasy_position
     *
     * @return $this
     */
    public function setFantasyPosition($fantasy_position)
    {
        $this->container['fantasy_position'] = $fantasy_position;

        return $this;
    }

    /**
     * Gets field_goal_percentage
     *
     * @return float
     */
    public function getFieldGoalPercentage()
    {
        return $this->container['field_goal_percentage'];
    }

    /**
     * Sets field_goal_percentage
     *
     * @param float $field_goal_percentage field_goal_percentage
     *
     * @return $this
     */
    public function setFieldGoalPercentage($field_goal_percentage)
    {
        $this->container['field_goal_percentage'] = $field_goal_percentage;

        return $this;
    }

    /**
     * Gets player_season_id
     *
     * @return int
     */
    public function getPlayerSeasonId()
    {
        return $this->container['player_season_id'];
    }

    /**
     * Sets player_season_id
     *
     * @param int $player_season_id player_season_id
     *
     * @return $this
     */
    public function setPlayerSeasonId($player_season_id)
    {
        $this->container['player_season_id'] = $player_season_id;

        return $this;
    }

    /**
     * Gets fumbles_own_recoveries
     *
     * @return float
     */
    public function getFumblesOwnRecoveries()
    {
        return $this->container['fumbles_own_recoveries'];
    }

    /**
     * Sets fumbles_own_recoveries
     *
     * @param float $fumbles_own_recoveries fumbles_own_recoveries
     *
     * @return $this
     */
    public function setFumblesOwnRecoveries($fumbles_own_recoveries)
    {
        $this->container['fumbles_own_recoveries'] = $fumbles_own_recoveries;

        return $this;
    }

    /**
     * Gets fumbles_out_of_bounds
     *
     * @return float
     */
    public function getFumblesOutOfBounds()
    {
        return $this->container['fumbles_out_of_bounds'];
    }

    /**
     * Sets fumbles_out_of_bounds
     *
     * @param float $fumbles_out_of_bounds fumbles_out_of_bounds
     *
     * @return $this
     */
    public function setFumblesOutOfBounds($fumbles_out_of_bounds)
    {
        $this->container['fumbles_out_of_bounds'] = $fumbles_out_of_bounds;

        return $this;
    }

    /**
     * Gets kick_return_fair_catches
     *
     * @return float
     */
    public function getKickReturnFairCatches()
    {
        return $this->container['kick_return_fair_catches'];
    }

    /**
     * Sets kick_return_fair_catches
     *
     * @param float $kick_return_fair_catches kick_return_fair_catches
     *
     * @return $this
     */
    public function setKickReturnFairCatches($kick_return_fair_catches)
    {
        $this->container['kick_return_fair_catches'] = $kick_return_fair_catches;

        return $this;
    }

    /**
     * Gets punt_return_fair_catches
     *
     * @return float
     */
    public function getPuntReturnFairCatches()
    {
        return $this->container['punt_return_fair_catches'];
    }

    /**
     * Sets punt_return_fair_catches
     *
     * @param float $punt_return_fair_catches punt_return_fair_catches
     *
     * @return $this
     */
    public function setPuntReturnFairCatches($punt_return_fair_catches)
    {
        $this->container['punt_return_fair_catches'] = $punt_return_fair_catches;

        return $this;
    }

    /**
     * Gets punt_touchbacks
     *
     * @return float
     */
    public function getPuntTouchbacks()
    {
        return $this->container['punt_touchbacks'];
    }

    /**
     * Sets punt_touchbacks
     *
     * @param float $punt_touchbacks punt_touchbacks
     *
     * @return $this
     */
    public function setPuntTouchbacks($punt_touchbacks)
    {
        $this->container['punt_touchbacks'] = $punt_touchbacks;

        return $this;
    }

    /**
     * Gets punt_inside20
     *
     * @return float
     */
    public function getPuntInside20()
    {
        return $this->container['punt_inside20'];
    }

    /**
     * Sets punt_inside20
     *
     * @param float $punt_inside20 punt_inside20
     *
     * @return $this
     */
    public function setPuntInside20($punt_inside20)
    {
        $this->container['punt_inside20'] = $punt_inside20;

        return $this;
    }

    /**
     * Gets punt_net_average
     *
     * @return float
     */
    public function getPuntNetAverage()
    {
        return $this->container['punt_net_average'];
    }

    /**
     * Sets punt_net_average
     *
     * @param float $punt_net_average punt_net_average
     *
     * @return $this
     */
    public function setPuntNetAverage($punt_net_average)
    {
        $this->container['punt_net_average'] = $punt_net_average;

        return $this;
    }

    /**
     * Gets extra_points_attempted
     *
     * @return float
     */
    public function getExtraPointsAttempted()
    {
        return $this->container['extra_points_attempted'];
    }

    /**
     * Sets extra_points_attempted
     *
     * @param float $extra_points_attempted extra_points_attempted
     *
     * @return $this
     */
    public function setExtraPointsAttempted($extra_points_attempted)
    {
        $this->container['extra_points_attempted'] = $extra_points_attempted;

        return $this;
    }

    /**
     * Gets blocked_kick_return_touchdowns
     *
     * @return float
     */
    public function getBlockedKickReturnTouchdowns()
    {
        return $this->container['blocked_kick_return_touchdowns'];
    }

    /**
     * Sets blocked_kick_return_touchdowns
     *
     * @param float $blocked_kick_return_touchdowns blocked_kick_return_touchdowns
     *
     * @return $this
     */
    public function setBlockedKickReturnTouchdowns($blocked_kick_return_touchdowns)
    {
        $this->container['blocked_kick_return_touchdowns'] = $blocked_kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets field_goal_return_touchdowns
     *
     * @return float
     */
    public function getFieldGoalReturnTouchdowns()
    {
        return $this->container['field_goal_return_touchdowns'];
    }

    /**
     * Sets field_goal_return_touchdowns
     *
     * @param float $field_goal_return_touchdowns field_goal_return_touchdowns
     *
     * @return $this
     */
    public function setFieldGoalReturnTouchdowns($field_goal_return_touchdowns)
    {
        $this->container['field_goal_return_touchdowns'] = $field_goal_return_touchdowns;

        return $this;
    }

    /**
     * Gets safeties
     *
     * @return float
     */
    public function getSafeties()
    {
        return $this->container['safeties'];
    }

    /**
     * Sets safeties
     *
     * @param float $safeties safeties
     *
     * @return $this
     */
    public function setSafeties($safeties)
    {
        $this->container['safeties'] = $safeties;

        return $this;
    }

    /**
     * Gets field_goals_had_blocked
     *
     * @return float
     */
    public function getFieldGoalsHadBlocked()
    {
        return $this->container['field_goals_had_blocked'];
    }

    /**
     * Sets field_goals_had_blocked
     *
     * @param float $field_goals_had_blocked field_goals_had_blocked
     *
     * @return $this
     */
    public function setFieldGoalsHadBlocked($field_goals_had_blocked)
    {
        $this->container['field_goals_had_blocked'] = $field_goals_had_blocked;

        return $this;
    }

    /**
     * Gets punts_had_blocked
     *
     * @return float
     */
    public function getPuntsHadBlocked()
    {
        return $this->container['punts_had_blocked'];
    }

    /**
     * Sets punts_had_blocked
     *
     * @param float $punts_had_blocked punts_had_blocked
     *
     * @return $this
     */
    public function setPuntsHadBlocked($punts_had_blocked)
    {
        $this->container['punts_had_blocked'] = $punts_had_blocked;

        return $this;
    }

    /**
     * Gets extra_points_had_blocked
     *
     * @return float
     */
    public function getExtraPointsHadBlocked()
    {
        return $this->container['extra_points_had_blocked'];
    }

    /**
     * Sets extra_points_had_blocked
     *
     * @param float $extra_points_had_blocked extra_points_had_blocked
     *
     * @return $this
     */
    public function setExtraPointsHadBlocked($extra_points_had_blocked)
    {
        $this->container['extra_points_had_blocked'] = $extra_points_had_blocked;

        return $this;
    }

    /**
     * Gets punt_long
     *
     * @return float
     */
    public function getPuntLong()
    {
        return $this->container['punt_long'];
    }

    /**
     * Sets punt_long
     *
     * @param float $punt_long punt_long
     *
     * @return $this
     */
    public function setPuntLong($punt_long)
    {
        $this->container['punt_long'] = $punt_long;

        return $this;
    }

    /**
     * Gets blocked_kick_return_yards
     *
     * @return float
     */
    public function getBlockedKickReturnYards()
    {
        return $this->container['blocked_kick_return_yards'];
    }

    /**
     * Sets blocked_kick_return_yards
     *
     * @param float $blocked_kick_return_yards blocked_kick_return_yards
     *
     * @return $this
     */
    public function setBlockedKickReturnYards($blocked_kick_return_yards)
    {
        $this->container['blocked_kick_return_yards'] = $blocked_kick_return_yards;

        return $this;
    }

    /**
     * Gets field_goal_return_yards
     *
     * @return float
     */
    public function getFieldGoalReturnYards()
    {
        return $this->container['field_goal_return_yards'];
    }

    /**
     * Sets field_goal_return_yards
     *
     * @param float $field_goal_return_yards field_goal_return_yards
     *
     * @return $this
     */
    public function setFieldGoalReturnYards($field_goal_return_yards)
    {
        $this->container['field_goal_return_yards'] = $field_goal_return_yards;

        return $this;
    }

    /**
     * Gets punt_net_yards
     *
     * @return float
     */
    public function getPuntNetYards()
    {
        return $this->container['punt_net_yards'];
    }

    /**
     * Sets punt_net_yards
     *
     * @param float $punt_net_yards punt_net_yards
     *
     * @return $this
     */
    public function setPuntNetYards($punt_net_yards)
    {
        $this->container['punt_net_yards'] = $punt_net_yards;

        return $this;
    }

    /**
     * Gets special_teams_fumbles_forced
     *
     * @return float
     */
    public function getSpecialTeamsFumblesForced()
    {
        return $this->container['special_teams_fumbles_forced'];
    }

    /**
     * Sets special_teams_fumbles_forced
     *
     * @param float $special_teams_fumbles_forced special_teams_fumbles_forced
     *
     * @return $this
     */
    public function setSpecialTeamsFumblesForced($special_teams_fumbles_forced)
    {
        $this->container['special_teams_fumbles_forced'] = $special_teams_fumbles_forced;

        return $this;
    }

    /**
     * Gets special_teams_fumbles_recovered
     *
     * @return float
     */
    public function getSpecialTeamsFumblesRecovered()
    {
        return $this->container['special_teams_fumbles_recovered'];
    }

    /**
     * Sets special_teams_fumbles_recovered
     *
     * @param float $special_teams_fumbles_recovered special_teams_fumbles_recovered
     *
     * @return $this
     */
    public function setSpecialTeamsFumblesRecovered($special_teams_fumbles_recovered)
    {
        $this->container['special_teams_fumbles_recovered'] = $special_teams_fumbles_recovered;

        return $this;
    }

    /**
     * Gets misc_fumbles_forced
     *
     * @return float
     */
    public function getMiscFumblesForced()
    {
        return $this->container['misc_fumbles_forced'];
    }

    /**
     * Sets misc_fumbles_forced
     *
     * @param float $misc_fumbles_forced misc_fumbles_forced
     *
     * @return $this
     */
    public function setMiscFumblesForced($misc_fumbles_forced)
    {
        $this->container['misc_fumbles_forced'] = $misc_fumbles_forced;

        return $this;
    }

    /**
     * Gets misc_fumbles_recovered
     *
     * @return float
     */
    public function getMiscFumblesRecovered()
    {
        return $this->container['misc_fumbles_recovered'];
    }

    /**
     * Sets misc_fumbles_recovered
     *
     * @param float $misc_fumbles_recovered misc_fumbles_recovered
     *
     * @return $this
     */
    public function setMiscFumblesRecovered($misc_fumbles_recovered)
    {
        $this->container['misc_fumbles_recovered'] = $misc_fumbles_recovered;

        return $this;
    }

    /**
     * Gets short_name
     *
     * @return string
     */
    public function getShortName()
    {
        return $this->container['short_name'];
    }

    /**
     * Sets short_name
     *
     * @param string $short_name short_name
     *
     * @return $this
     */
    public function setShortName($short_name)
    {
        $this->container['short_name'] = $short_name;

        return $this;
    }

    /**
     * Gets safeties_allowed
     *
     * @return float
     */
    public function getSafetiesAllowed()
    {
        return $this->container['safeties_allowed'];
    }

    /**
     * Sets safeties_allowed
     *
     * @param float $safeties_allowed safeties_allowed
     *
     * @return $this
     */
    public function setSafetiesAllowed($safeties_allowed)
    {
        $this->container['safeties_allowed'] = $safeties_allowed;

        return $this;
    }

    /**
     * Gets temperature
     *
     * @return int
     */
    public function getTemperature()
    {
        return $this->container['temperature'];
    }

    /**
     * Sets temperature
     *
     * @param int $temperature temperature
     *
     * @return $this
     */
    public function setTemperature($temperature)
    {
        $this->container['temperature'] = $temperature;

        return $this;
    }

    /**
     * Gets humidity
     *
     * @return int
     */
    public function getHumidity()
    {
        return $this->container['humidity'];
    }

    /**
     * Sets humidity
     *
     * @param int $humidity humidity
     *
     * @return $this
     */
    public function setHumidity($humidity)
    {
        $this->container['humidity'] = $humidity;

        return $this;
    }

    /**
     * Gets wind_speed
     *
     * @return int
     */
    public function getWindSpeed()
    {
        return $this->container['wind_speed'];
    }

    /**
     * Sets wind_speed
     *
     * @param int $wind_speed wind_speed
     *
     * @return $this
     */
    public function setWindSpeed($wind_speed)
    {
        $this->container['wind_speed'] = $wind_speed;

        return $this;
    }

    /**
     * Gets offensive_snaps_played
     *
     * @return int
     */
    public function getOffensiveSnapsPlayed()
    {
        return $this->container['offensive_snaps_played'];
    }

    /**
     * Sets offensive_snaps_played
     *
     * @param int $offensive_snaps_played offensive_snaps_played
     *
     * @return $this
     */
    public function setOffensiveSnapsPlayed($offensive_snaps_played)
    {
        $this->container['offensive_snaps_played'] = $offensive_snaps_played;

        return $this;
    }

    /**
     * Gets defensive_snaps_played
     *
     * @return int
     */
    public function getDefensiveSnapsPlayed()
    {
        return $this->container['defensive_snaps_played'];
    }

    /**
     * Sets defensive_snaps_played
     *
     * @param int $defensive_snaps_played defensive_snaps_played
     *
     * @return $this
     */
    public function setDefensiveSnapsPlayed($defensive_snaps_played)
    {
        $this->container['defensive_snaps_played'] = $defensive_snaps_played;

        return $this;
    }

    /**
     * Gets special_teams_snaps_played
     *
     * @return int
     */
    public function getSpecialTeamsSnapsPlayed()
    {
        return $this->container['special_teams_snaps_played'];
    }

    /**
     * Sets special_teams_snaps_played
     *
     * @param int $special_teams_snaps_played special_teams_snaps_played
     *
     * @return $this
     */
    public function setSpecialTeamsSnapsPlayed($special_teams_snaps_played)
    {
        $this->container['special_teams_snaps_played'] = $special_teams_snaps_played;

        return $this;
    }

    /**
     * Gets offensive_team_snaps
     *
     * @return int
     */
    public function getOffensiveTeamSnaps()
    {
        return $this->container['offensive_team_snaps'];
    }

    /**
     * Sets offensive_team_snaps
     *
     * @param int $offensive_team_snaps offensive_team_snaps
     *
     * @return $this
     */
    public function setOffensiveTeamSnaps($offensive_team_snaps)
    {
        $this->container['offensive_team_snaps'] = $offensive_team_snaps;

        return $this;
    }

    /**
     * Gets defensive_team_snaps
     *
     * @return int
     */
    public function getDefensiveTeamSnaps()
    {
        return $this->container['defensive_team_snaps'];
    }

    /**
     * Sets defensive_team_snaps
     *
     * @param int $defensive_team_snaps defensive_team_snaps
     *
     * @return $this
     */
    public function setDefensiveTeamSnaps($defensive_team_snaps)
    {
        $this->container['defensive_team_snaps'] = $defensive_team_snaps;

        return $this;
    }

    /**
     * Gets special_teams_team_snaps
     *
     * @return int
     */
    public function getSpecialTeamsTeamSnaps()
    {
        return $this->container['special_teams_team_snaps'];
    }

    /**
     * Sets special_teams_team_snaps
     *
     * @param int $special_teams_team_snaps special_teams_team_snaps
     *
     * @return $this
     */
    public function setSpecialTeamsTeamSnaps($special_teams_team_snaps)
    {
        $this->container['special_teams_team_snaps'] = $special_teams_team_snaps;

        return $this;
    }

    /**
     * Gets auction_value
     *
     * @return float
     */
    public function getAuctionValue()
    {
        return $this->container['auction_value'];
    }

    /**
     * Sets auction_value
     *
     * @param float $auction_value auction_value
     *
     * @return $this
     */
    public function setAuctionValue($auction_value)
    {
        $this->container['auction_value'] = $auction_value;

        return $this;
    }

    /**
     * Gets auction_value_ppr
     *
     * @return float
     */
    public function getAuctionValuePpr()
    {
        return $this->container['auction_value_ppr'];
    }

    /**
     * Sets auction_value_ppr
     *
     * @param float $auction_value_ppr auction_value_ppr
     *
     * @return $this
     */
    public function setAuctionValuePpr($auction_value_ppr)
    {
        $this->container['auction_value_ppr'] = $auction_value_ppr;

        return $this;
    }

    /**
     * Gets two_point_conversion_returns
     *
     * @return float
     */
    public function getTwoPointConversionReturns()
    {
        return $this->container['two_point_conversion_returns'];
    }

    /**
     * Sets two_point_conversion_returns
     *
     * @param float $two_point_conversion_returns two_point_conversion_returns
     *
     * @return $this
     */
    public function setTwoPointConversionReturns($two_point_conversion_returns)
    {
        $this->container['two_point_conversion_returns'] = $two_point_conversion_returns;

        return $this;
    }

    /**
     * Gets fantasy_points_fan_duel
     *
     * @return float
     */
    public function getFantasyPointsFanDuel()
    {
        return $this->container['fantasy_points_fan_duel'];
    }

    /**
     * Sets fantasy_points_fan_duel
     *
     * @param float $fantasy_points_fan_duel fantasy_points_fan_duel
     *
     * @return $this
     */
    public function setFantasyPointsFanDuel($fantasy_points_fan_duel)
    {
        $this->container['fantasy_points_fan_duel'] = $fantasy_points_fan_duel;

        return $this;
    }

    /**
     * Gets field_goals_made0to19
     *
     * @return float
     */
    public function getFieldGoalsMade0to19()
    {
        return $this->container['field_goals_made0to19'];
    }

    /**
     * Sets field_goals_made0to19
     *
     * @param float $field_goals_made0to19 field_goals_made0to19
     *
     * @return $this
     */
    public function setFieldGoalsMade0to19($field_goals_made0to19)
    {
        $this->container['field_goals_made0to19'] = $field_goals_made0to19;

        return $this;
    }

    /**
     * Gets field_goals_made20to29
     *
     * @return float
     */
    public function getFieldGoalsMade20to29()
    {
        return $this->container['field_goals_made20to29'];
    }

    /**
     * Sets field_goals_made20to29
     *
     * @param float $field_goals_made20to29 field_goals_made20to29
     *
     * @return $this
     */
    public function setFieldGoalsMade20to29($field_goals_made20to29)
    {
        $this->container['field_goals_made20to29'] = $field_goals_made20to29;

        return $this;
    }

    /**
     * Gets field_goals_made30to39
     *
     * @return float
     */
    public function getFieldGoalsMade30to39()
    {
        return $this->container['field_goals_made30to39'];
    }

    /**
     * Sets field_goals_made30to39
     *
     * @param float $field_goals_made30to39 field_goals_made30to39
     *
     * @return $this
     */
    public function setFieldGoalsMade30to39($field_goals_made30to39)
    {
        $this->container['field_goals_made30to39'] = $field_goals_made30to39;

        return $this;
    }

    /**
     * Gets field_goals_made40to49
     *
     * @return float
     */
    public function getFieldGoalsMade40to49()
    {
        return $this->container['field_goals_made40to49'];
    }

    /**
     * Sets field_goals_made40to49
     *
     * @param float $field_goals_made40to49 field_goals_made40to49
     *
     * @return $this
     */
    public function setFieldGoalsMade40to49($field_goals_made40to49)
    {
        $this->container['field_goals_made40to49'] = $field_goals_made40to49;

        return $this;
    }

    /**
     * Gets field_goals_made50_plus
     *
     * @return float
     */
    public function getFieldGoalsMade50Plus()
    {
        return $this->container['field_goals_made50_plus'];
    }

    /**
     * Sets field_goals_made50_plus
     *
     * @param float $field_goals_made50_plus field_goals_made50_plus
     *
     * @return $this
     */
    public function setFieldGoalsMade50Plus($field_goals_made50_plus)
    {
        $this->container['field_goals_made50_plus'] = $field_goals_made50_plus;

        return $this;
    }

    /**
     * Gets fantasy_points_draft_kings
     *
     * @return float
     */
    public function getFantasyPointsDraftKings()
    {
        return $this->container['fantasy_points_draft_kings'];
    }

    /**
     * Sets fantasy_points_draft_kings
     *
     * @param float $fantasy_points_draft_kings fantasy_points_draft_kings
     *
     * @return $this
     */
    public function setFantasyPointsDraftKings($fantasy_points_draft_kings)
    {
        $this->container['fantasy_points_draft_kings'] = $fantasy_points_draft_kings;

        return $this;
    }

    /**
     * Gets fantasy_points_yahoo
     *
     * @return float
     */
    public function getFantasyPointsYahoo()
    {
        return $this->container['fantasy_points_yahoo'];
    }

    /**
     * Sets fantasy_points_yahoo
     *
     * @param float $fantasy_points_yahoo fantasy_points_yahoo
     *
     * @return $this
     */
    public function setFantasyPointsYahoo($fantasy_points_yahoo)
    {
        $this->container['fantasy_points_yahoo'] = $fantasy_points_yahoo;

        return $this;
    }

    /**
     * Gets average_draft_position
     *
     * @return float
     */
    public function getAverageDraftPosition()
    {
        return $this->container['average_draft_position'];
    }

    /**
     * Sets average_draft_position
     *
     * @param float $average_draft_position average_draft_position
     *
     * @return $this
     */
    public function setAverageDraftPosition($average_draft_position)
    {
        $this->container['average_draft_position'] = $average_draft_position;

        return $this;
    }

    /**
     * Gets average_draft_position_ppr
     *
     * @return float
     */
    public function getAverageDraftPositionPpr()
    {
        return $this->container['average_draft_position_ppr'];
    }

    /**
     * Sets average_draft_position_ppr
     *
     * @param float $average_draft_position_ppr average_draft_position_ppr
     *
     * @return $this
     */
    public function setAverageDraftPositionPpr($average_draft_position_ppr)
    {
        $this->container['average_draft_position_ppr'] = $average_draft_position_ppr;

        return $this;
    }

    /**
     * Gets team_id
     *
     * @return int
     */
    public function getTeamId()
    {
        return $this->container['team_id'];
    }

    /**
     * Sets team_id
     *
     * @param int $team_id team_id
     *
     * @return $this
     */
    public function setTeamId($team_id)
    {
        $this->container['team_id'] = $team_id;

        return $this;
    }

    /**
     * Gets global_team_id
     *
     * @return int
     */
    public function getGlobalTeamId()
    {
        return $this->container['global_team_id'];
    }

    /**
     * Sets global_team_id
     *
     * @param int $global_team_id global_team_id
     *
     * @return $this
     */
    public function setGlobalTeamId($global_team_id)
    {
        $this->container['global_team_id'] = $global_team_id;

        return $this;
    }

    /**
     * Gets fantasy_points_fantasy_draft
     *
     * @return float
     */
    public function getFantasyPointsFantasyDraft()
    {
        return $this->container['fantasy_points_fantasy_draft'];
    }

    /**
     * Sets fantasy_points_fantasy_draft
     *
     * @param float $fantasy_points_fantasy_draft fantasy_points_fantasy_draft
     *
     * @return $this
     */
    public function setFantasyPointsFantasyDraft($fantasy_points_fantasy_draft)
    {
        $this->container['fantasy_points_fantasy_draft'] = $fantasy_points_fantasy_draft;

        return $this;
    }

    /**
     * Gets scoring_details
     *
     * @return \Acme\FantasyDataStats\\ScoringDetail[]
     */
    public function getScoringDetails()
    {
        return $this->container['scoring_details'];
    }

    /**
     * Sets scoring_details
     *
     * @param \Acme\FantasyDataStats\\ScoringDetail[] $scoring_details scoring_details
     *
     * @return $this
     */
    public function setScoringDetails($scoring_details)
    {
        $this->container['scoring_details'] = $scoring_details;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param  integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param  integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param  integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


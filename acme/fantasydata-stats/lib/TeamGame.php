<?php
/**
 * TeamGame
 *
 * PHP version 5
 *
 * @category Class
 * @package  Acme\FantasyDataStats
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * NFL v3 Stats
 *
 * NFL rosters, player stats, team stats, and fantasy stats API.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Acme\FantasyDataStats;

use \ArrayAccess;
use \Acme\FantasyDataStats\ObjectSerializer;

/**
 * TeamGame Class Doc Comment
 *
 * @category Class
 * @package     Acme\FantasyDataStats
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class TeamGame implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'TeamGame';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'game_key' => 'string',
        'date' => 'string',
        'season_type' => 'int',
        'season' => 'int',
        'week' => 'int',
        'team' => 'string',
        'opponent' => 'string',
        'home_or_away' => 'string',
        'score' => 'int',
        'opponent_score' => 'int',
        'total_score' => 'int',
        'stadium' => 'string',
        'playing_surface' => 'string',
        'temperature' => 'int',
        'humidity' => 'int',
        'wind_speed' => 'int',
        'over_under' => 'float',
        'point_spread' => 'float',
        'score_quarter1' => 'int',
        'score_quarter2' => 'int',
        'score_quarter3' => 'int',
        'score_quarter4' => 'int',
        'score_overtime' => 'int',
        'time_of_possession_minutes' => 'int',
        'time_of_possession_seconds' => 'int',
        'time_of_possession' => 'string',
        'first_downs' => 'int',
        'first_downs_by_rushing' => 'int',
        'first_downs_by_passing' => 'int',
        'first_downs_by_penalty' => 'int',
        'offensive_plays' => 'int',
        'offensive_yards' => 'int',
        'offensive_yards_per_play' => 'float',
        'touchdowns' => 'int',
        'rushing_attempts' => 'int',
        'rushing_yards' => 'int',
        'rushing_yards_per_attempt' => 'float',
        'rushing_touchdowns' => 'int',
        'passing_attempts' => 'int',
        'passing_completions' => 'int',
        'passing_yards' => 'int',
        'passing_touchdowns' => 'int',
        'passing_interceptions' => 'int',
        'passing_yards_per_attempt' => 'float',
        'passing_yards_per_completion' => 'float',
        'completion_percentage' => 'float',
        'passer_rating' => 'float',
        'third_down_attempts' => 'int',
        'third_down_conversions' => 'int',
        'third_down_percentage' => 'float',
        'fourth_down_attempts' => 'int',
        'fourth_down_conversions' => 'int',
        'fourth_down_percentage' => 'float',
        'red_zone_attempts' => 'int',
        'red_zone_conversions' => 'int',
        'goal_to_go_attempts' => 'int',
        'goal_to_go_conversions' => 'int',
        'return_yards' => 'int',
        'penalties' => 'int',
        'penalty_yards' => 'int',
        'fumbles' => 'int',
        'fumbles_lost' => 'int',
        'times_sacked' => 'int',
        'times_sacked_yards' => 'int',
        'quarterback_hits' => 'int',
        'tackles_for_loss' => 'int',
        'safeties' => 'int',
        'punts' => 'int',
        'punt_yards' => 'int',
        'punt_average' => 'float',
        'giveaways' => 'int',
        'takeaways' => 'int',
        'turnover_differential' => 'int',
        'opponent_score_quarter1' => 'int',
        'opponent_score_quarter2' => 'int',
        'opponent_score_quarter3' => 'int',
        'opponent_score_quarter4' => 'int',
        'opponent_score_overtime' => 'int',
        'opponent_time_of_possession_minutes' => 'int',
        'opponent_time_of_possession_seconds' => 'int',
        'opponent_time_of_possession' => 'string',
        'opponent_first_downs' => 'int',
        'opponent_first_downs_by_rushing' => 'int',
        'opponent_first_downs_by_passing' => 'int',
        'opponent_first_downs_by_penalty' => 'int',
        'opponent_offensive_plays' => 'int',
        'opponent_offensive_yards' => 'int',
        'opponent_offensive_yards_per_play' => 'float',
        'opponent_touchdowns' => 'int',
        'opponent_rushing_attempts' => 'int',
        'opponent_rushing_yards' => 'int',
        'opponent_rushing_yards_per_attempt' => 'float',
        'opponent_rushing_touchdowns' => 'int',
        'opponent_passing_attempts' => 'int',
        'opponent_passing_completions' => 'int',
        'opponent_passing_yards' => 'int',
        'opponent_passing_touchdowns' => 'int',
        'opponent_passing_interceptions' => 'int',
        'opponent_passing_yards_per_attempt' => 'float',
        'opponent_passing_yards_per_completion' => 'float',
        'opponent_completion_percentage' => 'float',
        'opponent_passer_rating' => 'float',
        'opponent_third_down_attempts' => 'int',
        'opponent_third_down_conversions' => 'int',
        'opponent_third_down_percentage' => 'float',
        'opponent_fourth_down_attempts' => 'int',
        'opponent_fourth_down_conversions' => 'int',
        'opponent_fourth_down_percentage' => 'float',
        'opponent_red_zone_attempts' => 'int',
        'opponent_red_zone_conversions' => 'int',
        'opponent_goal_to_go_attempts' => 'int',
        'opponent_goal_to_go_conversions' => 'int',
        'opponent_return_yards' => 'int',
        'opponent_penalties' => 'int',
        'opponent_penalty_yards' => 'int',
        'opponent_fumbles' => 'int',
        'opponent_fumbles_lost' => 'int',
        'opponent_times_sacked' => 'int',
        'opponent_times_sacked_yards' => 'int',
        'opponent_quarterback_hits' => 'int',
        'opponent_tackles_for_loss' => 'int',
        'opponent_safeties' => 'int',
        'opponent_punts' => 'int',
        'opponent_punt_yards' => 'int',
        'opponent_punt_average' => 'float',
        'opponent_giveaways' => 'int',
        'opponent_takeaways' => 'int',
        'opponent_turnover_differential' => 'int',
        'red_zone_percentage' => 'float',
        'goal_to_go_percentage' => 'float',
        'quarterback_hits_differential' => 'int',
        'tackles_for_loss_differential' => 'int',
        'quarterback_sacks_differential' => 'int',
        'tackles_for_loss_percentage' => 'float',
        'quarterback_hits_percentage' => 'float',
        'times_sacked_percentage' => 'float',
        'opponent_red_zone_percentage' => 'float',
        'opponent_goal_to_go_percentage' => 'float',
        'opponent_quarterback_hits_differential' => 'int',
        'opponent_tackles_for_loss_differential' => 'int',
        'opponent_quarterback_sacks_differential' => 'int',
        'opponent_tackles_for_loss_percentage' => 'float',
        'opponent_quarterback_hits_percentage' => 'float',
        'opponent_times_sacked_percentage' => 'float',
        'kickoffs' => 'int',
        'kickoffs_in_end_zone' => 'int',
        'kickoff_touchbacks' => 'int',
        'punts_had_blocked' => 'int',
        'punt_net_average' => 'float',
        'extra_point_kicking_attempts' => 'int',
        'extra_point_kicking_conversions' => 'int',
        'extra_points_had_blocked' => 'int',
        'extra_point_passing_attempts' => 'int',
        'extra_point_passing_conversions' => 'int',
        'extra_point_rushing_attempts' => 'int',
        'extra_point_rushing_conversions' => 'int',
        'field_goal_attempts' => 'int',
        'field_goals_made' => 'int',
        'field_goals_had_blocked' => 'int',
        'punt_returns' => 'int',
        'punt_return_yards' => 'int',
        'kick_returns' => 'int',
        'kick_return_yards' => 'int',
        'interception_returns' => 'int',
        'interception_return_yards' => 'int',
        'opponent_kickoffs' => 'int',
        'opponent_kickoffs_in_end_zone' => 'int',
        'opponent_kickoff_touchbacks' => 'int',
        'opponent_punts_had_blocked' => 'int',
        'opponent_punt_net_average' => 'float',
        'opponent_extra_point_kicking_attempts' => 'int',
        'opponent_extra_point_kicking_conversions' => 'int',
        'opponent_extra_points_had_blocked' => 'int',
        'opponent_extra_point_passing_attempts' => 'int',
        'opponent_extra_point_passing_conversions' => 'int',
        'opponent_extra_point_rushing_attempts' => 'int',
        'opponent_extra_point_rushing_conversions' => 'int',
        'opponent_field_goal_attempts' => 'int',
        'opponent_field_goals_made' => 'int',
        'opponent_field_goals_had_blocked' => 'int',
        'opponent_punt_returns' => 'int',
        'opponent_punt_return_yards' => 'int',
        'opponent_kick_returns' => 'int',
        'opponent_kick_return_yards' => 'int',
        'opponent_interception_returns' => 'int',
        'opponent_interception_return_yards' => 'int',
        'solo_tackles' => 'int',
        'assisted_tackles' => 'int',
        'sacks' => 'int',
        'sack_yards' => 'int',
        'passes_defended' => 'int',
        'fumbles_forced' => 'int',
        'fumbles_recovered' => 'int',
        'fumble_return_yards' => 'int',
        'fumble_return_touchdowns' => 'int',
        'interception_return_touchdowns' => 'int',
        'blocked_kicks' => 'int',
        'punt_return_touchdowns' => 'int',
        'punt_return_long' => 'int',
        'kick_return_touchdowns' => 'int',
        'kick_return_long' => 'int',
        'blocked_kick_return_yards' => 'int',
        'blocked_kick_return_touchdowns' => 'int',
        'field_goal_return_yards' => 'int',
        'field_goal_return_touchdowns' => 'int',
        'punt_net_yards' => 'int',
        'opponent_solo_tackles' => 'int',
        'opponent_assisted_tackles' => 'int',
        'opponent_sacks' => 'int',
        'opponent_sack_yards' => 'int',
        'opponent_passes_defended' => 'int',
        'opponent_fumbles_forced' => 'int',
        'opponent_fumbles_recovered' => 'int',
        'opponent_fumble_return_yards' => 'int',
        'opponent_fumble_return_touchdowns' => 'int',
        'opponent_interception_return_touchdowns' => 'int',
        'opponent_blocked_kicks' => 'int',
        'opponent_punt_return_touchdowns' => 'int',
        'opponent_punt_return_long' => 'int',
        'opponent_kick_return_touchdowns' => 'int',
        'opponent_kick_return_long' => 'int',
        'opponent_blocked_kick_return_yards' => 'int',
        'opponent_blocked_kick_return_touchdowns' => 'int',
        'opponent_field_goal_return_yards' => 'int',
        'opponent_field_goal_return_touchdowns' => 'int',
        'opponent_punt_net_yards' => 'int',
        'is_game_over' => 'bool',
        'team_name' => 'string',
        'day_of_week' => 'string',
        'passing_dropbacks' => 'int',
        'opponent_passing_dropbacks' => 'int',
        'team_game_id' => 'int',
        'point_differential' => 'int',
        'passing_interception_percentage' => 'float',
        'punt_return_average' => 'float',
        'kick_return_average' => 'float',
        'extra_point_percentage' => 'float',
        'field_goal_percentage' => 'float',
        'opponent_passing_interception_percentage' => 'float',
        'opponent_punt_return_average' => 'float',
        'opponent_kick_return_average' => 'float',
        'opponent_extra_point_percentage' => 'float',
        'opponent_field_goal_percentage' => 'float',
        'penalty_yard_differential' => 'int',
        'punt_return_yard_differential' => 'int',
        'kick_return_yard_differential' => 'int',
        'two_point_conversion_returns' => 'int',
        'opponent_two_point_conversion_returns' => 'int',
        'team_id' => 'int',
        'opponent_id' => 'int',
        'day' => 'string',
        'date_time' => 'string',
        'global_game_id' => 'int',
        'global_team_id' => 'int',
        'global_opponent_id' => 'int',
        'score_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'game_key' => null,
        'date' => null,
        'season_type' => null,
        'season' => null,
        'week' => null,
        'team' => null,
        'opponent' => null,
        'home_or_away' => null,
        'score' => null,
        'opponent_score' => null,
        'total_score' => null,
        'stadium' => null,
        'playing_surface' => null,
        'temperature' => null,
        'humidity' => null,
        'wind_speed' => null,
        'over_under' => null,
        'point_spread' => null,
        'score_quarter1' => null,
        'score_quarter2' => null,
        'score_quarter3' => null,
        'score_quarter4' => null,
        'score_overtime' => null,
        'time_of_possession_minutes' => null,
        'time_of_possession_seconds' => null,
        'time_of_possession' => null,
        'first_downs' => null,
        'first_downs_by_rushing' => null,
        'first_downs_by_passing' => null,
        'first_downs_by_penalty' => null,
        'offensive_plays' => null,
        'offensive_yards' => null,
        'offensive_yards_per_play' => null,
        'touchdowns' => null,
        'rushing_attempts' => null,
        'rushing_yards' => null,
        'rushing_yards_per_attempt' => null,
        'rushing_touchdowns' => null,
        'passing_attempts' => null,
        'passing_completions' => null,
        'passing_yards' => null,
        'passing_touchdowns' => null,
        'passing_interceptions' => null,
        'passing_yards_per_attempt' => null,
        'passing_yards_per_completion' => null,
        'completion_percentage' => null,
        'passer_rating' => null,
        'third_down_attempts' => null,
        'third_down_conversions' => null,
        'third_down_percentage' => null,
        'fourth_down_attempts' => null,
        'fourth_down_conversions' => null,
        'fourth_down_percentage' => null,
        'red_zone_attempts' => null,
        'red_zone_conversions' => null,
        'goal_to_go_attempts' => null,
        'goal_to_go_conversions' => null,
        'return_yards' => null,
        'penalties' => null,
        'penalty_yards' => null,
        'fumbles' => null,
        'fumbles_lost' => null,
        'times_sacked' => null,
        'times_sacked_yards' => null,
        'quarterback_hits' => null,
        'tackles_for_loss' => null,
        'safeties' => null,
        'punts' => null,
        'punt_yards' => null,
        'punt_average' => null,
        'giveaways' => null,
        'takeaways' => null,
        'turnover_differential' => null,
        'opponent_score_quarter1' => null,
        'opponent_score_quarter2' => null,
        'opponent_score_quarter3' => null,
        'opponent_score_quarter4' => null,
        'opponent_score_overtime' => null,
        'opponent_time_of_possession_minutes' => null,
        'opponent_time_of_possession_seconds' => null,
        'opponent_time_of_possession' => null,
        'opponent_first_downs' => null,
        'opponent_first_downs_by_rushing' => null,
        'opponent_first_downs_by_passing' => null,
        'opponent_first_downs_by_penalty' => null,
        'opponent_offensive_plays' => null,
        'opponent_offensive_yards' => null,
        'opponent_offensive_yards_per_play' => null,
        'opponent_touchdowns' => null,
        'opponent_rushing_attempts' => null,
        'opponent_rushing_yards' => null,
        'opponent_rushing_yards_per_attempt' => null,
        'opponent_rushing_touchdowns' => null,
        'opponent_passing_attempts' => null,
        'opponent_passing_completions' => null,
        'opponent_passing_yards' => null,
        'opponent_passing_touchdowns' => null,
        'opponent_passing_interceptions' => null,
        'opponent_passing_yards_per_attempt' => null,
        'opponent_passing_yards_per_completion' => null,
        'opponent_completion_percentage' => null,
        'opponent_passer_rating' => null,
        'opponent_third_down_attempts' => null,
        'opponent_third_down_conversions' => null,
        'opponent_third_down_percentage' => null,
        'opponent_fourth_down_attempts' => null,
        'opponent_fourth_down_conversions' => null,
        'opponent_fourth_down_percentage' => null,
        'opponent_red_zone_attempts' => null,
        'opponent_red_zone_conversions' => null,
        'opponent_goal_to_go_attempts' => null,
        'opponent_goal_to_go_conversions' => null,
        'opponent_return_yards' => null,
        'opponent_penalties' => null,
        'opponent_penalty_yards' => null,
        'opponent_fumbles' => null,
        'opponent_fumbles_lost' => null,
        'opponent_times_sacked' => null,
        'opponent_times_sacked_yards' => null,
        'opponent_quarterback_hits' => null,
        'opponent_tackles_for_loss' => null,
        'opponent_safeties' => null,
        'opponent_punts' => null,
        'opponent_punt_yards' => null,
        'opponent_punt_average' => null,
        'opponent_giveaways' => null,
        'opponent_takeaways' => null,
        'opponent_turnover_differential' => null,
        'red_zone_percentage' => null,
        'goal_to_go_percentage' => null,
        'quarterback_hits_differential' => null,
        'tackles_for_loss_differential' => null,
        'quarterback_sacks_differential' => null,
        'tackles_for_loss_percentage' => null,
        'quarterback_hits_percentage' => null,
        'times_sacked_percentage' => null,
        'opponent_red_zone_percentage' => null,
        'opponent_goal_to_go_percentage' => null,
        'opponent_quarterback_hits_differential' => null,
        'opponent_tackles_for_loss_differential' => null,
        'opponent_quarterback_sacks_differential' => null,
        'opponent_tackles_for_loss_percentage' => null,
        'opponent_quarterback_hits_percentage' => null,
        'opponent_times_sacked_percentage' => null,
        'kickoffs' => null,
        'kickoffs_in_end_zone' => null,
        'kickoff_touchbacks' => null,
        'punts_had_blocked' => null,
        'punt_net_average' => null,
        'extra_point_kicking_attempts' => null,
        'extra_point_kicking_conversions' => null,
        'extra_points_had_blocked' => null,
        'extra_point_passing_attempts' => null,
        'extra_point_passing_conversions' => null,
        'extra_point_rushing_attempts' => null,
        'extra_point_rushing_conversions' => null,
        'field_goal_attempts' => null,
        'field_goals_made' => null,
        'field_goals_had_blocked' => null,
        'punt_returns' => null,
        'punt_return_yards' => null,
        'kick_returns' => null,
        'kick_return_yards' => null,
        'interception_returns' => null,
        'interception_return_yards' => null,
        'opponent_kickoffs' => null,
        'opponent_kickoffs_in_end_zone' => null,
        'opponent_kickoff_touchbacks' => null,
        'opponent_punts_had_blocked' => null,
        'opponent_punt_net_average' => null,
        'opponent_extra_point_kicking_attempts' => null,
        'opponent_extra_point_kicking_conversions' => null,
        'opponent_extra_points_had_blocked' => null,
        'opponent_extra_point_passing_attempts' => null,
        'opponent_extra_point_passing_conversions' => null,
        'opponent_extra_point_rushing_attempts' => null,
        'opponent_extra_point_rushing_conversions' => null,
        'opponent_field_goal_attempts' => null,
        'opponent_field_goals_made' => null,
        'opponent_field_goals_had_blocked' => null,
        'opponent_punt_returns' => null,
        'opponent_punt_return_yards' => null,
        'opponent_kick_returns' => null,
        'opponent_kick_return_yards' => null,
        'opponent_interception_returns' => null,
        'opponent_interception_return_yards' => null,
        'solo_tackles' => null,
        'assisted_tackles' => null,
        'sacks' => null,
        'sack_yards' => null,
        'passes_defended' => null,
        'fumbles_forced' => null,
        'fumbles_recovered' => null,
        'fumble_return_yards' => null,
        'fumble_return_touchdowns' => null,
        'interception_return_touchdowns' => null,
        'blocked_kicks' => null,
        'punt_return_touchdowns' => null,
        'punt_return_long' => null,
        'kick_return_touchdowns' => null,
        'kick_return_long' => null,
        'blocked_kick_return_yards' => null,
        'blocked_kick_return_touchdowns' => null,
        'field_goal_return_yards' => null,
        'field_goal_return_touchdowns' => null,
        'punt_net_yards' => null,
        'opponent_solo_tackles' => null,
        'opponent_assisted_tackles' => null,
        'opponent_sacks' => null,
        'opponent_sack_yards' => null,
        'opponent_passes_defended' => null,
        'opponent_fumbles_forced' => null,
        'opponent_fumbles_recovered' => null,
        'opponent_fumble_return_yards' => null,
        'opponent_fumble_return_touchdowns' => null,
        'opponent_interception_return_touchdowns' => null,
        'opponent_blocked_kicks' => null,
        'opponent_punt_return_touchdowns' => null,
        'opponent_punt_return_long' => null,
        'opponent_kick_return_touchdowns' => null,
        'opponent_kick_return_long' => null,
        'opponent_blocked_kick_return_yards' => null,
        'opponent_blocked_kick_return_touchdowns' => null,
        'opponent_field_goal_return_yards' => null,
        'opponent_field_goal_return_touchdowns' => null,
        'opponent_punt_net_yards' => null,
        'is_game_over' => null,
        'team_name' => null,
        'day_of_week' => null,
        'passing_dropbacks' => null,
        'opponent_passing_dropbacks' => null,
        'team_game_id' => null,
        'point_differential' => null,
        'passing_interception_percentage' => null,
        'punt_return_average' => null,
        'kick_return_average' => null,
        'extra_point_percentage' => null,
        'field_goal_percentage' => null,
        'opponent_passing_interception_percentage' => null,
        'opponent_punt_return_average' => null,
        'opponent_kick_return_average' => null,
        'opponent_extra_point_percentage' => null,
        'opponent_field_goal_percentage' => null,
        'penalty_yard_differential' => null,
        'punt_return_yard_differential' => null,
        'kick_return_yard_differential' => null,
        'two_point_conversion_returns' => null,
        'opponent_two_point_conversion_returns' => null,
        'team_id' => null,
        'opponent_id' => null,
        'day' => null,
        'date_time' => null,
        'global_game_id' => null,
        'global_team_id' => null,
        'global_opponent_id' => null,
        'score_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'game_key' => 'GameKey',
        'date' => 'Date',
        'season_type' => 'SeasonType',
        'season' => 'Season',
        'week' => 'Week',
        'team' => 'Team',
        'opponent' => 'Opponent',
        'home_or_away' => 'HomeOrAway',
        'score' => 'Score',
        'opponent_score' => 'OpponentScore',
        'total_score' => 'TotalScore',
        'stadium' => 'Stadium',
        'playing_surface' => 'PlayingSurface',
        'temperature' => 'Temperature',
        'humidity' => 'Humidity',
        'wind_speed' => 'WindSpeed',
        'over_under' => 'OverUnder',
        'point_spread' => 'PointSpread',
        'score_quarter1' => 'ScoreQuarter1',
        'score_quarter2' => 'ScoreQuarter2',
        'score_quarter3' => 'ScoreQuarter3',
        'score_quarter4' => 'ScoreQuarter4',
        'score_overtime' => 'ScoreOvertime',
        'time_of_possession_minutes' => 'TimeOfPossessionMinutes',
        'time_of_possession_seconds' => 'TimeOfPossessionSeconds',
        'time_of_possession' => 'TimeOfPossession',
        'first_downs' => 'FirstDowns',
        'first_downs_by_rushing' => 'FirstDownsByRushing',
        'first_downs_by_passing' => 'FirstDownsByPassing',
        'first_downs_by_penalty' => 'FirstDownsByPenalty',
        'offensive_plays' => 'OffensivePlays',
        'offensive_yards' => 'OffensiveYards',
        'offensive_yards_per_play' => 'OffensiveYardsPerPlay',
        'touchdowns' => 'Touchdowns',
        'rushing_attempts' => 'RushingAttempts',
        'rushing_yards' => 'RushingYards',
        'rushing_yards_per_attempt' => 'RushingYardsPerAttempt',
        'rushing_touchdowns' => 'RushingTouchdowns',
        'passing_attempts' => 'PassingAttempts',
        'passing_completions' => 'PassingCompletions',
        'passing_yards' => 'PassingYards',
        'passing_touchdowns' => 'PassingTouchdowns',
        'passing_interceptions' => 'PassingInterceptions',
        'passing_yards_per_attempt' => 'PassingYardsPerAttempt',
        'passing_yards_per_completion' => 'PassingYardsPerCompletion',
        'completion_percentage' => 'CompletionPercentage',
        'passer_rating' => 'PasserRating',
        'third_down_attempts' => 'ThirdDownAttempts',
        'third_down_conversions' => 'ThirdDownConversions',
        'third_down_percentage' => 'ThirdDownPercentage',
        'fourth_down_attempts' => 'FourthDownAttempts',
        'fourth_down_conversions' => 'FourthDownConversions',
        'fourth_down_percentage' => 'FourthDownPercentage',
        'red_zone_attempts' => 'RedZoneAttempts',
        'red_zone_conversions' => 'RedZoneConversions',
        'goal_to_go_attempts' => 'GoalToGoAttempts',
        'goal_to_go_conversions' => 'GoalToGoConversions',
        'return_yards' => 'ReturnYards',
        'penalties' => 'Penalties',
        'penalty_yards' => 'PenaltyYards',
        'fumbles' => 'Fumbles',
        'fumbles_lost' => 'FumblesLost',
        'times_sacked' => 'TimesSacked',
        'times_sacked_yards' => 'TimesSackedYards',
        'quarterback_hits' => 'QuarterbackHits',
        'tackles_for_loss' => 'TacklesForLoss',
        'safeties' => 'Safeties',
        'punts' => 'Punts',
        'punt_yards' => 'PuntYards',
        'punt_average' => 'PuntAverage',
        'giveaways' => 'Giveaways',
        'takeaways' => 'Takeaways',
        'turnover_differential' => 'TurnoverDifferential',
        'opponent_score_quarter1' => 'OpponentScoreQuarter1',
        'opponent_score_quarter2' => 'OpponentScoreQuarter2',
        'opponent_score_quarter3' => 'OpponentScoreQuarter3',
        'opponent_score_quarter4' => 'OpponentScoreQuarter4',
        'opponent_score_overtime' => 'OpponentScoreOvertime',
        'opponent_time_of_possession_minutes' => 'OpponentTimeOfPossessionMinutes',
        'opponent_time_of_possession_seconds' => 'OpponentTimeOfPossessionSeconds',
        'opponent_time_of_possession' => 'OpponentTimeOfPossession',
        'opponent_first_downs' => 'OpponentFirstDowns',
        'opponent_first_downs_by_rushing' => 'OpponentFirstDownsByRushing',
        'opponent_first_downs_by_passing' => 'OpponentFirstDownsByPassing',
        'opponent_first_downs_by_penalty' => 'OpponentFirstDownsByPenalty',
        'opponent_offensive_plays' => 'OpponentOffensivePlays',
        'opponent_offensive_yards' => 'OpponentOffensiveYards',
        'opponent_offensive_yards_per_play' => 'OpponentOffensiveYardsPerPlay',
        'opponent_touchdowns' => 'OpponentTouchdowns',
        'opponent_rushing_attempts' => 'OpponentRushingAttempts',
        'opponent_rushing_yards' => 'OpponentRushingYards',
        'opponent_rushing_yards_per_attempt' => 'OpponentRushingYardsPerAttempt',
        'opponent_rushing_touchdowns' => 'OpponentRushingTouchdowns',
        'opponent_passing_attempts' => 'OpponentPassingAttempts',
        'opponent_passing_completions' => 'OpponentPassingCompletions',
        'opponent_passing_yards' => 'OpponentPassingYards',
        'opponent_passing_touchdowns' => 'OpponentPassingTouchdowns',
        'opponent_passing_interceptions' => 'OpponentPassingInterceptions',
        'opponent_passing_yards_per_attempt' => 'OpponentPassingYardsPerAttempt',
        'opponent_passing_yards_per_completion' => 'OpponentPassingYardsPerCompletion',
        'opponent_completion_percentage' => 'OpponentCompletionPercentage',
        'opponent_passer_rating' => 'OpponentPasserRating',
        'opponent_third_down_attempts' => 'OpponentThirdDownAttempts',
        'opponent_third_down_conversions' => 'OpponentThirdDownConversions',
        'opponent_third_down_percentage' => 'OpponentThirdDownPercentage',
        'opponent_fourth_down_attempts' => 'OpponentFourthDownAttempts',
        'opponent_fourth_down_conversions' => 'OpponentFourthDownConversions',
        'opponent_fourth_down_percentage' => 'OpponentFourthDownPercentage',
        'opponent_red_zone_attempts' => 'OpponentRedZoneAttempts',
        'opponent_red_zone_conversions' => 'OpponentRedZoneConversions',
        'opponent_goal_to_go_attempts' => 'OpponentGoalToGoAttempts',
        'opponent_goal_to_go_conversions' => 'OpponentGoalToGoConversions',
        'opponent_return_yards' => 'OpponentReturnYards',
        'opponent_penalties' => 'OpponentPenalties',
        'opponent_penalty_yards' => 'OpponentPenaltyYards',
        'opponent_fumbles' => 'OpponentFumbles',
        'opponent_fumbles_lost' => 'OpponentFumblesLost',
        'opponent_times_sacked' => 'OpponentTimesSacked',
        'opponent_times_sacked_yards' => 'OpponentTimesSackedYards',
        'opponent_quarterback_hits' => 'OpponentQuarterbackHits',
        'opponent_tackles_for_loss' => 'OpponentTacklesForLoss',
        'opponent_safeties' => 'OpponentSafeties',
        'opponent_punts' => 'OpponentPunts',
        'opponent_punt_yards' => 'OpponentPuntYards',
        'opponent_punt_average' => 'OpponentPuntAverage',
        'opponent_giveaways' => 'OpponentGiveaways',
        'opponent_takeaways' => 'OpponentTakeaways',
        'opponent_turnover_differential' => 'OpponentTurnoverDifferential',
        'red_zone_percentage' => 'RedZonePercentage',
        'goal_to_go_percentage' => 'GoalToGoPercentage',
        'quarterback_hits_differential' => 'QuarterbackHitsDifferential',
        'tackles_for_loss_differential' => 'TacklesForLossDifferential',
        'quarterback_sacks_differential' => 'QuarterbackSacksDifferential',
        'tackles_for_loss_percentage' => 'TacklesForLossPercentage',
        'quarterback_hits_percentage' => 'QuarterbackHitsPercentage',
        'times_sacked_percentage' => 'TimesSackedPercentage',
        'opponent_red_zone_percentage' => 'OpponentRedZonePercentage',
        'opponent_goal_to_go_percentage' => 'OpponentGoalToGoPercentage',
        'opponent_quarterback_hits_differential' => 'OpponentQuarterbackHitsDifferential',
        'opponent_tackles_for_loss_differential' => 'OpponentTacklesForLossDifferential',
        'opponent_quarterback_sacks_differential' => 'OpponentQuarterbackSacksDifferential',
        'opponent_tackles_for_loss_percentage' => 'OpponentTacklesForLossPercentage',
        'opponent_quarterback_hits_percentage' => 'OpponentQuarterbackHitsPercentage',
        'opponent_times_sacked_percentage' => 'OpponentTimesSackedPercentage',
        'kickoffs' => 'Kickoffs',
        'kickoffs_in_end_zone' => 'KickoffsInEndZone',
        'kickoff_touchbacks' => 'KickoffTouchbacks',
        'punts_had_blocked' => 'PuntsHadBlocked',
        'punt_net_average' => 'PuntNetAverage',
        'extra_point_kicking_attempts' => 'ExtraPointKickingAttempts',
        'extra_point_kicking_conversions' => 'ExtraPointKickingConversions',
        'extra_points_had_blocked' => 'ExtraPointsHadBlocked',
        'extra_point_passing_attempts' => 'ExtraPointPassingAttempts',
        'extra_point_passing_conversions' => 'ExtraPointPassingConversions',
        'extra_point_rushing_attempts' => 'ExtraPointRushingAttempts',
        'extra_point_rushing_conversions' => 'ExtraPointRushingConversions',
        'field_goal_attempts' => 'FieldGoalAttempts',
        'field_goals_made' => 'FieldGoalsMade',
        'field_goals_had_blocked' => 'FieldGoalsHadBlocked',
        'punt_returns' => 'PuntReturns',
        'punt_return_yards' => 'PuntReturnYards',
        'kick_returns' => 'KickReturns',
        'kick_return_yards' => 'KickReturnYards',
        'interception_returns' => 'InterceptionReturns',
        'interception_return_yards' => 'InterceptionReturnYards',
        'opponent_kickoffs' => 'OpponentKickoffs',
        'opponent_kickoffs_in_end_zone' => 'OpponentKickoffsInEndZone',
        'opponent_kickoff_touchbacks' => 'OpponentKickoffTouchbacks',
        'opponent_punts_had_blocked' => 'OpponentPuntsHadBlocked',
        'opponent_punt_net_average' => 'OpponentPuntNetAverage',
        'opponent_extra_point_kicking_attempts' => 'OpponentExtraPointKickingAttempts',
        'opponent_extra_point_kicking_conversions' => 'OpponentExtraPointKickingConversions',
        'opponent_extra_points_had_blocked' => 'OpponentExtraPointsHadBlocked',
        'opponent_extra_point_passing_attempts' => 'OpponentExtraPointPassingAttempts',
        'opponent_extra_point_passing_conversions' => 'OpponentExtraPointPassingConversions',
        'opponent_extra_point_rushing_attempts' => 'OpponentExtraPointRushingAttempts',
        'opponent_extra_point_rushing_conversions' => 'OpponentExtraPointRushingConversions',
        'opponent_field_goal_attempts' => 'OpponentFieldGoalAttempts',
        'opponent_field_goals_made' => 'OpponentFieldGoalsMade',
        'opponent_field_goals_had_blocked' => 'OpponentFieldGoalsHadBlocked',
        'opponent_punt_returns' => 'OpponentPuntReturns',
        'opponent_punt_return_yards' => 'OpponentPuntReturnYards',
        'opponent_kick_returns' => 'OpponentKickReturns',
        'opponent_kick_return_yards' => 'OpponentKickReturnYards',
        'opponent_interception_returns' => 'OpponentInterceptionReturns',
        'opponent_interception_return_yards' => 'OpponentInterceptionReturnYards',
        'solo_tackles' => 'SoloTackles',
        'assisted_tackles' => 'AssistedTackles',
        'sacks' => 'Sacks',
        'sack_yards' => 'SackYards',
        'passes_defended' => 'PassesDefended',
        'fumbles_forced' => 'FumblesForced',
        'fumbles_recovered' => 'FumblesRecovered',
        'fumble_return_yards' => 'FumbleReturnYards',
        'fumble_return_touchdowns' => 'FumbleReturnTouchdowns',
        'interception_return_touchdowns' => 'InterceptionReturnTouchdowns',
        'blocked_kicks' => 'BlockedKicks',
        'punt_return_touchdowns' => 'PuntReturnTouchdowns',
        'punt_return_long' => 'PuntReturnLong',
        'kick_return_touchdowns' => 'KickReturnTouchdowns',
        'kick_return_long' => 'KickReturnLong',
        'blocked_kick_return_yards' => 'BlockedKickReturnYards',
        'blocked_kick_return_touchdowns' => 'BlockedKickReturnTouchdowns',
        'field_goal_return_yards' => 'FieldGoalReturnYards',
        'field_goal_return_touchdowns' => 'FieldGoalReturnTouchdowns',
        'punt_net_yards' => 'PuntNetYards',
        'opponent_solo_tackles' => 'OpponentSoloTackles',
        'opponent_assisted_tackles' => 'OpponentAssistedTackles',
        'opponent_sacks' => 'OpponentSacks',
        'opponent_sack_yards' => 'OpponentSackYards',
        'opponent_passes_defended' => 'OpponentPassesDefended',
        'opponent_fumbles_forced' => 'OpponentFumblesForced',
        'opponent_fumbles_recovered' => 'OpponentFumblesRecovered',
        'opponent_fumble_return_yards' => 'OpponentFumbleReturnYards',
        'opponent_fumble_return_touchdowns' => 'OpponentFumbleReturnTouchdowns',
        'opponent_interception_return_touchdowns' => 'OpponentInterceptionReturnTouchdowns',
        'opponent_blocked_kicks' => 'OpponentBlockedKicks',
        'opponent_punt_return_touchdowns' => 'OpponentPuntReturnTouchdowns',
        'opponent_punt_return_long' => 'OpponentPuntReturnLong',
        'opponent_kick_return_touchdowns' => 'OpponentKickReturnTouchdowns',
        'opponent_kick_return_long' => 'OpponentKickReturnLong',
        'opponent_blocked_kick_return_yards' => 'OpponentBlockedKickReturnYards',
        'opponent_blocked_kick_return_touchdowns' => 'OpponentBlockedKickReturnTouchdowns',
        'opponent_field_goal_return_yards' => 'OpponentFieldGoalReturnYards',
        'opponent_field_goal_return_touchdowns' => 'OpponentFieldGoalReturnTouchdowns',
        'opponent_punt_net_yards' => 'OpponentPuntNetYards',
        'is_game_over' => 'IsGameOver',
        'team_name' => 'TeamName',
        'day_of_week' => 'DayOfWeek',
        'passing_dropbacks' => 'PassingDropbacks',
        'opponent_passing_dropbacks' => 'OpponentPassingDropbacks',
        'team_game_id' => 'TeamGameID',
        'point_differential' => 'PointDifferential',
        'passing_interception_percentage' => 'PassingInterceptionPercentage',
        'punt_return_average' => 'PuntReturnAverage',
        'kick_return_average' => 'KickReturnAverage',
        'extra_point_percentage' => 'ExtraPointPercentage',
        'field_goal_percentage' => 'FieldGoalPercentage',
        'opponent_passing_interception_percentage' => 'OpponentPassingInterceptionPercentage',
        'opponent_punt_return_average' => 'OpponentPuntReturnAverage',
        'opponent_kick_return_average' => 'OpponentKickReturnAverage',
        'opponent_extra_point_percentage' => 'OpponentExtraPointPercentage',
        'opponent_field_goal_percentage' => 'OpponentFieldGoalPercentage',
        'penalty_yard_differential' => 'PenaltyYardDifferential',
        'punt_return_yard_differential' => 'PuntReturnYardDifferential',
        'kick_return_yard_differential' => 'KickReturnYardDifferential',
        'two_point_conversion_returns' => 'TwoPointConversionReturns',
        'opponent_two_point_conversion_returns' => 'OpponentTwoPointConversionReturns',
        'team_id' => 'TeamID',
        'opponent_id' => 'OpponentID',
        'day' => 'Day',
        'date_time' => 'DateTime',
        'global_game_id' => 'GlobalGameID',
        'global_team_id' => 'GlobalTeamID',
        'global_opponent_id' => 'GlobalOpponentID',
        'score_id' => 'ScoreID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'game_key' => 'setGameKey',
        'date' => 'setDate',
        'season_type' => 'setSeasonType',
        'season' => 'setSeason',
        'week' => 'setWeek',
        'team' => 'setTeam',
        'opponent' => 'setOpponent',
        'home_or_away' => 'setHomeOrAway',
        'score' => 'setScore',
        'opponent_score' => 'setOpponentScore',
        'total_score' => 'setTotalScore',
        'stadium' => 'setStadium',
        'playing_surface' => 'setPlayingSurface',
        'temperature' => 'setTemperature',
        'humidity' => 'setHumidity',
        'wind_speed' => 'setWindSpeed',
        'over_under' => 'setOverUnder',
        'point_spread' => 'setPointSpread',
        'score_quarter1' => 'setScoreQuarter1',
        'score_quarter2' => 'setScoreQuarter2',
        'score_quarter3' => 'setScoreQuarter3',
        'score_quarter4' => 'setScoreQuarter4',
        'score_overtime' => 'setScoreOvertime',
        'time_of_possession_minutes' => 'setTimeOfPossessionMinutes',
        'time_of_possession_seconds' => 'setTimeOfPossessionSeconds',
        'time_of_possession' => 'setTimeOfPossession',
        'first_downs' => 'setFirstDowns',
        'first_downs_by_rushing' => 'setFirstDownsByRushing',
        'first_downs_by_passing' => 'setFirstDownsByPassing',
        'first_downs_by_penalty' => 'setFirstDownsByPenalty',
        'offensive_plays' => 'setOffensivePlays',
        'offensive_yards' => 'setOffensiveYards',
        'offensive_yards_per_play' => 'setOffensiveYardsPerPlay',
        'touchdowns' => 'setTouchdowns',
        'rushing_attempts' => 'setRushingAttempts',
        'rushing_yards' => 'setRushingYards',
        'rushing_yards_per_attempt' => 'setRushingYardsPerAttempt',
        'rushing_touchdowns' => 'setRushingTouchdowns',
        'passing_attempts' => 'setPassingAttempts',
        'passing_completions' => 'setPassingCompletions',
        'passing_yards' => 'setPassingYards',
        'passing_touchdowns' => 'setPassingTouchdowns',
        'passing_interceptions' => 'setPassingInterceptions',
        'passing_yards_per_attempt' => 'setPassingYardsPerAttempt',
        'passing_yards_per_completion' => 'setPassingYardsPerCompletion',
        'completion_percentage' => 'setCompletionPercentage',
        'passer_rating' => 'setPasserRating',
        'third_down_attempts' => 'setThirdDownAttempts',
        'third_down_conversions' => 'setThirdDownConversions',
        'third_down_percentage' => 'setThirdDownPercentage',
        'fourth_down_attempts' => 'setFourthDownAttempts',
        'fourth_down_conversions' => 'setFourthDownConversions',
        'fourth_down_percentage' => 'setFourthDownPercentage',
        'red_zone_attempts' => 'setRedZoneAttempts',
        'red_zone_conversions' => 'setRedZoneConversions',
        'goal_to_go_attempts' => 'setGoalToGoAttempts',
        'goal_to_go_conversions' => 'setGoalToGoConversions',
        'return_yards' => 'setReturnYards',
        'penalties' => 'setPenalties',
        'penalty_yards' => 'setPenaltyYards',
        'fumbles' => 'setFumbles',
        'fumbles_lost' => 'setFumblesLost',
        'times_sacked' => 'setTimesSacked',
        'times_sacked_yards' => 'setTimesSackedYards',
        'quarterback_hits' => 'setQuarterbackHits',
        'tackles_for_loss' => 'setTacklesForLoss',
        'safeties' => 'setSafeties',
        'punts' => 'setPunts',
        'punt_yards' => 'setPuntYards',
        'punt_average' => 'setPuntAverage',
        'giveaways' => 'setGiveaways',
        'takeaways' => 'setTakeaways',
        'turnover_differential' => 'setTurnoverDifferential',
        'opponent_score_quarter1' => 'setOpponentScoreQuarter1',
        'opponent_score_quarter2' => 'setOpponentScoreQuarter2',
        'opponent_score_quarter3' => 'setOpponentScoreQuarter3',
        'opponent_score_quarter4' => 'setOpponentScoreQuarter4',
        'opponent_score_overtime' => 'setOpponentScoreOvertime',
        'opponent_time_of_possession_minutes' => 'setOpponentTimeOfPossessionMinutes',
        'opponent_time_of_possession_seconds' => 'setOpponentTimeOfPossessionSeconds',
        'opponent_time_of_possession' => 'setOpponentTimeOfPossession',
        'opponent_first_downs' => 'setOpponentFirstDowns',
        'opponent_first_downs_by_rushing' => 'setOpponentFirstDownsByRushing',
        'opponent_first_downs_by_passing' => 'setOpponentFirstDownsByPassing',
        'opponent_first_downs_by_penalty' => 'setOpponentFirstDownsByPenalty',
        'opponent_offensive_plays' => 'setOpponentOffensivePlays',
        'opponent_offensive_yards' => 'setOpponentOffensiveYards',
        'opponent_offensive_yards_per_play' => 'setOpponentOffensiveYardsPerPlay',
        'opponent_touchdowns' => 'setOpponentTouchdowns',
        'opponent_rushing_attempts' => 'setOpponentRushingAttempts',
        'opponent_rushing_yards' => 'setOpponentRushingYards',
        'opponent_rushing_yards_per_attempt' => 'setOpponentRushingYardsPerAttempt',
        'opponent_rushing_touchdowns' => 'setOpponentRushingTouchdowns',
        'opponent_passing_attempts' => 'setOpponentPassingAttempts',
        'opponent_passing_completions' => 'setOpponentPassingCompletions',
        'opponent_passing_yards' => 'setOpponentPassingYards',
        'opponent_passing_touchdowns' => 'setOpponentPassingTouchdowns',
        'opponent_passing_interceptions' => 'setOpponentPassingInterceptions',
        'opponent_passing_yards_per_attempt' => 'setOpponentPassingYardsPerAttempt',
        'opponent_passing_yards_per_completion' => 'setOpponentPassingYardsPerCompletion',
        'opponent_completion_percentage' => 'setOpponentCompletionPercentage',
        'opponent_passer_rating' => 'setOpponentPasserRating',
        'opponent_third_down_attempts' => 'setOpponentThirdDownAttempts',
        'opponent_third_down_conversions' => 'setOpponentThirdDownConversions',
        'opponent_third_down_percentage' => 'setOpponentThirdDownPercentage',
        'opponent_fourth_down_attempts' => 'setOpponentFourthDownAttempts',
        'opponent_fourth_down_conversions' => 'setOpponentFourthDownConversions',
        'opponent_fourth_down_percentage' => 'setOpponentFourthDownPercentage',
        'opponent_red_zone_attempts' => 'setOpponentRedZoneAttempts',
        'opponent_red_zone_conversions' => 'setOpponentRedZoneConversions',
        'opponent_goal_to_go_attempts' => 'setOpponentGoalToGoAttempts',
        'opponent_goal_to_go_conversions' => 'setOpponentGoalToGoConversions',
        'opponent_return_yards' => 'setOpponentReturnYards',
        'opponent_penalties' => 'setOpponentPenalties',
        'opponent_penalty_yards' => 'setOpponentPenaltyYards',
        'opponent_fumbles' => 'setOpponentFumbles',
        'opponent_fumbles_lost' => 'setOpponentFumblesLost',
        'opponent_times_sacked' => 'setOpponentTimesSacked',
        'opponent_times_sacked_yards' => 'setOpponentTimesSackedYards',
        'opponent_quarterback_hits' => 'setOpponentQuarterbackHits',
        'opponent_tackles_for_loss' => 'setOpponentTacklesForLoss',
        'opponent_safeties' => 'setOpponentSafeties',
        'opponent_punts' => 'setOpponentPunts',
        'opponent_punt_yards' => 'setOpponentPuntYards',
        'opponent_punt_average' => 'setOpponentPuntAverage',
        'opponent_giveaways' => 'setOpponentGiveaways',
        'opponent_takeaways' => 'setOpponentTakeaways',
        'opponent_turnover_differential' => 'setOpponentTurnoverDifferential',
        'red_zone_percentage' => 'setRedZonePercentage',
        'goal_to_go_percentage' => 'setGoalToGoPercentage',
        'quarterback_hits_differential' => 'setQuarterbackHitsDifferential',
        'tackles_for_loss_differential' => 'setTacklesForLossDifferential',
        'quarterback_sacks_differential' => 'setQuarterbackSacksDifferential',
        'tackles_for_loss_percentage' => 'setTacklesForLossPercentage',
        'quarterback_hits_percentage' => 'setQuarterbackHitsPercentage',
        'times_sacked_percentage' => 'setTimesSackedPercentage',
        'opponent_red_zone_percentage' => 'setOpponentRedZonePercentage',
        'opponent_goal_to_go_percentage' => 'setOpponentGoalToGoPercentage',
        'opponent_quarterback_hits_differential' => 'setOpponentQuarterbackHitsDifferential',
        'opponent_tackles_for_loss_differential' => 'setOpponentTacklesForLossDifferential',
        'opponent_quarterback_sacks_differential' => 'setOpponentQuarterbackSacksDifferential',
        'opponent_tackles_for_loss_percentage' => 'setOpponentTacklesForLossPercentage',
        'opponent_quarterback_hits_percentage' => 'setOpponentQuarterbackHitsPercentage',
        'opponent_times_sacked_percentage' => 'setOpponentTimesSackedPercentage',
        'kickoffs' => 'setKickoffs',
        'kickoffs_in_end_zone' => 'setKickoffsInEndZone',
        'kickoff_touchbacks' => 'setKickoffTouchbacks',
        'punts_had_blocked' => 'setPuntsHadBlocked',
        'punt_net_average' => 'setPuntNetAverage',
        'extra_point_kicking_attempts' => 'setExtraPointKickingAttempts',
        'extra_point_kicking_conversions' => 'setExtraPointKickingConversions',
        'extra_points_had_blocked' => 'setExtraPointsHadBlocked',
        'extra_point_passing_attempts' => 'setExtraPointPassingAttempts',
        'extra_point_passing_conversions' => 'setExtraPointPassingConversions',
        'extra_point_rushing_attempts' => 'setExtraPointRushingAttempts',
        'extra_point_rushing_conversions' => 'setExtraPointRushingConversions',
        'field_goal_attempts' => 'setFieldGoalAttempts',
        'field_goals_made' => 'setFieldGoalsMade',
        'field_goals_had_blocked' => 'setFieldGoalsHadBlocked',
        'punt_returns' => 'setPuntReturns',
        'punt_return_yards' => 'setPuntReturnYards',
        'kick_returns' => 'setKickReturns',
        'kick_return_yards' => 'setKickReturnYards',
        'interception_returns' => 'setInterceptionReturns',
        'interception_return_yards' => 'setInterceptionReturnYards',
        'opponent_kickoffs' => 'setOpponentKickoffs',
        'opponent_kickoffs_in_end_zone' => 'setOpponentKickoffsInEndZone',
        'opponent_kickoff_touchbacks' => 'setOpponentKickoffTouchbacks',
        'opponent_punts_had_blocked' => 'setOpponentPuntsHadBlocked',
        'opponent_punt_net_average' => 'setOpponentPuntNetAverage',
        'opponent_extra_point_kicking_attempts' => 'setOpponentExtraPointKickingAttempts',
        'opponent_extra_point_kicking_conversions' => 'setOpponentExtraPointKickingConversions',
        'opponent_extra_points_had_blocked' => 'setOpponentExtraPointsHadBlocked',
        'opponent_extra_point_passing_attempts' => 'setOpponentExtraPointPassingAttempts',
        'opponent_extra_point_passing_conversions' => 'setOpponentExtraPointPassingConversions',
        'opponent_extra_point_rushing_attempts' => 'setOpponentExtraPointRushingAttempts',
        'opponent_extra_point_rushing_conversions' => 'setOpponentExtraPointRushingConversions',
        'opponent_field_goal_attempts' => 'setOpponentFieldGoalAttempts',
        'opponent_field_goals_made' => 'setOpponentFieldGoalsMade',
        'opponent_field_goals_had_blocked' => 'setOpponentFieldGoalsHadBlocked',
        'opponent_punt_returns' => 'setOpponentPuntReturns',
        'opponent_punt_return_yards' => 'setOpponentPuntReturnYards',
        'opponent_kick_returns' => 'setOpponentKickReturns',
        'opponent_kick_return_yards' => 'setOpponentKickReturnYards',
        'opponent_interception_returns' => 'setOpponentInterceptionReturns',
        'opponent_interception_return_yards' => 'setOpponentInterceptionReturnYards',
        'solo_tackles' => 'setSoloTackles',
        'assisted_tackles' => 'setAssistedTackles',
        'sacks' => 'setSacks',
        'sack_yards' => 'setSackYards',
        'passes_defended' => 'setPassesDefended',
        'fumbles_forced' => 'setFumblesForced',
        'fumbles_recovered' => 'setFumblesRecovered',
        'fumble_return_yards' => 'setFumbleReturnYards',
        'fumble_return_touchdowns' => 'setFumbleReturnTouchdowns',
        'interception_return_touchdowns' => 'setInterceptionReturnTouchdowns',
        'blocked_kicks' => 'setBlockedKicks',
        'punt_return_touchdowns' => 'setPuntReturnTouchdowns',
        'punt_return_long' => 'setPuntReturnLong',
        'kick_return_touchdowns' => 'setKickReturnTouchdowns',
        'kick_return_long' => 'setKickReturnLong',
        'blocked_kick_return_yards' => 'setBlockedKickReturnYards',
        'blocked_kick_return_touchdowns' => 'setBlockedKickReturnTouchdowns',
        'field_goal_return_yards' => 'setFieldGoalReturnYards',
        'field_goal_return_touchdowns' => 'setFieldGoalReturnTouchdowns',
        'punt_net_yards' => 'setPuntNetYards',
        'opponent_solo_tackles' => 'setOpponentSoloTackles',
        'opponent_assisted_tackles' => 'setOpponentAssistedTackles',
        'opponent_sacks' => 'setOpponentSacks',
        'opponent_sack_yards' => 'setOpponentSackYards',
        'opponent_passes_defended' => 'setOpponentPassesDefended',
        'opponent_fumbles_forced' => 'setOpponentFumblesForced',
        'opponent_fumbles_recovered' => 'setOpponentFumblesRecovered',
        'opponent_fumble_return_yards' => 'setOpponentFumbleReturnYards',
        'opponent_fumble_return_touchdowns' => 'setOpponentFumbleReturnTouchdowns',
        'opponent_interception_return_touchdowns' => 'setOpponentInterceptionReturnTouchdowns',
        'opponent_blocked_kicks' => 'setOpponentBlockedKicks',
        'opponent_punt_return_touchdowns' => 'setOpponentPuntReturnTouchdowns',
        'opponent_punt_return_long' => 'setOpponentPuntReturnLong',
        'opponent_kick_return_touchdowns' => 'setOpponentKickReturnTouchdowns',
        'opponent_kick_return_long' => 'setOpponentKickReturnLong',
        'opponent_blocked_kick_return_yards' => 'setOpponentBlockedKickReturnYards',
        'opponent_blocked_kick_return_touchdowns' => 'setOpponentBlockedKickReturnTouchdowns',
        'opponent_field_goal_return_yards' => 'setOpponentFieldGoalReturnYards',
        'opponent_field_goal_return_touchdowns' => 'setOpponentFieldGoalReturnTouchdowns',
        'opponent_punt_net_yards' => 'setOpponentPuntNetYards',
        'is_game_over' => 'setIsGameOver',
        'team_name' => 'setTeamName',
        'day_of_week' => 'setDayOfWeek',
        'passing_dropbacks' => 'setPassingDropbacks',
        'opponent_passing_dropbacks' => 'setOpponentPassingDropbacks',
        'team_game_id' => 'setTeamGameId',
        'point_differential' => 'setPointDifferential',
        'passing_interception_percentage' => 'setPassingInterceptionPercentage',
        'punt_return_average' => 'setPuntReturnAverage',
        'kick_return_average' => 'setKickReturnAverage',
        'extra_point_percentage' => 'setExtraPointPercentage',
        'field_goal_percentage' => 'setFieldGoalPercentage',
        'opponent_passing_interception_percentage' => 'setOpponentPassingInterceptionPercentage',
        'opponent_punt_return_average' => 'setOpponentPuntReturnAverage',
        'opponent_kick_return_average' => 'setOpponentKickReturnAverage',
        'opponent_extra_point_percentage' => 'setOpponentExtraPointPercentage',
        'opponent_field_goal_percentage' => 'setOpponentFieldGoalPercentage',
        'penalty_yard_differential' => 'setPenaltyYardDifferential',
        'punt_return_yard_differential' => 'setPuntReturnYardDifferential',
        'kick_return_yard_differential' => 'setKickReturnYardDifferential',
        'two_point_conversion_returns' => 'setTwoPointConversionReturns',
        'opponent_two_point_conversion_returns' => 'setOpponentTwoPointConversionReturns',
        'team_id' => 'setTeamId',
        'opponent_id' => 'setOpponentId',
        'day' => 'setDay',
        'date_time' => 'setDateTime',
        'global_game_id' => 'setGlobalGameId',
        'global_team_id' => 'setGlobalTeamId',
        'global_opponent_id' => 'setGlobalOpponentId',
        'score_id' => 'setScoreId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'game_key' => 'getGameKey',
        'date' => 'getDate',
        'season_type' => 'getSeasonType',
        'season' => 'getSeason',
        'week' => 'getWeek',
        'team' => 'getTeam',
        'opponent' => 'getOpponent',
        'home_or_away' => 'getHomeOrAway',
        'score' => 'getScore',
        'opponent_score' => 'getOpponentScore',
        'total_score' => 'getTotalScore',
        'stadium' => 'getStadium',
        'playing_surface' => 'getPlayingSurface',
        'temperature' => 'getTemperature',
        'humidity' => 'getHumidity',
        'wind_speed' => 'getWindSpeed',
        'over_under' => 'getOverUnder',
        'point_spread' => 'getPointSpread',
        'score_quarter1' => 'getScoreQuarter1',
        'score_quarter2' => 'getScoreQuarter2',
        'score_quarter3' => 'getScoreQuarter3',
        'score_quarter4' => 'getScoreQuarter4',
        'score_overtime' => 'getScoreOvertime',
        'time_of_possession_minutes' => 'getTimeOfPossessionMinutes',
        'time_of_possession_seconds' => 'getTimeOfPossessionSeconds',
        'time_of_possession' => 'getTimeOfPossession',
        'first_downs' => 'getFirstDowns',
        'first_downs_by_rushing' => 'getFirstDownsByRushing',
        'first_downs_by_passing' => 'getFirstDownsByPassing',
        'first_downs_by_penalty' => 'getFirstDownsByPenalty',
        'offensive_plays' => 'getOffensivePlays',
        'offensive_yards' => 'getOffensiveYards',
        'offensive_yards_per_play' => 'getOffensiveYardsPerPlay',
        'touchdowns' => 'getTouchdowns',
        'rushing_attempts' => 'getRushingAttempts',
        'rushing_yards' => 'getRushingYards',
        'rushing_yards_per_attempt' => 'getRushingYardsPerAttempt',
        'rushing_touchdowns' => 'getRushingTouchdowns',
        'passing_attempts' => 'getPassingAttempts',
        'passing_completions' => 'getPassingCompletions',
        'passing_yards' => 'getPassingYards',
        'passing_touchdowns' => 'getPassingTouchdowns',
        'passing_interceptions' => 'getPassingInterceptions',
        'passing_yards_per_attempt' => 'getPassingYardsPerAttempt',
        'passing_yards_per_completion' => 'getPassingYardsPerCompletion',
        'completion_percentage' => 'getCompletionPercentage',
        'passer_rating' => 'getPasserRating',
        'third_down_attempts' => 'getThirdDownAttempts',
        'third_down_conversions' => 'getThirdDownConversions',
        'third_down_percentage' => 'getThirdDownPercentage',
        'fourth_down_attempts' => 'getFourthDownAttempts',
        'fourth_down_conversions' => 'getFourthDownConversions',
        'fourth_down_percentage' => 'getFourthDownPercentage',
        'red_zone_attempts' => 'getRedZoneAttempts',
        'red_zone_conversions' => 'getRedZoneConversions',
        'goal_to_go_attempts' => 'getGoalToGoAttempts',
        'goal_to_go_conversions' => 'getGoalToGoConversions',
        'return_yards' => 'getReturnYards',
        'penalties' => 'getPenalties',
        'penalty_yards' => 'getPenaltyYards',
        'fumbles' => 'getFumbles',
        'fumbles_lost' => 'getFumblesLost',
        'times_sacked' => 'getTimesSacked',
        'times_sacked_yards' => 'getTimesSackedYards',
        'quarterback_hits' => 'getQuarterbackHits',
        'tackles_for_loss' => 'getTacklesForLoss',
        'safeties' => 'getSafeties',
        'punts' => 'getPunts',
        'punt_yards' => 'getPuntYards',
        'punt_average' => 'getPuntAverage',
        'giveaways' => 'getGiveaways',
        'takeaways' => 'getTakeaways',
        'turnover_differential' => 'getTurnoverDifferential',
        'opponent_score_quarter1' => 'getOpponentScoreQuarter1',
        'opponent_score_quarter2' => 'getOpponentScoreQuarter2',
        'opponent_score_quarter3' => 'getOpponentScoreQuarter3',
        'opponent_score_quarter4' => 'getOpponentScoreQuarter4',
        'opponent_score_overtime' => 'getOpponentScoreOvertime',
        'opponent_time_of_possession_minutes' => 'getOpponentTimeOfPossessionMinutes',
        'opponent_time_of_possession_seconds' => 'getOpponentTimeOfPossessionSeconds',
        'opponent_time_of_possession' => 'getOpponentTimeOfPossession',
        'opponent_first_downs' => 'getOpponentFirstDowns',
        'opponent_first_downs_by_rushing' => 'getOpponentFirstDownsByRushing',
        'opponent_first_downs_by_passing' => 'getOpponentFirstDownsByPassing',
        'opponent_first_downs_by_penalty' => 'getOpponentFirstDownsByPenalty',
        'opponent_offensive_plays' => 'getOpponentOffensivePlays',
        'opponent_offensive_yards' => 'getOpponentOffensiveYards',
        'opponent_offensive_yards_per_play' => 'getOpponentOffensiveYardsPerPlay',
        'opponent_touchdowns' => 'getOpponentTouchdowns',
        'opponent_rushing_attempts' => 'getOpponentRushingAttempts',
        'opponent_rushing_yards' => 'getOpponentRushingYards',
        'opponent_rushing_yards_per_attempt' => 'getOpponentRushingYardsPerAttempt',
        'opponent_rushing_touchdowns' => 'getOpponentRushingTouchdowns',
        'opponent_passing_attempts' => 'getOpponentPassingAttempts',
        'opponent_passing_completions' => 'getOpponentPassingCompletions',
        'opponent_passing_yards' => 'getOpponentPassingYards',
        'opponent_passing_touchdowns' => 'getOpponentPassingTouchdowns',
        'opponent_passing_interceptions' => 'getOpponentPassingInterceptions',
        'opponent_passing_yards_per_attempt' => 'getOpponentPassingYardsPerAttempt',
        'opponent_passing_yards_per_completion' => 'getOpponentPassingYardsPerCompletion',
        'opponent_completion_percentage' => 'getOpponentCompletionPercentage',
        'opponent_passer_rating' => 'getOpponentPasserRating',
        'opponent_third_down_attempts' => 'getOpponentThirdDownAttempts',
        'opponent_third_down_conversions' => 'getOpponentThirdDownConversions',
        'opponent_third_down_percentage' => 'getOpponentThirdDownPercentage',
        'opponent_fourth_down_attempts' => 'getOpponentFourthDownAttempts',
        'opponent_fourth_down_conversions' => 'getOpponentFourthDownConversions',
        'opponent_fourth_down_percentage' => 'getOpponentFourthDownPercentage',
        'opponent_red_zone_attempts' => 'getOpponentRedZoneAttempts',
        'opponent_red_zone_conversions' => 'getOpponentRedZoneConversions',
        'opponent_goal_to_go_attempts' => 'getOpponentGoalToGoAttempts',
        'opponent_goal_to_go_conversions' => 'getOpponentGoalToGoConversions',
        'opponent_return_yards' => 'getOpponentReturnYards',
        'opponent_penalties' => 'getOpponentPenalties',
        'opponent_penalty_yards' => 'getOpponentPenaltyYards',
        'opponent_fumbles' => 'getOpponentFumbles',
        'opponent_fumbles_lost' => 'getOpponentFumblesLost',
        'opponent_times_sacked' => 'getOpponentTimesSacked',
        'opponent_times_sacked_yards' => 'getOpponentTimesSackedYards',
        'opponent_quarterback_hits' => 'getOpponentQuarterbackHits',
        'opponent_tackles_for_loss' => 'getOpponentTacklesForLoss',
        'opponent_safeties' => 'getOpponentSafeties',
        'opponent_punts' => 'getOpponentPunts',
        'opponent_punt_yards' => 'getOpponentPuntYards',
        'opponent_punt_average' => 'getOpponentPuntAverage',
        'opponent_giveaways' => 'getOpponentGiveaways',
        'opponent_takeaways' => 'getOpponentTakeaways',
        'opponent_turnover_differential' => 'getOpponentTurnoverDifferential',
        'red_zone_percentage' => 'getRedZonePercentage',
        'goal_to_go_percentage' => 'getGoalToGoPercentage',
        'quarterback_hits_differential' => 'getQuarterbackHitsDifferential',
        'tackles_for_loss_differential' => 'getTacklesForLossDifferential',
        'quarterback_sacks_differential' => 'getQuarterbackSacksDifferential',
        'tackles_for_loss_percentage' => 'getTacklesForLossPercentage',
        'quarterback_hits_percentage' => 'getQuarterbackHitsPercentage',
        'times_sacked_percentage' => 'getTimesSackedPercentage',
        'opponent_red_zone_percentage' => 'getOpponentRedZonePercentage',
        'opponent_goal_to_go_percentage' => 'getOpponentGoalToGoPercentage',
        'opponent_quarterback_hits_differential' => 'getOpponentQuarterbackHitsDifferential',
        'opponent_tackles_for_loss_differential' => 'getOpponentTacklesForLossDifferential',
        'opponent_quarterback_sacks_differential' => 'getOpponentQuarterbackSacksDifferential',
        'opponent_tackles_for_loss_percentage' => 'getOpponentTacklesForLossPercentage',
        'opponent_quarterback_hits_percentage' => 'getOpponentQuarterbackHitsPercentage',
        'opponent_times_sacked_percentage' => 'getOpponentTimesSackedPercentage',
        'kickoffs' => 'getKickoffs',
        'kickoffs_in_end_zone' => 'getKickoffsInEndZone',
        'kickoff_touchbacks' => 'getKickoffTouchbacks',
        'punts_had_blocked' => 'getPuntsHadBlocked',
        'punt_net_average' => 'getPuntNetAverage',
        'extra_point_kicking_attempts' => 'getExtraPointKickingAttempts',
        'extra_point_kicking_conversions' => 'getExtraPointKickingConversions',
        'extra_points_had_blocked' => 'getExtraPointsHadBlocked',
        'extra_point_passing_attempts' => 'getExtraPointPassingAttempts',
        'extra_point_passing_conversions' => 'getExtraPointPassingConversions',
        'extra_point_rushing_attempts' => 'getExtraPointRushingAttempts',
        'extra_point_rushing_conversions' => 'getExtraPointRushingConversions',
        'field_goal_attempts' => 'getFieldGoalAttempts',
        'field_goals_made' => 'getFieldGoalsMade',
        'field_goals_had_blocked' => 'getFieldGoalsHadBlocked',
        'punt_returns' => 'getPuntReturns',
        'punt_return_yards' => 'getPuntReturnYards',
        'kick_returns' => 'getKickReturns',
        'kick_return_yards' => 'getKickReturnYards',
        'interception_returns' => 'getInterceptionReturns',
        'interception_return_yards' => 'getInterceptionReturnYards',
        'opponent_kickoffs' => 'getOpponentKickoffs',
        'opponent_kickoffs_in_end_zone' => 'getOpponentKickoffsInEndZone',
        'opponent_kickoff_touchbacks' => 'getOpponentKickoffTouchbacks',
        'opponent_punts_had_blocked' => 'getOpponentPuntsHadBlocked',
        'opponent_punt_net_average' => 'getOpponentPuntNetAverage',
        'opponent_extra_point_kicking_attempts' => 'getOpponentExtraPointKickingAttempts',
        'opponent_extra_point_kicking_conversions' => 'getOpponentExtraPointKickingConversions',
        'opponent_extra_points_had_blocked' => 'getOpponentExtraPointsHadBlocked',
        'opponent_extra_point_passing_attempts' => 'getOpponentExtraPointPassingAttempts',
        'opponent_extra_point_passing_conversions' => 'getOpponentExtraPointPassingConversions',
        'opponent_extra_point_rushing_attempts' => 'getOpponentExtraPointRushingAttempts',
        'opponent_extra_point_rushing_conversions' => 'getOpponentExtraPointRushingConversions',
        'opponent_field_goal_attempts' => 'getOpponentFieldGoalAttempts',
        'opponent_field_goals_made' => 'getOpponentFieldGoalsMade',
        'opponent_field_goals_had_blocked' => 'getOpponentFieldGoalsHadBlocked',
        'opponent_punt_returns' => 'getOpponentPuntReturns',
        'opponent_punt_return_yards' => 'getOpponentPuntReturnYards',
        'opponent_kick_returns' => 'getOpponentKickReturns',
        'opponent_kick_return_yards' => 'getOpponentKickReturnYards',
        'opponent_interception_returns' => 'getOpponentInterceptionReturns',
        'opponent_interception_return_yards' => 'getOpponentInterceptionReturnYards',
        'solo_tackles' => 'getSoloTackles',
        'assisted_tackles' => 'getAssistedTackles',
        'sacks' => 'getSacks',
        'sack_yards' => 'getSackYards',
        'passes_defended' => 'getPassesDefended',
        'fumbles_forced' => 'getFumblesForced',
        'fumbles_recovered' => 'getFumblesRecovered',
        'fumble_return_yards' => 'getFumbleReturnYards',
        'fumble_return_touchdowns' => 'getFumbleReturnTouchdowns',
        'interception_return_touchdowns' => 'getInterceptionReturnTouchdowns',
        'blocked_kicks' => 'getBlockedKicks',
        'punt_return_touchdowns' => 'getPuntReturnTouchdowns',
        'punt_return_long' => 'getPuntReturnLong',
        'kick_return_touchdowns' => 'getKickReturnTouchdowns',
        'kick_return_long' => 'getKickReturnLong',
        'blocked_kick_return_yards' => 'getBlockedKickReturnYards',
        'blocked_kick_return_touchdowns' => 'getBlockedKickReturnTouchdowns',
        'field_goal_return_yards' => 'getFieldGoalReturnYards',
        'field_goal_return_touchdowns' => 'getFieldGoalReturnTouchdowns',
        'punt_net_yards' => 'getPuntNetYards',
        'opponent_solo_tackles' => 'getOpponentSoloTackles',
        'opponent_assisted_tackles' => 'getOpponentAssistedTackles',
        'opponent_sacks' => 'getOpponentSacks',
        'opponent_sack_yards' => 'getOpponentSackYards',
        'opponent_passes_defended' => 'getOpponentPassesDefended',
        'opponent_fumbles_forced' => 'getOpponentFumblesForced',
        'opponent_fumbles_recovered' => 'getOpponentFumblesRecovered',
        'opponent_fumble_return_yards' => 'getOpponentFumbleReturnYards',
        'opponent_fumble_return_touchdowns' => 'getOpponentFumbleReturnTouchdowns',
        'opponent_interception_return_touchdowns' => 'getOpponentInterceptionReturnTouchdowns',
        'opponent_blocked_kicks' => 'getOpponentBlockedKicks',
        'opponent_punt_return_touchdowns' => 'getOpponentPuntReturnTouchdowns',
        'opponent_punt_return_long' => 'getOpponentPuntReturnLong',
        'opponent_kick_return_touchdowns' => 'getOpponentKickReturnTouchdowns',
        'opponent_kick_return_long' => 'getOpponentKickReturnLong',
        'opponent_blocked_kick_return_yards' => 'getOpponentBlockedKickReturnYards',
        'opponent_blocked_kick_return_touchdowns' => 'getOpponentBlockedKickReturnTouchdowns',
        'opponent_field_goal_return_yards' => 'getOpponentFieldGoalReturnYards',
        'opponent_field_goal_return_touchdowns' => 'getOpponentFieldGoalReturnTouchdowns',
        'opponent_punt_net_yards' => 'getOpponentPuntNetYards',
        'is_game_over' => 'getIsGameOver',
        'team_name' => 'getTeamName',
        'day_of_week' => 'getDayOfWeek',
        'passing_dropbacks' => 'getPassingDropbacks',
        'opponent_passing_dropbacks' => 'getOpponentPassingDropbacks',
        'team_game_id' => 'getTeamGameId',
        'point_differential' => 'getPointDifferential',
        'passing_interception_percentage' => 'getPassingInterceptionPercentage',
        'punt_return_average' => 'getPuntReturnAverage',
        'kick_return_average' => 'getKickReturnAverage',
        'extra_point_percentage' => 'getExtraPointPercentage',
        'field_goal_percentage' => 'getFieldGoalPercentage',
        'opponent_passing_interception_percentage' => 'getOpponentPassingInterceptionPercentage',
        'opponent_punt_return_average' => 'getOpponentPuntReturnAverage',
        'opponent_kick_return_average' => 'getOpponentKickReturnAverage',
        'opponent_extra_point_percentage' => 'getOpponentExtraPointPercentage',
        'opponent_field_goal_percentage' => 'getOpponentFieldGoalPercentage',
        'penalty_yard_differential' => 'getPenaltyYardDifferential',
        'punt_return_yard_differential' => 'getPuntReturnYardDifferential',
        'kick_return_yard_differential' => 'getKickReturnYardDifferential',
        'two_point_conversion_returns' => 'getTwoPointConversionReturns',
        'opponent_two_point_conversion_returns' => 'getOpponentTwoPointConversionReturns',
        'team_id' => 'getTeamId',
        'opponent_id' => 'getOpponentId',
        'day' => 'getDay',
        'date_time' => 'getDateTime',
        'global_game_id' => 'getGlobalGameId',
        'global_team_id' => 'getGlobalTeamId',
        'global_opponent_id' => 'getGlobalOpponentId',
        'score_id' => 'getScoreId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['game_key'] = isset($data['game_key']) ? $data['game_key'] : null;
        $this->container['date'] = isset($data['date']) ? $data['date'] : null;
        $this->container['season_type'] = isset($data['season_type']) ? $data['season_type'] : null;
        $this->container['season'] = isset($data['season']) ? $data['season'] : null;
        $this->container['week'] = isset($data['week']) ? $data['week'] : null;
        $this->container['team'] = isset($data['team']) ? $data['team'] : null;
        $this->container['opponent'] = isset($data['opponent']) ? $data['opponent'] : null;
        $this->container['home_or_away'] = isset($data['home_or_away']) ? $data['home_or_away'] : null;
        $this->container['score'] = isset($data['score']) ? $data['score'] : null;
        $this->container['opponent_score'] = isset($data['opponent_score']) ? $data['opponent_score'] : null;
        $this->container['total_score'] = isset($data['total_score']) ? $data['total_score'] : null;
        $this->container['stadium'] = isset($data['stadium']) ? $data['stadium'] : null;
        $this->container['playing_surface'] = isset($data['playing_surface']) ? $data['playing_surface'] : null;
        $this->container['temperature'] = isset($data['temperature']) ? $data['temperature'] : null;
        $this->container['humidity'] = isset($data['humidity']) ? $data['humidity'] : null;
        $this->container['wind_speed'] = isset($data['wind_speed']) ? $data['wind_speed'] : null;
        $this->container['over_under'] = isset($data['over_under']) ? $data['over_under'] : null;
        $this->container['point_spread'] = isset($data['point_spread']) ? $data['point_spread'] : null;
        $this->container['score_quarter1'] = isset($data['score_quarter1']) ? $data['score_quarter1'] : null;
        $this->container['score_quarter2'] = isset($data['score_quarter2']) ? $data['score_quarter2'] : null;
        $this->container['score_quarter3'] = isset($data['score_quarter3']) ? $data['score_quarter3'] : null;
        $this->container['score_quarter4'] = isset($data['score_quarter4']) ? $data['score_quarter4'] : null;
        $this->container['score_overtime'] = isset($data['score_overtime']) ? $data['score_overtime'] : null;
        $this->container['time_of_possession_minutes'] = isset($data['time_of_possession_minutes']) ? $data['time_of_possession_minutes'] : null;
        $this->container['time_of_possession_seconds'] = isset($data['time_of_possession_seconds']) ? $data['time_of_possession_seconds'] : null;
        $this->container['time_of_possession'] = isset($data['time_of_possession']) ? $data['time_of_possession'] : null;
        $this->container['first_downs'] = isset($data['first_downs']) ? $data['first_downs'] : null;
        $this->container['first_downs_by_rushing'] = isset($data['first_downs_by_rushing']) ? $data['first_downs_by_rushing'] : null;
        $this->container['first_downs_by_passing'] = isset($data['first_downs_by_passing']) ? $data['first_downs_by_passing'] : null;
        $this->container['first_downs_by_penalty'] = isset($data['first_downs_by_penalty']) ? $data['first_downs_by_penalty'] : null;
        $this->container['offensive_plays'] = isset($data['offensive_plays']) ? $data['offensive_plays'] : null;
        $this->container['offensive_yards'] = isset($data['offensive_yards']) ? $data['offensive_yards'] : null;
        $this->container['offensive_yards_per_play'] = isset($data['offensive_yards_per_play']) ? $data['offensive_yards_per_play'] : null;
        $this->container['touchdowns'] = isset($data['touchdowns']) ? $data['touchdowns'] : null;
        $this->container['rushing_attempts'] = isset($data['rushing_attempts']) ? $data['rushing_attempts'] : null;
        $this->container['rushing_yards'] = isset($data['rushing_yards']) ? $data['rushing_yards'] : null;
        $this->container['rushing_yards_per_attempt'] = isset($data['rushing_yards_per_attempt']) ? $data['rushing_yards_per_attempt'] : null;
        $this->container['rushing_touchdowns'] = isset($data['rushing_touchdowns']) ? $data['rushing_touchdowns'] : null;
        $this->container['passing_attempts'] = isset($data['passing_attempts']) ? $data['passing_attempts'] : null;
        $this->container['passing_completions'] = isset($data['passing_completions']) ? $data['passing_completions'] : null;
        $this->container['passing_yards'] = isset($data['passing_yards']) ? $data['passing_yards'] : null;
        $this->container['passing_touchdowns'] = isset($data['passing_touchdowns']) ? $data['passing_touchdowns'] : null;
        $this->container['passing_interceptions'] = isset($data['passing_interceptions']) ? $data['passing_interceptions'] : null;
        $this->container['passing_yards_per_attempt'] = isset($data['passing_yards_per_attempt']) ? $data['passing_yards_per_attempt'] : null;
        $this->container['passing_yards_per_completion'] = isset($data['passing_yards_per_completion']) ? $data['passing_yards_per_completion'] : null;
        $this->container['completion_percentage'] = isset($data['completion_percentage']) ? $data['completion_percentage'] : null;
        $this->container['passer_rating'] = isset($data['passer_rating']) ? $data['passer_rating'] : null;
        $this->container['third_down_attempts'] = isset($data['third_down_attempts']) ? $data['third_down_attempts'] : null;
        $this->container['third_down_conversions'] = isset($data['third_down_conversions']) ? $data['third_down_conversions'] : null;
        $this->container['third_down_percentage'] = isset($data['third_down_percentage']) ? $data['third_down_percentage'] : null;
        $this->container['fourth_down_attempts'] = isset($data['fourth_down_attempts']) ? $data['fourth_down_attempts'] : null;
        $this->container['fourth_down_conversions'] = isset($data['fourth_down_conversions']) ? $data['fourth_down_conversions'] : null;
        $this->container['fourth_down_percentage'] = isset($data['fourth_down_percentage']) ? $data['fourth_down_percentage'] : null;
        $this->container['red_zone_attempts'] = isset($data['red_zone_attempts']) ? $data['red_zone_attempts'] : null;
        $this->container['red_zone_conversions'] = isset($data['red_zone_conversions']) ? $data['red_zone_conversions'] : null;
        $this->container['goal_to_go_attempts'] = isset($data['goal_to_go_attempts']) ? $data['goal_to_go_attempts'] : null;
        $this->container['goal_to_go_conversions'] = isset($data['goal_to_go_conversions']) ? $data['goal_to_go_conversions'] : null;
        $this->container['return_yards'] = isset($data['return_yards']) ? $data['return_yards'] : null;
        $this->container['penalties'] = isset($data['penalties']) ? $data['penalties'] : null;
        $this->container['penalty_yards'] = isset($data['penalty_yards']) ? $data['penalty_yards'] : null;
        $this->container['fumbles'] = isset($data['fumbles']) ? $data['fumbles'] : null;
        $this->container['fumbles_lost'] = isset($data['fumbles_lost']) ? $data['fumbles_lost'] : null;
        $this->container['times_sacked'] = isset($data['times_sacked']) ? $data['times_sacked'] : null;
        $this->container['times_sacked_yards'] = isset($data['times_sacked_yards']) ? $data['times_sacked_yards'] : null;
        $this->container['quarterback_hits'] = isset($data['quarterback_hits']) ? $data['quarterback_hits'] : null;
        $this->container['tackles_for_loss'] = isset($data['tackles_for_loss']) ? $data['tackles_for_loss'] : null;
        $this->container['safeties'] = isset($data['safeties']) ? $data['safeties'] : null;
        $this->container['punts'] = isset($data['punts']) ? $data['punts'] : null;
        $this->container['punt_yards'] = isset($data['punt_yards']) ? $data['punt_yards'] : null;
        $this->container['punt_average'] = isset($data['punt_average']) ? $data['punt_average'] : null;
        $this->container['giveaways'] = isset($data['giveaways']) ? $data['giveaways'] : null;
        $this->container['takeaways'] = isset($data['takeaways']) ? $data['takeaways'] : null;
        $this->container['turnover_differential'] = isset($data['turnover_differential']) ? $data['turnover_differential'] : null;
        $this->container['opponent_score_quarter1'] = isset($data['opponent_score_quarter1']) ? $data['opponent_score_quarter1'] : null;
        $this->container['opponent_score_quarter2'] = isset($data['opponent_score_quarter2']) ? $data['opponent_score_quarter2'] : null;
        $this->container['opponent_score_quarter3'] = isset($data['opponent_score_quarter3']) ? $data['opponent_score_quarter3'] : null;
        $this->container['opponent_score_quarter4'] = isset($data['opponent_score_quarter4']) ? $data['opponent_score_quarter4'] : null;
        $this->container['opponent_score_overtime'] = isset($data['opponent_score_overtime']) ? $data['opponent_score_overtime'] : null;
        $this->container['opponent_time_of_possession_minutes'] = isset($data['opponent_time_of_possession_minutes']) ? $data['opponent_time_of_possession_minutes'] : null;
        $this->container['opponent_time_of_possession_seconds'] = isset($data['opponent_time_of_possession_seconds']) ? $data['opponent_time_of_possession_seconds'] : null;
        $this->container['opponent_time_of_possession'] = isset($data['opponent_time_of_possession']) ? $data['opponent_time_of_possession'] : null;
        $this->container['opponent_first_downs'] = isset($data['opponent_first_downs']) ? $data['opponent_first_downs'] : null;
        $this->container['opponent_first_downs_by_rushing'] = isset($data['opponent_first_downs_by_rushing']) ? $data['opponent_first_downs_by_rushing'] : null;
        $this->container['opponent_first_downs_by_passing'] = isset($data['opponent_first_downs_by_passing']) ? $data['opponent_first_downs_by_passing'] : null;
        $this->container['opponent_first_downs_by_penalty'] = isset($data['opponent_first_downs_by_penalty']) ? $data['opponent_first_downs_by_penalty'] : null;
        $this->container['opponent_offensive_plays'] = isset($data['opponent_offensive_plays']) ? $data['opponent_offensive_plays'] : null;
        $this->container['opponent_offensive_yards'] = isset($data['opponent_offensive_yards']) ? $data['opponent_offensive_yards'] : null;
        $this->container['opponent_offensive_yards_per_play'] = isset($data['opponent_offensive_yards_per_play']) ? $data['opponent_offensive_yards_per_play'] : null;
        $this->container['opponent_touchdowns'] = isset($data['opponent_touchdowns']) ? $data['opponent_touchdowns'] : null;
        $this->container['opponent_rushing_attempts'] = isset($data['opponent_rushing_attempts']) ? $data['opponent_rushing_attempts'] : null;
        $this->container['opponent_rushing_yards'] = isset($data['opponent_rushing_yards']) ? $data['opponent_rushing_yards'] : null;
        $this->container['opponent_rushing_yards_per_attempt'] = isset($data['opponent_rushing_yards_per_attempt']) ? $data['opponent_rushing_yards_per_attempt'] : null;
        $this->container['opponent_rushing_touchdowns'] = isset($data['opponent_rushing_touchdowns']) ? $data['opponent_rushing_touchdowns'] : null;
        $this->container['opponent_passing_attempts'] = isset($data['opponent_passing_attempts']) ? $data['opponent_passing_attempts'] : null;
        $this->container['opponent_passing_completions'] = isset($data['opponent_passing_completions']) ? $data['opponent_passing_completions'] : null;
        $this->container['opponent_passing_yards'] = isset($data['opponent_passing_yards']) ? $data['opponent_passing_yards'] : null;
        $this->container['opponent_passing_touchdowns'] = isset($data['opponent_passing_touchdowns']) ? $data['opponent_passing_touchdowns'] : null;
        $this->container['opponent_passing_interceptions'] = isset($data['opponent_passing_interceptions']) ? $data['opponent_passing_interceptions'] : null;
        $this->container['opponent_passing_yards_per_attempt'] = isset($data['opponent_passing_yards_per_attempt']) ? $data['opponent_passing_yards_per_attempt'] : null;
        $this->container['opponent_passing_yards_per_completion'] = isset($data['opponent_passing_yards_per_completion']) ? $data['opponent_passing_yards_per_completion'] : null;
        $this->container['opponent_completion_percentage'] = isset($data['opponent_completion_percentage']) ? $data['opponent_completion_percentage'] : null;
        $this->container['opponent_passer_rating'] = isset($data['opponent_passer_rating']) ? $data['opponent_passer_rating'] : null;
        $this->container['opponent_third_down_attempts'] = isset($data['opponent_third_down_attempts']) ? $data['opponent_third_down_attempts'] : null;
        $this->container['opponent_third_down_conversions'] = isset($data['opponent_third_down_conversions']) ? $data['opponent_third_down_conversions'] : null;
        $this->container['opponent_third_down_percentage'] = isset($data['opponent_third_down_percentage']) ? $data['opponent_third_down_percentage'] : null;
        $this->container['opponent_fourth_down_attempts'] = isset($data['opponent_fourth_down_attempts']) ? $data['opponent_fourth_down_attempts'] : null;
        $this->container['opponent_fourth_down_conversions'] = isset($data['opponent_fourth_down_conversions']) ? $data['opponent_fourth_down_conversions'] : null;
        $this->container['opponent_fourth_down_percentage'] = isset($data['opponent_fourth_down_percentage']) ? $data['opponent_fourth_down_percentage'] : null;
        $this->container['opponent_red_zone_attempts'] = isset($data['opponent_red_zone_attempts']) ? $data['opponent_red_zone_attempts'] : null;
        $this->container['opponent_red_zone_conversions'] = isset($data['opponent_red_zone_conversions']) ? $data['opponent_red_zone_conversions'] : null;
        $this->container['opponent_goal_to_go_attempts'] = isset($data['opponent_goal_to_go_attempts']) ? $data['opponent_goal_to_go_attempts'] : null;
        $this->container['opponent_goal_to_go_conversions'] = isset($data['opponent_goal_to_go_conversions']) ? $data['opponent_goal_to_go_conversions'] : null;
        $this->container['opponent_return_yards'] = isset($data['opponent_return_yards']) ? $data['opponent_return_yards'] : null;
        $this->container['opponent_penalties'] = isset($data['opponent_penalties']) ? $data['opponent_penalties'] : null;
        $this->container['opponent_penalty_yards'] = isset($data['opponent_penalty_yards']) ? $data['opponent_penalty_yards'] : null;
        $this->container['opponent_fumbles'] = isset($data['opponent_fumbles']) ? $data['opponent_fumbles'] : null;
        $this->container['opponent_fumbles_lost'] = isset($data['opponent_fumbles_lost']) ? $data['opponent_fumbles_lost'] : null;
        $this->container['opponent_times_sacked'] = isset($data['opponent_times_sacked']) ? $data['opponent_times_sacked'] : null;
        $this->container['opponent_times_sacked_yards'] = isset($data['opponent_times_sacked_yards']) ? $data['opponent_times_sacked_yards'] : null;
        $this->container['opponent_quarterback_hits'] = isset($data['opponent_quarterback_hits']) ? $data['opponent_quarterback_hits'] : null;
        $this->container['opponent_tackles_for_loss'] = isset($data['opponent_tackles_for_loss']) ? $data['opponent_tackles_for_loss'] : null;
        $this->container['opponent_safeties'] = isset($data['opponent_safeties']) ? $data['opponent_safeties'] : null;
        $this->container['opponent_punts'] = isset($data['opponent_punts']) ? $data['opponent_punts'] : null;
        $this->container['opponent_punt_yards'] = isset($data['opponent_punt_yards']) ? $data['opponent_punt_yards'] : null;
        $this->container['opponent_punt_average'] = isset($data['opponent_punt_average']) ? $data['opponent_punt_average'] : null;
        $this->container['opponent_giveaways'] = isset($data['opponent_giveaways']) ? $data['opponent_giveaways'] : null;
        $this->container['opponent_takeaways'] = isset($data['opponent_takeaways']) ? $data['opponent_takeaways'] : null;
        $this->container['opponent_turnover_differential'] = isset($data['opponent_turnover_differential']) ? $data['opponent_turnover_differential'] : null;
        $this->container['red_zone_percentage'] = isset($data['red_zone_percentage']) ? $data['red_zone_percentage'] : null;
        $this->container['goal_to_go_percentage'] = isset($data['goal_to_go_percentage']) ? $data['goal_to_go_percentage'] : null;
        $this->container['quarterback_hits_differential'] = isset($data['quarterback_hits_differential']) ? $data['quarterback_hits_differential'] : null;
        $this->container['tackles_for_loss_differential'] = isset($data['tackles_for_loss_differential']) ? $data['tackles_for_loss_differential'] : null;
        $this->container['quarterback_sacks_differential'] = isset($data['quarterback_sacks_differential']) ? $data['quarterback_sacks_differential'] : null;
        $this->container['tackles_for_loss_percentage'] = isset($data['tackles_for_loss_percentage']) ? $data['tackles_for_loss_percentage'] : null;
        $this->container['quarterback_hits_percentage'] = isset($data['quarterback_hits_percentage']) ? $data['quarterback_hits_percentage'] : null;
        $this->container['times_sacked_percentage'] = isset($data['times_sacked_percentage']) ? $data['times_sacked_percentage'] : null;
        $this->container['opponent_red_zone_percentage'] = isset($data['opponent_red_zone_percentage']) ? $data['opponent_red_zone_percentage'] : null;
        $this->container['opponent_goal_to_go_percentage'] = isset($data['opponent_goal_to_go_percentage']) ? $data['opponent_goal_to_go_percentage'] : null;
        $this->container['opponent_quarterback_hits_differential'] = isset($data['opponent_quarterback_hits_differential']) ? $data['opponent_quarterback_hits_differential'] : null;
        $this->container['opponent_tackles_for_loss_differential'] = isset($data['opponent_tackles_for_loss_differential']) ? $data['opponent_tackles_for_loss_differential'] : null;
        $this->container['opponent_quarterback_sacks_differential'] = isset($data['opponent_quarterback_sacks_differential']) ? $data['opponent_quarterback_sacks_differential'] : null;
        $this->container['opponent_tackles_for_loss_percentage'] = isset($data['opponent_tackles_for_loss_percentage']) ? $data['opponent_tackles_for_loss_percentage'] : null;
        $this->container['opponent_quarterback_hits_percentage'] = isset($data['opponent_quarterback_hits_percentage']) ? $data['opponent_quarterback_hits_percentage'] : null;
        $this->container['opponent_times_sacked_percentage'] = isset($data['opponent_times_sacked_percentage']) ? $data['opponent_times_sacked_percentage'] : null;
        $this->container['kickoffs'] = isset($data['kickoffs']) ? $data['kickoffs'] : null;
        $this->container['kickoffs_in_end_zone'] = isset($data['kickoffs_in_end_zone']) ? $data['kickoffs_in_end_zone'] : null;
        $this->container['kickoff_touchbacks'] = isset($data['kickoff_touchbacks']) ? $data['kickoff_touchbacks'] : null;
        $this->container['punts_had_blocked'] = isset($data['punts_had_blocked']) ? $data['punts_had_blocked'] : null;
        $this->container['punt_net_average'] = isset($data['punt_net_average']) ? $data['punt_net_average'] : null;
        $this->container['extra_point_kicking_attempts'] = isset($data['extra_point_kicking_attempts']) ? $data['extra_point_kicking_attempts'] : null;
        $this->container['extra_point_kicking_conversions'] = isset($data['extra_point_kicking_conversions']) ? $data['extra_point_kicking_conversions'] : null;
        $this->container['extra_points_had_blocked'] = isset($data['extra_points_had_blocked']) ? $data['extra_points_had_blocked'] : null;
        $this->container['extra_point_passing_attempts'] = isset($data['extra_point_passing_attempts']) ? $data['extra_point_passing_attempts'] : null;
        $this->container['extra_point_passing_conversions'] = isset($data['extra_point_passing_conversions']) ? $data['extra_point_passing_conversions'] : null;
        $this->container['extra_point_rushing_attempts'] = isset($data['extra_point_rushing_attempts']) ? $data['extra_point_rushing_attempts'] : null;
        $this->container['extra_point_rushing_conversions'] = isset($data['extra_point_rushing_conversions']) ? $data['extra_point_rushing_conversions'] : null;
        $this->container['field_goal_attempts'] = isset($data['field_goal_attempts']) ? $data['field_goal_attempts'] : null;
        $this->container['field_goals_made'] = isset($data['field_goals_made']) ? $data['field_goals_made'] : null;
        $this->container['field_goals_had_blocked'] = isset($data['field_goals_had_blocked']) ? $data['field_goals_had_blocked'] : null;
        $this->container['punt_returns'] = isset($data['punt_returns']) ? $data['punt_returns'] : null;
        $this->container['punt_return_yards'] = isset($data['punt_return_yards']) ? $data['punt_return_yards'] : null;
        $this->container['kick_returns'] = isset($data['kick_returns']) ? $data['kick_returns'] : null;
        $this->container['kick_return_yards'] = isset($data['kick_return_yards']) ? $data['kick_return_yards'] : null;
        $this->container['interception_returns'] = isset($data['interception_returns']) ? $data['interception_returns'] : null;
        $this->container['interception_return_yards'] = isset($data['interception_return_yards']) ? $data['interception_return_yards'] : null;
        $this->container['opponent_kickoffs'] = isset($data['opponent_kickoffs']) ? $data['opponent_kickoffs'] : null;
        $this->container['opponent_kickoffs_in_end_zone'] = isset($data['opponent_kickoffs_in_end_zone']) ? $data['opponent_kickoffs_in_end_zone'] : null;
        $this->container['opponent_kickoff_touchbacks'] = isset($data['opponent_kickoff_touchbacks']) ? $data['opponent_kickoff_touchbacks'] : null;
        $this->container['opponent_punts_had_blocked'] = isset($data['opponent_punts_had_blocked']) ? $data['opponent_punts_had_blocked'] : null;
        $this->container['opponent_punt_net_average'] = isset($data['opponent_punt_net_average']) ? $data['opponent_punt_net_average'] : null;
        $this->container['opponent_extra_point_kicking_attempts'] = isset($data['opponent_extra_point_kicking_attempts']) ? $data['opponent_extra_point_kicking_attempts'] : null;
        $this->container['opponent_extra_point_kicking_conversions'] = isset($data['opponent_extra_point_kicking_conversions']) ? $data['opponent_extra_point_kicking_conversions'] : null;
        $this->container['opponent_extra_points_had_blocked'] = isset($data['opponent_extra_points_had_blocked']) ? $data['opponent_extra_points_had_blocked'] : null;
        $this->container['opponent_extra_point_passing_attempts'] = isset($data['opponent_extra_point_passing_attempts']) ? $data['opponent_extra_point_passing_attempts'] : null;
        $this->container['opponent_extra_point_passing_conversions'] = isset($data['opponent_extra_point_passing_conversions']) ? $data['opponent_extra_point_passing_conversions'] : null;
        $this->container['opponent_extra_point_rushing_attempts'] = isset($data['opponent_extra_point_rushing_attempts']) ? $data['opponent_extra_point_rushing_attempts'] : null;
        $this->container['opponent_extra_point_rushing_conversions'] = isset($data['opponent_extra_point_rushing_conversions']) ? $data['opponent_extra_point_rushing_conversions'] : null;
        $this->container['opponent_field_goal_attempts'] = isset($data['opponent_field_goal_attempts']) ? $data['opponent_field_goal_attempts'] : null;
        $this->container['opponent_field_goals_made'] = isset($data['opponent_field_goals_made']) ? $data['opponent_field_goals_made'] : null;
        $this->container['opponent_field_goals_had_blocked'] = isset($data['opponent_field_goals_had_blocked']) ? $data['opponent_field_goals_had_blocked'] : null;
        $this->container['opponent_punt_returns'] = isset($data['opponent_punt_returns']) ? $data['opponent_punt_returns'] : null;
        $this->container['opponent_punt_return_yards'] = isset($data['opponent_punt_return_yards']) ? $data['opponent_punt_return_yards'] : null;
        $this->container['opponent_kick_returns'] = isset($data['opponent_kick_returns']) ? $data['opponent_kick_returns'] : null;
        $this->container['opponent_kick_return_yards'] = isset($data['opponent_kick_return_yards']) ? $data['opponent_kick_return_yards'] : null;
        $this->container['opponent_interception_returns'] = isset($data['opponent_interception_returns']) ? $data['opponent_interception_returns'] : null;
        $this->container['opponent_interception_return_yards'] = isset($data['opponent_interception_return_yards']) ? $data['opponent_interception_return_yards'] : null;
        $this->container['solo_tackles'] = isset($data['solo_tackles']) ? $data['solo_tackles'] : null;
        $this->container['assisted_tackles'] = isset($data['assisted_tackles']) ? $data['assisted_tackles'] : null;
        $this->container['sacks'] = isset($data['sacks']) ? $data['sacks'] : null;
        $this->container['sack_yards'] = isset($data['sack_yards']) ? $data['sack_yards'] : null;
        $this->container['passes_defended'] = isset($data['passes_defended']) ? $data['passes_defended'] : null;
        $this->container['fumbles_forced'] = isset($data['fumbles_forced']) ? $data['fumbles_forced'] : null;
        $this->container['fumbles_recovered'] = isset($data['fumbles_recovered']) ? $data['fumbles_recovered'] : null;
        $this->container['fumble_return_yards'] = isset($data['fumble_return_yards']) ? $data['fumble_return_yards'] : null;
        $this->container['fumble_return_touchdowns'] = isset($data['fumble_return_touchdowns']) ? $data['fumble_return_touchdowns'] : null;
        $this->container['interception_return_touchdowns'] = isset($data['interception_return_touchdowns']) ? $data['interception_return_touchdowns'] : null;
        $this->container['blocked_kicks'] = isset($data['blocked_kicks']) ? $data['blocked_kicks'] : null;
        $this->container['punt_return_touchdowns'] = isset($data['punt_return_touchdowns']) ? $data['punt_return_touchdowns'] : null;
        $this->container['punt_return_long'] = isset($data['punt_return_long']) ? $data['punt_return_long'] : null;
        $this->container['kick_return_touchdowns'] = isset($data['kick_return_touchdowns']) ? $data['kick_return_touchdowns'] : null;
        $this->container['kick_return_long'] = isset($data['kick_return_long']) ? $data['kick_return_long'] : null;
        $this->container['blocked_kick_return_yards'] = isset($data['blocked_kick_return_yards']) ? $data['blocked_kick_return_yards'] : null;
        $this->container['blocked_kick_return_touchdowns'] = isset($data['blocked_kick_return_touchdowns']) ? $data['blocked_kick_return_touchdowns'] : null;
        $this->container['field_goal_return_yards'] = isset($data['field_goal_return_yards']) ? $data['field_goal_return_yards'] : null;
        $this->container['field_goal_return_touchdowns'] = isset($data['field_goal_return_touchdowns']) ? $data['field_goal_return_touchdowns'] : null;
        $this->container['punt_net_yards'] = isset($data['punt_net_yards']) ? $data['punt_net_yards'] : null;
        $this->container['opponent_solo_tackles'] = isset($data['opponent_solo_tackles']) ? $data['opponent_solo_tackles'] : null;
        $this->container['opponent_assisted_tackles'] = isset($data['opponent_assisted_tackles']) ? $data['opponent_assisted_tackles'] : null;
        $this->container['opponent_sacks'] = isset($data['opponent_sacks']) ? $data['opponent_sacks'] : null;
        $this->container['opponent_sack_yards'] = isset($data['opponent_sack_yards']) ? $data['opponent_sack_yards'] : null;
        $this->container['opponent_passes_defended'] = isset($data['opponent_passes_defended']) ? $data['opponent_passes_defended'] : null;
        $this->container['opponent_fumbles_forced'] = isset($data['opponent_fumbles_forced']) ? $data['opponent_fumbles_forced'] : null;
        $this->container['opponent_fumbles_recovered'] = isset($data['opponent_fumbles_recovered']) ? $data['opponent_fumbles_recovered'] : null;
        $this->container['opponent_fumble_return_yards'] = isset($data['opponent_fumble_return_yards']) ? $data['opponent_fumble_return_yards'] : null;
        $this->container['opponent_fumble_return_touchdowns'] = isset($data['opponent_fumble_return_touchdowns']) ? $data['opponent_fumble_return_touchdowns'] : null;
        $this->container['opponent_interception_return_touchdowns'] = isset($data['opponent_interception_return_touchdowns']) ? $data['opponent_interception_return_touchdowns'] : null;
        $this->container['opponent_blocked_kicks'] = isset($data['opponent_blocked_kicks']) ? $data['opponent_blocked_kicks'] : null;
        $this->container['opponent_punt_return_touchdowns'] = isset($data['opponent_punt_return_touchdowns']) ? $data['opponent_punt_return_touchdowns'] : null;
        $this->container['opponent_punt_return_long'] = isset($data['opponent_punt_return_long']) ? $data['opponent_punt_return_long'] : null;
        $this->container['opponent_kick_return_touchdowns'] = isset($data['opponent_kick_return_touchdowns']) ? $data['opponent_kick_return_touchdowns'] : null;
        $this->container['opponent_kick_return_long'] = isset($data['opponent_kick_return_long']) ? $data['opponent_kick_return_long'] : null;
        $this->container['opponent_blocked_kick_return_yards'] = isset($data['opponent_blocked_kick_return_yards']) ? $data['opponent_blocked_kick_return_yards'] : null;
        $this->container['opponent_blocked_kick_return_touchdowns'] = isset($data['opponent_blocked_kick_return_touchdowns']) ? $data['opponent_blocked_kick_return_touchdowns'] : null;
        $this->container['opponent_field_goal_return_yards'] = isset($data['opponent_field_goal_return_yards']) ? $data['opponent_field_goal_return_yards'] : null;
        $this->container['opponent_field_goal_return_touchdowns'] = isset($data['opponent_field_goal_return_touchdowns']) ? $data['opponent_field_goal_return_touchdowns'] : null;
        $this->container['opponent_punt_net_yards'] = isset($data['opponent_punt_net_yards']) ? $data['opponent_punt_net_yards'] : null;
        $this->container['is_game_over'] = isset($data['is_game_over']) ? $data['is_game_over'] : null;
        $this->container['team_name'] = isset($data['team_name']) ? $data['team_name'] : null;
        $this->container['day_of_week'] = isset($data['day_of_week']) ? $data['day_of_week'] : null;
        $this->container['passing_dropbacks'] = isset($data['passing_dropbacks']) ? $data['passing_dropbacks'] : null;
        $this->container['opponent_passing_dropbacks'] = isset($data['opponent_passing_dropbacks']) ? $data['opponent_passing_dropbacks'] : null;
        $this->container['team_game_id'] = isset($data['team_game_id']) ? $data['team_game_id'] : null;
        $this->container['point_differential'] = isset($data['point_differential']) ? $data['point_differential'] : null;
        $this->container['passing_interception_percentage'] = isset($data['passing_interception_percentage']) ? $data['passing_interception_percentage'] : null;
        $this->container['punt_return_average'] = isset($data['punt_return_average']) ? $data['punt_return_average'] : null;
        $this->container['kick_return_average'] = isset($data['kick_return_average']) ? $data['kick_return_average'] : null;
        $this->container['extra_point_percentage'] = isset($data['extra_point_percentage']) ? $data['extra_point_percentage'] : null;
        $this->container['field_goal_percentage'] = isset($data['field_goal_percentage']) ? $data['field_goal_percentage'] : null;
        $this->container['opponent_passing_interception_percentage'] = isset($data['opponent_passing_interception_percentage']) ? $data['opponent_passing_interception_percentage'] : null;
        $this->container['opponent_punt_return_average'] = isset($data['opponent_punt_return_average']) ? $data['opponent_punt_return_average'] : null;
        $this->container['opponent_kick_return_average'] = isset($data['opponent_kick_return_average']) ? $data['opponent_kick_return_average'] : null;
        $this->container['opponent_extra_point_percentage'] = isset($data['opponent_extra_point_percentage']) ? $data['opponent_extra_point_percentage'] : null;
        $this->container['opponent_field_goal_percentage'] = isset($data['opponent_field_goal_percentage']) ? $data['opponent_field_goal_percentage'] : null;
        $this->container['penalty_yard_differential'] = isset($data['penalty_yard_differential']) ? $data['penalty_yard_differential'] : null;
        $this->container['punt_return_yard_differential'] = isset($data['punt_return_yard_differential']) ? $data['punt_return_yard_differential'] : null;
        $this->container['kick_return_yard_differential'] = isset($data['kick_return_yard_differential']) ? $data['kick_return_yard_differential'] : null;
        $this->container['two_point_conversion_returns'] = isset($data['two_point_conversion_returns']) ? $data['two_point_conversion_returns'] : null;
        $this->container['opponent_two_point_conversion_returns'] = isset($data['opponent_two_point_conversion_returns']) ? $data['opponent_two_point_conversion_returns'] : null;
        $this->container['team_id'] = isset($data['team_id']) ? $data['team_id'] : null;
        $this->container['opponent_id'] = isset($data['opponent_id']) ? $data['opponent_id'] : null;
        $this->container['day'] = isset($data['day']) ? $data['day'] : null;
        $this->container['date_time'] = isset($data['date_time']) ? $data['date_time'] : null;
        $this->container['global_game_id'] = isset($data['global_game_id']) ? $data['global_game_id'] : null;
        $this->container['global_team_id'] = isset($data['global_team_id']) ? $data['global_team_id'] : null;
        $this->container['global_opponent_id'] = isset($data['global_opponent_id']) ? $data['global_opponent_id'] : null;
        $this->container['score_id'] = isset($data['score_id']) ? $data['score_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets game_key
     *
     * @return string
     */
    public function getGameKey()
    {
        return $this->container['game_key'];
    }

    /**
     * Sets game_key
     *
     * @param string $game_key game_key
     *
     * @return $this
     */
    public function setGameKey($game_key)
    {
        $this->container['game_key'] = $game_key;

        return $this;
    }

    /**
     * Gets date
     *
     * @return string
     */
    public function getDate()
    {
        return $this->container['date'];
    }

    /**
     * Sets date
     *
     * @param string $date date
     *
     * @return $this
     */
    public function setDate($date)
    {
        $this->container['date'] = $date;

        return $this;
    }

    /**
     * Gets season_type
     *
     * @return int
     */
    public function getSeasonType()
    {
        return $this->container['season_type'];
    }

    /**
     * Sets season_type
     *
     * @param int $season_type season_type
     *
     * @return $this
     */
    public function setSeasonType($season_type)
    {
        $this->container['season_type'] = $season_type;

        return $this;
    }

    /**
     * Gets season
     *
     * @return int
     */
    public function getSeason()
    {
        return $this->container['season'];
    }

    /**
     * Sets season
     *
     * @param int $season season
     *
     * @return $this
     */
    public function setSeason($season)
    {
        $this->container['season'] = $season;

        return $this;
    }

    /**
     * Gets week
     *
     * @return int
     */
    public function getWeek()
    {
        return $this->container['week'];
    }

    /**
     * Sets week
     *
     * @param int $week week
     *
     * @return $this
     */
    public function setWeek($week)
    {
        $this->container['week'] = $week;

        return $this;
    }

    /**
     * Gets team
     *
     * @return string
     */
    public function getTeam()
    {
        return $this->container['team'];
    }

    /**
     * Sets team
     *
     * @param string $team team
     *
     * @return $this
     */
    public function setTeam($team)
    {
        $this->container['team'] = $team;

        return $this;
    }

    /**
     * Gets opponent
     *
     * @return string
     */
    public function getOpponent()
    {
        return $this->container['opponent'];
    }

    /**
     * Sets opponent
     *
     * @param string $opponent opponent
     *
     * @return $this
     */
    public function setOpponent($opponent)
    {
        $this->container['opponent'] = $opponent;

        return $this;
    }

    /**
     * Gets home_or_away
     *
     * @return string
     */
    public function getHomeOrAway()
    {
        return $this->container['home_or_away'];
    }

    /**
     * Sets home_or_away
     *
     * @param string $home_or_away home_or_away
     *
     * @return $this
     */
    public function setHomeOrAway($home_or_away)
    {
        $this->container['home_or_away'] = $home_or_away;

        return $this;
    }

    /**
     * Gets score
     *
     * @return int
     */
    public function getScore()
    {
        return $this->container['score'];
    }

    /**
     * Sets score
     *
     * @param int $score score
     *
     * @return $this
     */
    public function setScore($score)
    {
        $this->container['score'] = $score;

        return $this;
    }

    /**
     * Gets opponent_score
     *
     * @return int
     */
    public function getOpponentScore()
    {
        return $this->container['opponent_score'];
    }

    /**
     * Sets opponent_score
     *
     * @param int $opponent_score opponent_score
     *
     * @return $this
     */
    public function setOpponentScore($opponent_score)
    {
        $this->container['opponent_score'] = $opponent_score;

        return $this;
    }

    /**
     * Gets total_score
     *
     * @return int
     */
    public function getTotalScore()
    {
        return $this->container['total_score'];
    }

    /**
     * Sets total_score
     *
     * @param int $total_score total_score
     *
     * @return $this
     */
    public function setTotalScore($total_score)
    {
        $this->container['total_score'] = $total_score;

        return $this;
    }

    /**
     * Gets stadium
     *
     * @return string
     */
    public function getStadium()
    {
        return $this->container['stadium'];
    }

    /**
     * Sets stadium
     *
     * @param string $stadium stadium
     *
     * @return $this
     */
    public function setStadium($stadium)
    {
        $this->container['stadium'] = $stadium;

        return $this;
    }

    /**
     * Gets playing_surface
     *
     * @return string
     */
    public function getPlayingSurface()
    {
        return $this->container['playing_surface'];
    }

    /**
     * Sets playing_surface
     *
     * @param string $playing_surface playing_surface
     *
     * @return $this
     */
    public function setPlayingSurface($playing_surface)
    {
        $this->container['playing_surface'] = $playing_surface;

        return $this;
    }

    /**
     * Gets temperature
     *
     * @return int
     */
    public function getTemperature()
    {
        return $this->container['temperature'];
    }

    /**
     * Sets temperature
     *
     * @param int $temperature temperature
     *
     * @return $this
     */
    public function setTemperature($temperature)
    {
        $this->container['temperature'] = $temperature;

        return $this;
    }

    /**
     * Gets humidity
     *
     * @return int
     */
    public function getHumidity()
    {
        return $this->container['humidity'];
    }

    /**
     * Sets humidity
     *
     * @param int $humidity humidity
     *
     * @return $this
     */
    public function setHumidity($humidity)
    {
        $this->container['humidity'] = $humidity;

        return $this;
    }

    /**
     * Gets wind_speed
     *
     * @return int
     */
    public function getWindSpeed()
    {
        return $this->container['wind_speed'];
    }

    /**
     * Sets wind_speed
     *
     * @param int $wind_speed wind_speed
     *
     * @return $this
     */
    public function setWindSpeed($wind_speed)
    {
        $this->container['wind_speed'] = $wind_speed;

        return $this;
    }

    /**
     * Gets over_under
     *
     * @return float
     */
    public function getOverUnder()
    {
        return $this->container['over_under'];
    }

    /**
     * Sets over_under
     *
     * @param float $over_under over_under
     *
     * @return $this
     */
    public function setOverUnder($over_under)
    {
        $this->container['over_under'] = $over_under;

        return $this;
    }

    /**
     * Gets point_spread
     *
     * @return float
     */
    public function getPointSpread()
    {
        return $this->container['point_spread'];
    }

    /**
     * Sets point_spread
     *
     * @param float $point_spread point_spread
     *
     * @return $this
     */
    public function setPointSpread($point_spread)
    {
        $this->container['point_spread'] = $point_spread;

        return $this;
    }

    /**
     * Gets score_quarter1
     *
     * @return int
     */
    public function getScoreQuarter1()
    {
        return $this->container['score_quarter1'];
    }

    /**
     * Sets score_quarter1
     *
     * @param int $score_quarter1 score_quarter1
     *
     * @return $this
     */
    public function setScoreQuarter1($score_quarter1)
    {
        $this->container['score_quarter1'] = $score_quarter1;

        return $this;
    }

    /**
     * Gets score_quarter2
     *
     * @return int
     */
    public function getScoreQuarter2()
    {
        return $this->container['score_quarter2'];
    }

    /**
     * Sets score_quarter2
     *
     * @param int $score_quarter2 score_quarter2
     *
     * @return $this
     */
    public function setScoreQuarter2($score_quarter2)
    {
        $this->container['score_quarter2'] = $score_quarter2;

        return $this;
    }

    /**
     * Gets score_quarter3
     *
     * @return int
     */
    public function getScoreQuarter3()
    {
        return $this->container['score_quarter3'];
    }

    /**
     * Sets score_quarter3
     *
     * @param int $score_quarter3 score_quarter3
     *
     * @return $this
     */
    public function setScoreQuarter3($score_quarter3)
    {
        $this->container['score_quarter3'] = $score_quarter3;

        return $this;
    }

    /**
     * Gets score_quarter4
     *
     * @return int
     */
    public function getScoreQuarter4()
    {
        return $this->container['score_quarter4'];
    }

    /**
     * Sets score_quarter4
     *
     * @param int $score_quarter4 score_quarter4
     *
     * @return $this
     */
    public function setScoreQuarter4($score_quarter4)
    {
        $this->container['score_quarter4'] = $score_quarter4;

        return $this;
    }

    /**
     * Gets score_overtime
     *
     * @return int
     */
    public function getScoreOvertime()
    {
        return $this->container['score_overtime'];
    }

    /**
     * Sets score_overtime
     *
     * @param int $score_overtime score_overtime
     *
     * @return $this
     */
    public function setScoreOvertime($score_overtime)
    {
        $this->container['score_overtime'] = $score_overtime;

        return $this;
    }

    /**
     * Gets time_of_possession_minutes
     *
     * @return int
     */
    public function getTimeOfPossessionMinutes()
    {
        return $this->container['time_of_possession_minutes'];
    }

    /**
     * Sets time_of_possession_minutes
     *
     * @param int $time_of_possession_minutes time_of_possession_minutes
     *
     * @return $this
     */
    public function setTimeOfPossessionMinutes($time_of_possession_minutes)
    {
        $this->container['time_of_possession_minutes'] = $time_of_possession_minutes;

        return $this;
    }

    /**
     * Gets time_of_possession_seconds
     *
     * @return int
     */
    public function getTimeOfPossessionSeconds()
    {
        return $this->container['time_of_possession_seconds'];
    }

    /**
     * Sets time_of_possession_seconds
     *
     * @param int $time_of_possession_seconds time_of_possession_seconds
     *
     * @return $this
     */
    public function setTimeOfPossessionSeconds($time_of_possession_seconds)
    {
        $this->container['time_of_possession_seconds'] = $time_of_possession_seconds;

        return $this;
    }

    /**
     * Gets time_of_possession
     *
     * @return string
     */
    public function getTimeOfPossession()
    {
        return $this->container['time_of_possession'];
    }

    /**
     * Sets time_of_possession
     *
     * @param string $time_of_possession time_of_possession
     *
     * @return $this
     */
    public function setTimeOfPossession($time_of_possession)
    {
        $this->container['time_of_possession'] = $time_of_possession;

        return $this;
    }

    /**
     * Gets first_downs
     *
     * @return int
     */
    public function getFirstDowns()
    {
        return $this->container['first_downs'];
    }

    /**
     * Sets first_downs
     *
     * @param int $first_downs first_downs
     *
     * @return $this
     */
    public function setFirstDowns($first_downs)
    {
        $this->container['first_downs'] = $first_downs;

        return $this;
    }

    /**
     * Gets first_downs_by_rushing
     *
     * @return int
     */
    public function getFirstDownsByRushing()
    {
        return $this->container['first_downs_by_rushing'];
    }

    /**
     * Sets first_downs_by_rushing
     *
     * @param int $first_downs_by_rushing first_downs_by_rushing
     *
     * @return $this
     */
    public function setFirstDownsByRushing($first_downs_by_rushing)
    {
        $this->container['first_downs_by_rushing'] = $first_downs_by_rushing;

        return $this;
    }

    /**
     * Gets first_downs_by_passing
     *
     * @return int
     */
    public function getFirstDownsByPassing()
    {
        return $this->container['first_downs_by_passing'];
    }

    /**
     * Sets first_downs_by_passing
     *
     * @param int $first_downs_by_passing first_downs_by_passing
     *
     * @return $this
     */
    public function setFirstDownsByPassing($first_downs_by_passing)
    {
        $this->container['first_downs_by_passing'] = $first_downs_by_passing;

        return $this;
    }

    /**
     * Gets first_downs_by_penalty
     *
     * @return int
     */
    public function getFirstDownsByPenalty()
    {
        return $this->container['first_downs_by_penalty'];
    }

    /**
     * Sets first_downs_by_penalty
     *
     * @param int $first_downs_by_penalty first_downs_by_penalty
     *
     * @return $this
     */
    public function setFirstDownsByPenalty($first_downs_by_penalty)
    {
        $this->container['first_downs_by_penalty'] = $first_downs_by_penalty;

        return $this;
    }

    /**
     * Gets offensive_plays
     *
     * @return int
     */
    public function getOffensivePlays()
    {
        return $this->container['offensive_plays'];
    }

    /**
     * Sets offensive_plays
     *
     * @param int $offensive_plays offensive_plays
     *
     * @return $this
     */
    public function setOffensivePlays($offensive_plays)
    {
        $this->container['offensive_plays'] = $offensive_plays;

        return $this;
    }

    /**
     * Gets offensive_yards
     *
     * @return int
     */
    public function getOffensiveYards()
    {
        return $this->container['offensive_yards'];
    }

    /**
     * Sets offensive_yards
     *
     * @param int $offensive_yards offensive_yards
     *
     * @return $this
     */
    public function setOffensiveYards($offensive_yards)
    {
        $this->container['offensive_yards'] = $offensive_yards;

        return $this;
    }

    /**
     * Gets offensive_yards_per_play
     *
     * @return float
     */
    public function getOffensiveYardsPerPlay()
    {
        return $this->container['offensive_yards_per_play'];
    }

    /**
     * Sets offensive_yards_per_play
     *
     * @param float $offensive_yards_per_play offensive_yards_per_play
     *
     * @return $this
     */
    public function setOffensiveYardsPerPlay($offensive_yards_per_play)
    {
        $this->container['offensive_yards_per_play'] = $offensive_yards_per_play;

        return $this;
    }

    /**
     * Gets touchdowns
     *
     * @return int
     */
    public function getTouchdowns()
    {
        return $this->container['touchdowns'];
    }

    /**
     * Sets touchdowns
     *
     * @param int $touchdowns touchdowns
     *
     * @return $this
     */
    public function setTouchdowns($touchdowns)
    {
        $this->container['touchdowns'] = $touchdowns;

        return $this;
    }

    /**
     * Gets rushing_attempts
     *
     * @return int
     */
    public function getRushingAttempts()
    {
        return $this->container['rushing_attempts'];
    }

    /**
     * Sets rushing_attempts
     *
     * @param int $rushing_attempts rushing_attempts
     *
     * @return $this
     */
    public function setRushingAttempts($rushing_attempts)
    {
        $this->container['rushing_attempts'] = $rushing_attempts;

        return $this;
    }

    /**
     * Gets rushing_yards
     *
     * @return int
     */
    public function getRushingYards()
    {
        return $this->container['rushing_yards'];
    }

    /**
     * Sets rushing_yards
     *
     * @param int $rushing_yards rushing_yards
     *
     * @return $this
     */
    public function setRushingYards($rushing_yards)
    {
        $this->container['rushing_yards'] = $rushing_yards;

        return $this;
    }

    /**
     * Gets rushing_yards_per_attempt
     *
     * @return float
     */
    public function getRushingYardsPerAttempt()
    {
        return $this->container['rushing_yards_per_attempt'];
    }

    /**
     * Sets rushing_yards_per_attempt
     *
     * @param float $rushing_yards_per_attempt rushing_yards_per_attempt
     *
     * @return $this
     */
    public function setRushingYardsPerAttempt($rushing_yards_per_attempt)
    {
        $this->container['rushing_yards_per_attempt'] = $rushing_yards_per_attempt;

        return $this;
    }

    /**
     * Gets rushing_touchdowns
     *
     * @return int
     */
    public function getRushingTouchdowns()
    {
        return $this->container['rushing_touchdowns'];
    }

    /**
     * Sets rushing_touchdowns
     *
     * @param int $rushing_touchdowns rushing_touchdowns
     *
     * @return $this
     */
    public function setRushingTouchdowns($rushing_touchdowns)
    {
        $this->container['rushing_touchdowns'] = $rushing_touchdowns;

        return $this;
    }

    /**
     * Gets passing_attempts
     *
     * @return int
     */
    public function getPassingAttempts()
    {
        return $this->container['passing_attempts'];
    }

    /**
     * Sets passing_attempts
     *
     * @param int $passing_attempts passing_attempts
     *
     * @return $this
     */
    public function setPassingAttempts($passing_attempts)
    {
        $this->container['passing_attempts'] = $passing_attempts;

        return $this;
    }

    /**
     * Gets passing_completions
     *
     * @return int
     */
    public function getPassingCompletions()
    {
        return $this->container['passing_completions'];
    }

    /**
     * Sets passing_completions
     *
     * @param int $passing_completions passing_completions
     *
     * @return $this
     */
    public function setPassingCompletions($passing_completions)
    {
        $this->container['passing_completions'] = $passing_completions;

        return $this;
    }

    /**
     * Gets passing_yards
     *
     * @return int
     */
    public function getPassingYards()
    {
        return $this->container['passing_yards'];
    }

    /**
     * Sets passing_yards
     *
     * @param int $passing_yards passing_yards
     *
     * @return $this
     */
    public function setPassingYards($passing_yards)
    {
        $this->container['passing_yards'] = $passing_yards;

        return $this;
    }

    /**
     * Gets passing_touchdowns
     *
     * @return int
     */
    public function getPassingTouchdowns()
    {
        return $this->container['passing_touchdowns'];
    }

    /**
     * Sets passing_touchdowns
     *
     * @param int $passing_touchdowns passing_touchdowns
     *
     * @return $this
     */
    public function setPassingTouchdowns($passing_touchdowns)
    {
        $this->container['passing_touchdowns'] = $passing_touchdowns;

        return $this;
    }

    /**
     * Gets passing_interceptions
     *
     * @return int
     */
    public function getPassingInterceptions()
    {
        return $this->container['passing_interceptions'];
    }

    /**
     * Sets passing_interceptions
     *
     * @param int $passing_interceptions passing_interceptions
     *
     * @return $this
     */
    public function setPassingInterceptions($passing_interceptions)
    {
        $this->container['passing_interceptions'] = $passing_interceptions;

        return $this;
    }

    /**
     * Gets passing_yards_per_attempt
     *
     * @return float
     */
    public function getPassingYardsPerAttempt()
    {
        return $this->container['passing_yards_per_attempt'];
    }

    /**
     * Sets passing_yards_per_attempt
     *
     * @param float $passing_yards_per_attempt passing_yards_per_attempt
     *
     * @return $this
     */
    public function setPassingYardsPerAttempt($passing_yards_per_attempt)
    {
        $this->container['passing_yards_per_attempt'] = $passing_yards_per_attempt;

        return $this;
    }

    /**
     * Gets passing_yards_per_completion
     *
     * @return float
     */
    public function getPassingYardsPerCompletion()
    {
        return $this->container['passing_yards_per_completion'];
    }

    /**
     * Sets passing_yards_per_completion
     *
     * @param float $passing_yards_per_completion passing_yards_per_completion
     *
     * @return $this
     */
    public function setPassingYardsPerCompletion($passing_yards_per_completion)
    {
        $this->container['passing_yards_per_completion'] = $passing_yards_per_completion;

        return $this;
    }

    /**
     * Gets completion_percentage
     *
     * @return float
     */
    public function getCompletionPercentage()
    {
        return $this->container['completion_percentage'];
    }

    /**
     * Sets completion_percentage
     *
     * @param float $completion_percentage completion_percentage
     *
     * @return $this
     */
    public function setCompletionPercentage($completion_percentage)
    {
        $this->container['completion_percentage'] = $completion_percentage;

        return $this;
    }

    /**
     * Gets passer_rating
     *
     * @return float
     */
    public function getPasserRating()
    {
        return $this->container['passer_rating'];
    }

    /**
     * Sets passer_rating
     *
     * @param float $passer_rating passer_rating
     *
     * @return $this
     */
    public function setPasserRating($passer_rating)
    {
        $this->container['passer_rating'] = $passer_rating;

        return $this;
    }

    /**
     * Gets third_down_attempts
     *
     * @return int
     */
    public function getThirdDownAttempts()
    {
        return $this->container['third_down_attempts'];
    }

    /**
     * Sets third_down_attempts
     *
     * @param int $third_down_attempts third_down_attempts
     *
     * @return $this
     */
    public function setThirdDownAttempts($third_down_attempts)
    {
        $this->container['third_down_attempts'] = $third_down_attempts;

        return $this;
    }

    /**
     * Gets third_down_conversions
     *
     * @return int
     */
    public function getThirdDownConversions()
    {
        return $this->container['third_down_conversions'];
    }

    /**
     * Sets third_down_conversions
     *
     * @param int $third_down_conversions third_down_conversions
     *
     * @return $this
     */
    public function setThirdDownConversions($third_down_conversions)
    {
        $this->container['third_down_conversions'] = $third_down_conversions;

        return $this;
    }

    /**
     * Gets third_down_percentage
     *
     * @return float
     */
    public function getThirdDownPercentage()
    {
        return $this->container['third_down_percentage'];
    }

    /**
     * Sets third_down_percentage
     *
     * @param float $third_down_percentage third_down_percentage
     *
     * @return $this
     */
    public function setThirdDownPercentage($third_down_percentage)
    {
        $this->container['third_down_percentage'] = $third_down_percentage;

        return $this;
    }

    /**
     * Gets fourth_down_attempts
     *
     * @return int
     */
    public function getFourthDownAttempts()
    {
        return $this->container['fourth_down_attempts'];
    }

    /**
     * Sets fourth_down_attempts
     *
     * @param int $fourth_down_attempts fourth_down_attempts
     *
     * @return $this
     */
    public function setFourthDownAttempts($fourth_down_attempts)
    {
        $this->container['fourth_down_attempts'] = $fourth_down_attempts;

        return $this;
    }

    /**
     * Gets fourth_down_conversions
     *
     * @return int
     */
    public function getFourthDownConversions()
    {
        return $this->container['fourth_down_conversions'];
    }

    /**
     * Sets fourth_down_conversions
     *
     * @param int $fourth_down_conversions fourth_down_conversions
     *
     * @return $this
     */
    public function setFourthDownConversions($fourth_down_conversions)
    {
        $this->container['fourth_down_conversions'] = $fourth_down_conversions;

        return $this;
    }

    /**
     * Gets fourth_down_percentage
     *
     * @return float
     */
    public function getFourthDownPercentage()
    {
        return $this->container['fourth_down_percentage'];
    }

    /**
     * Sets fourth_down_percentage
     *
     * @param float $fourth_down_percentage fourth_down_percentage
     *
     * @return $this
     */
    public function setFourthDownPercentage($fourth_down_percentage)
    {
        $this->container['fourth_down_percentage'] = $fourth_down_percentage;

        return $this;
    }

    /**
     * Gets red_zone_attempts
     *
     * @return int
     */
    public function getRedZoneAttempts()
    {
        return $this->container['red_zone_attempts'];
    }

    /**
     * Sets red_zone_attempts
     *
     * @param int $red_zone_attempts red_zone_attempts
     *
     * @return $this
     */
    public function setRedZoneAttempts($red_zone_attempts)
    {
        $this->container['red_zone_attempts'] = $red_zone_attempts;

        return $this;
    }

    /**
     * Gets red_zone_conversions
     *
     * @return int
     */
    public function getRedZoneConversions()
    {
        return $this->container['red_zone_conversions'];
    }

    /**
     * Sets red_zone_conversions
     *
     * @param int $red_zone_conversions red_zone_conversions
     *
     * @return $this
     */
    public function setRedZoneConversions($red_zone_conversions)
    {
        $this->container['red_zone_conversions'] = $red_zone_conversions;

        return $this;
    }

    /**
     * Gets goal_to_go_attempts
     *
     * @return int
     */
    public function getGoalToGoAttempts()
    {
        return $this->container['goal_to_go_attempts'];
    }

    /**
     * Sets goal_to_go_attempts
     *
     * @param int $goal_to_go_attempts goal_to_go_attempts
     *
     * @return $this
     */
    public function setGoalToGoAttempts($goal_to_go_attempts)
    {
        $this->container['goal_to_go_attempts'] = $goal_to_go_attempts;

        return $this;
    }

    /**
     * Gets goal_to_go_conversions
     *
     * @return int
     */
    public function getGoalToGoConversions()
    {
        return $this->container['goal_to_go_conversions'];
    }

    /**
     * Sets goal_to_go_conversions
     *
     * @param int $goal_to_go_conversions goal_to_go_conversions
     *
     * @return $this
     */
    public function setGoalToGoConversions($goal_to_go_conversions)
    {
        $this->container['goal_to_go_conversions'] = $goal_to_go_conversions;

        return $this;
    }

    /**
     * Gets return_yards
     *
     * @return int
     */
    public function getReturnYards()
    {
        return $this->container['return_yards'];
    }

    /**
     * Sets return_yards
     *
     * @param int $return_yards return_yards
     *
     * @return $this
     */
    public function setReturnYards($return_yards)
    {
        $this->container['return_yards'] = $return_yards;

        return $this;
    }

    /**
     * Gets penalties
     *
     * @return int
     */
    public function getPenalties()
    {
        return $this->container['penalties'];
    }

    /**
     * Sets penalties
     *
     * @param int $penalties penalties
     *
     * @return $this
     */
    public function setPenalties($penalties)
    {
        $this->container['penalties'] = $penalties;

        return $this;
    }

    /**
     * Gets penalty_yards
     *
     * @return int
     */
    public function getPenaltyYards()
    {
        return $this->container['penalty_yards'];
    }

    /**
     * Sets penalty_yards
     *
     * @param int $penalty_yards penalty_yards
     *
     * @return $this
     */
    public function setPenaltyYards($penalty_yards)
    {
        $this->container['penalty_yards'] = $penalty_yards;

        return $this;
    }

    /**
     * Gets fumbles
     *
     * @return int
     */
    public function getFumbles()
    {
        return $this->container['fumbles'];
    }

    /**
     * Sets fumbles
     *
     * @param int $fumbles fumbles
     *
     * @return $this
     */
    public function setFumbles($fumbles)
    {
        $this->container['fumbles'] = $fumbles;

        return $this;
    }

    /**
     * Gets fumbles_lost
     *
     * @return int
     */
    public function getFumblesLost()
    {
        return $this->container['fumbles_lost'];
    }

    /**
     * Sets fumbles_lost
     *
     * @param int $fumbles_lost fumbles_lost
     *
     * @return $this
     */
    public function setFumblesLost($fumbles_lost)
    {
        $this->container['fumbles_lost'] = $fumbles_lost;

        return $this;
    }

    /**
     * Gets times_sacked
     *
     * @return int
     */
    public function getTimesSacked()
    {
        return $this->container['times_sacked'];
    }

    /**
     * Sets times_sacked
     *
     * @param int $times_sacked times_sacked
     *
     * @return $this
     */
    public function setTimesSacked($times_sacked)
    {
        $this->container['times_sacked'] = $times_sacked;

        return $this;
    }

    /**
     * Gets times_sacked_yards
     *
     * @return int
     */
    public function getTimesSackedYards()
    {
        return $this->container['times_sacked_yards'];
    }

    /**
     * Sets times_sacked_yards
     *
     * @param int $times_sacked_yards times_sacked_yards
     *
     * @return $this
     */
    public function setTimesSackedYards($times_sacked_yards)
    {
        $this->container['times_sacked_yards'] = $times_sacked_yards;

        return $this;
    }

    /**
     * Gets quarterback_hits
     *
     * @return int
     */
    public function getQuarterbackHits()
    {
        return $this->container['quarterback_hits'];
    }

    /**
     * Sets quarterback_hits
     *
     * @param int $quarterback_hits quarterback_hits
     *
     * @return $this
     */
    public function setQuarterbackHits($quarterback_hits)
    {
        $this->container['quarterback_hits'] = $quarterback_hits;

        return $this;
    }

    /**
     * Gets tackles_for_loss
     *
     * @return int
     */
    public function getTacklesForLoss()
    {
        return $this->container['tackles_for_loss'];
    }

    /**
     * Sets tackles_for_loss
     *
     * @param int $tackles_for_loss tackles_for_loss
     *
     * @return $this
     */
    public function setTacklesForLoss($tackles_for_loss)
    {
        $this->container['tackles_for_loss'] = $tackles_for_loss;

        return $this;
    }

    /**
     * Gets safeties
     *
     * @return int
     */
    public function getSafeties()
    {
        return $this->container['safeties'];
    }

    /**
     * Sets safeties
     *
     * @param int $safeties safeties
     *
     * @return $this
     */
    public function setSafeties($safeties)
    {
        $this->container['safeties'] = $safeties;

        return $this;
    }

    /**
     * Gets punts
     *
     * @return int
     */
    public function getPunts()
    {
        return $this->container['punts'];
    }

    /**
     * Sets punts
     *
     * @param int $punts punts
     *
     * @return $this
     */
    public function setPunts($punts)
    {
        $this->container['punts'] = $punts;

        return $this;
    }

    /**
     * Gets punt_yards
     *
     * @return int
     */
    public function getPuntYards()
    {
        return $this->container['punt_yards'];
    }

    /**
     * Sets punt_yards
     *
     * @param int $punt_yards punt_yards
     *
     * @return $this
     */
    public function setPuntYards($punt_yards)
    {
        $this->container['punt_yards'] = $punt_yards;

        return $this;
    }

    /**
     * Gets punt_average
     *
     * @return float
     */
    public function getPuntAverage()
    {
        return $this->container['punt_average'];
    }

    /**
     * Sets punt_average
     *
     * @param float $punt_average punt_average
     *
     * @return $this
     */
    public function setPuntAverage($punt_average)
    {
        $this->container['punt_average'] = $punt_average;

        return $this;
    }

    /**
     * Gets giveaways
     *
     * @return int
     */
    public function getGiveaways()
    {
        return $this->container['giveaways'];
    }

    /**
     * Sets giveaways
     *
     * @param int $giveaways giveaways
     *
     * @return $this
     */
    public function setGiveaways($giveaways)
    {
        $this->container['giveaways'] = $giveaways;

        return $this;
    }

    /**
     * Gets takeaways
     *
     * @return int
     */
    public function getTakeaways()
    {
        return $this->container['takeaways'];
    }

    /**
     * Sets takeaways
     *
     * @param int $takeaways takeaways
     *
     * @return $this
     */
    public function setTakeaways($takeaways)
    {
        $this->container['takeaways'] = $takeaways;

        return $this;
    }

    /**
     * Gets turnover_differential
     *
     * @return int
     */
    public function getTurnoverDifferential()
    {
        return $this->container['turnover_differential'];
    }

    /**
     * Sets turnover_differential
     *
     * @param int $turnover_differential turnover_differential
     *
     * @return $this
     */
    public function setTurnoverDifferential($turnover_differential)
    {
        $this->container['turnover_differential'] = $turnover_differential;

        return $this;
    }

    /**
     * Gets opponent_score_quarter1
     *
     * @return int
     */
    public function getOpponentScoreQuarter1()
    {
        return $this->container['opponent_score_quarter1'];
    }

    /**
     * Sets opponent_score_quarter1
     *
     * @param int $opponent_score_quarter1 opponent_score_quarter1
     *
     * @return $this
     */
    public function setOpponentScoreQuarter1($opponent_score_quarter1)
    {
        $this->container['opponent_score_quarter1'] = $opponent_score_quarter1;

        return $this;
    }

    /**
     * Gets opponent_score_quarter2
     *
     * @return int
     */
    public function getOpponentScoreQuarter2()
    {
        return $this->container['opponent_score_quarter2'];
    }

    /**
     * Sets opponent_score_quarter2
     *
     * @param int $opponent_score_quarter2 opponent_score_quarter2
     *
     * @return $this
     */
    public function setOpponentScoreQuarter2($opponent_score_quarter2)
    {
        $this->container['opponent_score_quarter2'] = $opponent_score_quarter2;

        return $this;
    }

    /**
     * Gets opponent_score_quarter3
     *
     * @return int
     */
    public function getOpponentScoreQuarter3()
    {
        return $this->container['opponent_score_quarter3'];
    }

    /**
     * Sets opponent_score_quarter3
     *
     * @param int $opponent_score_quarter3 opponent_score_quarter3
     *
     * @return $this
     */
    public function setOpponentScoreQuarter3($opponent_score_quarter3)
    {
        $this->container['opponent_score_quarter3'] = $opponent_score_quarter3;

        return $this;
    }

    /**
     * Gets opponent_score_quarter4
     *
     * @return int
     */
    public function getOpponentScoreQuarter4()
    {
        return $this->container['opponent_score_quarter4'];
    }

    /**
     * Sets opponent_score_quarter4
     *
     * @param int $opponent_score_quarter4 opponent_score_quarter4
     *
     * @return $this
     */
    public function setOpponentScoreQuarter4($opponent_score_quarter4)
    {
        $this->container['opponent_score_quarter4'] = $opponent_score_quarter4;

        return $this;
    }

    /**
     * Gets opponent_score_overtime
     *
     * @return int
     */
    public function getOpponentScoreOvertime()
    {
        return $this->container['opponent_score_overtime'];
    }

    /**
     * Sets opponent_score_overtime
     *
     * @param int $opponent_score_overtime opponent_score_overtime
     *
     * @return $this
     */
    public function setOpponentScoreOvertime($opponent_score_overtime)
    {
        $this->container['opponent_score_overtime'] = $opponent_score_overtime;

        return $this;
    }

    /**
     * Gets opponent_time_of_possession_minutes
     *
     * @return int
     */
    public function getOpponentTimeOfPossessionMinutes()
    {
        return $this->container['opponent_time_of_possession_minutes'];
    }

    /**
     * Sets opponent_time_of_possession_minutes
     *
     * @param int $opponent_time_of_possession_minutes opponent_time_of_possession_minutes
     *
     * @return $this
     */
    public function setOpponentTimeOfPossessionMinutes($opponent_time_of_possession_minutes)
    {
        $this->container['opponent_time_of_possession_minutes'] = $opponent_time_of_possession_minutes;

        return $this;
    }

    /**
     * Gets opponent_time_of_possession_seconds
     *
     * @return int
     */
    public function getOpponentTimeOfPossessionSeconds()
    {
        return $this->container['opponent_time_of_possession_seconds'];
    }

    /**
     * Sets opponent_time_of_possession_seconds
     *
     * @param int $opponent_time_of_possession_seconds opponent_time_of_possession_seconds
     *
     * @return $this
     */
    public function setOpponentTimeOfPossessionSeconds($opponent_time_of_possession_seconds)
    {
        $this->container['opponent_time_of_possession_seconds'] = $opponent_time_of_possession_seconds;

        return $this;
    }

    /**
     * Gets opponent_time_of_possession
     *
     * @return string
     */
    public function getOpponentTimeOfPossession()
    {
        return $this->container['opponent_time_of_possession'];
    }

    /**
     * Sets opponent_time_of_possession
     *
     * @param string $opponent_time_of_possession opponent_time_of_possession
     *
     * @return $this
     */
    public function setOpponentTimeOfPossession($opponent_time_of_possession)
    {
        $this->container['opponent_time_of_possession'] = $opponent_time_of_possession;

        return $this;
    }

    /**
     * Gets opponent_first_downs
     *
     * @return int
     */
    public function getOpponentFirstDowns()
    {
        return $this->container['opponent_first_downs'];
    }

    /**
     * Sets opponent_first_downs
     *
     * @param int $opponent_first_downs opponent_first_downs
     *
     * @return $this
     */
    public function setOpponentFirstDowns($opponent_first_downs)
    {
        $this->container['opponent_first_downs'] = $opponent_first_downs;

        return $this;
    }

    /**
     * Gets opponent_first_downs_by_rushing
     *
     * @return int
     */
    public function getOpponentFirstDownsByRushing()
    {
        return $this->container['opponent_first_downs_by_rushing'];
    }

    /**
     * Sets opponent_first_downs_by_rushing
     *
     * @param int $opponent_first_downs_by_rushing opponent_first_downs_by_rushing
     *
     * @return $this
     */
    public function setOpponentFirstDownsByRushing($opponent_first_downs_by_rushing)
    {
        $this->container['opponent_first_downs_by_rushing'] = $opponent_first_downs_by_rushing;

        return $this;
    }

    /**
     * Gets opponent_first_downs_by_passing
     *
     * @return int
     */
    public function getOpponentFirstDownsByPassing()
    {
        return $this->container['opponent_first_downs_by_passing'];
    }

    /**
     * Sets opponent_first_downs_by_passing
     *
     * @param int $opponent_first_downs_by_passing opponent_first_downs_by_passing
     *
     * @return $this
     */
    public function setOpponentFirstDownsByPassing($opponent_first_downs_by_passing)
    {
        $this->container['opponent_first_downs_by_passing'] = $opponent_first_downs_by_passing;

        return $this;
    }

    /**
     * Gets opponent_first_downs_by_penalty
     *
     * @return int
     */
    public function getOpponentFirstDownsByPenalty()
    {
        return $this->container['opponent_first_downs_by_penalty'];
    }

    /**
     * Sets opponent_first_downs_by_penalty
     *
     * @param int $opponent_first_downs_by_penalty opponent_first_downs_by_penalty
     *
     * @return $this
     */
    public function setOpponentFirstDownsByPenalty($opponent_first_downs_by_penalty)
    {
        $this->container['opponent_first_downs_by_penalty'] = $opponent_first_downs_by_penalty;

        return $this;
    }

    /**
     * Gets opponent_offensive_plays
     *
     * @return int
     */
    public function getOpponentOffensivePlays()
    {
        return $this->container['opponent_offensive_plays'];
    }

    /**
     * Sets opponent_offensive_plays
     *
     * @param int $opponent_offensive_plays opponent_offensive_plays
     *
     * @return $this
     */
    public function setOpponentOffensivePlays($opponent_offensive_plays)
    {
        $this->container['opponent_offensive_plays'] = $opponent_offensive_plays;

        return $this;
    }

    /**
     * Gets opponent_offensive_yards
     *
     * @return int
     */
    public function getOpponentOffensiveYards()
    {
        return $this->container['opponent_offensive_yards'];
    }

    /**
     * Sets opponent_offensive_yards
     *
     * @param int $opponent_offensive_yards opponent_offensive_yards
     *
     * @return $this
     */
    public function setOpponentOffensiveYards($opponent_offensive_yards)
    {
        $this->container['opponent_offensive_yards'] = $opponent_offensive_yards;

        return $this;
    }

    /**
     * Gets opponent_offensive_yards_per_play
     *
     * @return float
     */
    public function getOpponentOffensiveYardsPerPlay()
    {
        return $this->container['opponent_offensive_yards_per_play'];
    }

    /**
     * Sets opponent_offensive_yards_per_play
     *
     * @param float $opponent_offensive_yards_per_play opponent_offensive_yards_per_play
     *
     * @return $this
     */
    public function setOpponentOffensiveYardsPerPlay($opponent_offensive_yards_per_play)
    {
        $this->container['opponent_offensive_yards_per_play'] = $opponent_offensive_yards_per_play;

        return $this;
    }

    /**
     * Gets opponent_touchdowns
     *
     * @return int
     */
    public function getOpponentTouchdowns()
    {
        return $this->container['opponent_touchdowns'];
    }

    /**
     * Sets opponent_touchdowns
     *
     * @param int $opponent_touchdowns opponent_touchdowns
     *
     * @return $this
     */
    public function setOpponentTouchdowns($opponent_touchdowns)
    {
        $this->container['opponent_touchdowns'] = $opponent_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_rushing_attempts
     *
     * @return int
     */
    public function getOpponentRushingAttempts()
    {
        return $this->container['opponent_rushing_attempts'];
    }

    /**
     * Sets opponent_rushing_attempts
     *
     * @param int $opponent_rushing_attempts opponent_rushing_attempts
     *
     * @return $this
     */
    public function setOpponentRushingAttempts($opponent_rushing_attempts)
    {
        $this->container['opponent_rushing_attempts'] = $opponent_rushing_attempts;

        return $this;
    }

    /**
     * Gets opponent_rushing_yards
     *
     * @return int
     */
    public function getOpponentRushingYards()
    {
        return $this->container['opponent_rushing_yards'];
    }

    /**
     * Sets opponent_rushing_yards
     *
     * @param int $opponent_rushing_yards opponent_rushing_yards
     *
     * @return $this
     */
    public function setOpponentRushingYards($opponent_rushing_yards)
    {
        $this->container['opponent_rushing_yards'] = $opponent_rushing_yards;

        return $this;
    }

    /**
     * Gets opponent_rushing_yards_per_attempt
     *
     * @return float
     */
    public function getOpponentRushingYardsPerAttempt()
    {
        return $this->container['opponent_rushing_yards_per_attempt'];
    }

    /**
     * Sets opponent_rushing_yards_per_attempt
     *
     * @param float $opponent_rushing_yards_per_attempt opponent_rushing_yards_per_attempt
     *
     * @return $this
     */
    public function setOpponentRushingYardsPerAttempt($opponent_rushing_yards_per_attempt)
    {
        $this->container['opponent_rushing_yards_per_attempt'] = $opponent_rushing_yards_per_attempt;

        return $this;
    }

    /**
     * Gets opponent_rushing_touchdowns
     *
     * @return int
     */
    public function getOpponentRushingTouchdowns()
    {
        return $this->container['opponent_rushing_touchdowns'];
    }

    /**
     * Sets opponent_rushing_touchdowns
     *
     * @param int $opponent_rushing_touchdowns opponent_rushing_touchdowns
     *
     * @return $this
     */
    public function setOpponentRushingTouchdowns($opponent_rushing_touchdowns)
    {
        $this->container['opponent_rushing_touchdowns'] = $opponent_rushing_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_passing_attempts
     *
     * @return int
     */
    public function getOpponentPassingAttempts()
    {
        return $this->container['opponent_passing_attempts'];
    }

    /**
     * Sets opponent_passing_attempts
     *
     * @param int $opponent_passing_attempts opponent_passing_attempts
     *
     * @return $this
     */
    public function setOpponentPassingAttempts($opponent_passing_attempts)
    {
        $this->container['opponent_passing_attempts'] = $opponent_passing_attempts;

        return $this;
    }

    /**
     * Gets opponent_passing_completions
     *
     * @return int
     */
    public function getOpponentPassingCompletions()
    {
        return $this->container['opponent_passing_completions'];
    }

    /**
     * Sets opponent_passing_completions
     *
     * @param int $opponent_passing_completions opponent_passing_completions
     *
     * @return $this
     */
    public function setOpponentPassingCompletions($opponent_passing_completions)
    {
        $this->container['opponent_passing_completions'] = $opponent_passing_completions;

        return $this;
    }

    /**
     * Gets opponent_passing_yards
     *
     * @return int
     */
    public function getOpponentPassingYards()
    {
        return $this->container['opponent_passing_yards'];
    }

    /**
     * Sets opponent_passing_yards
     *
     * @param int $opponent_passing_yards opponent_passing_yards
     *
     * @return $this
     */
    public function setOpponentPassingYards($opponent_passing_yards)
    {
        $this->container['opponent_passing_yards'] = $opponent_passing_yards;

        return $this;
    }

    /**
     * Gets opponent_passing_touchdowns
     *
     * @return int
     */
    public function getOpponentPassingTouchdowns()
    {
        return $this->container['opponent_passing_touchdowns'];
    }

    /**
     * Sets opponent_passing_touchdowns
     *
     * @param int $opponent_passing_touchdowns opponent_passing_touchdowns
     *
     * @return $this
     */
    public function setOpponentPassingTouchdowns($opponent_passing_touchdowns)
    {
        $this->container['opponent_passing_touchdowns'] = $opponent_passing_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_passing_interceptions
     *
     * @return int
     */
    public function getOpponentPassingInterceptions()
    {
        return $this->container['opponent_passing_interceptions'];
    }

    /**
     * Sets opponent_passing_interceptions
     *
     * @param int $opponent_passing_interceptions opponent_passing_interceptions
     *
     * @return $this
     */
    public function setOpponentPassingInterceptions($opponent_passing_interceptions)
    {
        $this->container['opponent_passing_interceptions'] = $opponent_passing_interceptions;

        return $this;
    }

    /**
     * Gets opponent_passing_yards_per_attempt
     *
     * @return float
     */
    public function getOpponentPassingYardsPerAttempt()
    {
        return $this->container['opponent_passing_yards_per_attempt'];
    }

    /**
     * Sets opponent_passing_yards_per_attempt
     *
     * @param float $opponent_passing_yards_per_attempt opponent_passing_yards_per_attempt
     *
     * @return $this
     */
    public function setOpponentPassingYardsPerAttempt($opponent_passing_yards_per_attempt)
    {
        $this->container['opponent_passing_yards_per_attempt'] = $opponent_passing_yards_per_attempt;

        return $this;
    }

    /**
     * Gets opponent_passing_yards_per_completion
     *
     * @return float
     */
    public function getOpponentPassingYardsPerCompletion()
    {
        return $this->container['opponent_passing_yards_per_completion'];
    }

    /**
     * Sets opponent_passing_yards_per_completion
     *
     * @param float $opponent_passing_yards_per_completion opponent_passing_yards_per_completion
     *
     * @return $this
     */
    public function setOpponentPassingYardsPerCompletion($opponent_passing_yards_per_completion)
    {
        $this->container['opponent_passing_yards_per_completion'] = $opponent_passing_yards_per_completion;

        return $this;
    }

    /**
     * Gets opponent_completion_percentage
     *
     * @return float
     */
    public function getOpponentCompletionPercentage()
    {
        return $this->container['opponent_completion_percentage'];
    }

    /**
     * Sets opponent_completion_percentage
     *
     * @param float $opponent_completion_percentage opponent_completion_percentage
     *
     * @return $this
     */
    public function setOpponentCompletionPercentage($opponent_completion_percentage)
    {
        $this->container['opponent_completion_percentage'] = $opponent_completion_percentage;

        return $this;
    }

    /**
     * Gets opponent_passer_rating
     *
     * @return float
     */
    public function getOpponentPasserRating()
    {
        return $this->container['opponent_passer_rating'];
    }

    /**
     * Sets opponent_passer_rating
     *
     * @param float $opponent_passer_rating opponent_passer_rating
     *
     * @return $this
     */
    public function setOpponentPasserRating($opponent_passer_rating)
    {
        $this->container['opponent_passer_rating'] = $opponent_passer_rating;

        return $this;
    }

    /**
     * Gets opponent_third_down_attempts
     *
     * @return int
     */
    public function getOpponentThirdDownAttempts()
    {
        return $this->container['opponent_third_down_attempts'];
    }

    /**
     * Sets opponent_third_down_attempts
     *
     * @param int $opponent_third_down_attempts opponent_third_down_attempts
     *
     * @return $this
     */
    public function setOpponentThirdDownAttempts($opponent_third_down_attempts)
    {
        $this->container['opponent_third_down_attempts'] = $opponent_third_down_attempts;

        return $this;
    }

    /**
     * Gets opponent_third_down_conversions
     *
     * @return int
     */
    public function getOpponentThirdDownConversions()
    {
        return $this->container['opponent_third_down_conversions'];
    }

    /**
     * Sets opponent_third_down_conversions
     *
     * @param int $opponent_third_down_conversions opponent_third_down_conversions
     *
     * @return $this
     */
    public function setOpponentThirdDownConversions($opponent_third_down_conversions)
    {
        $this->container['opponent_third_down_conversions'] = $opponent_third_down_conversions;

        return $this;
    }

    /**
     * Gets opponent_third_down_percentage
     *
     * @return float
     */
    public function getOpponentThirdDownPercentage()
    {
        return $this->container['opponent_third_down_percentage'];
    }

    /**
     * Sets opponent_third_down_percentage
     *
     * @param float $opponent_third_down_percentage opponent_third_down_percentage
     *
     * @return $this
     */
    public function setOpponentThirdDownPercentage($opponent_third_down_percentage)
    {
        $this->container['opponent_third_down_percentage'] = $opponent_third_down_percentage;

        return $this;
    }

    /**
     * Gets opponent_fourth_down_attempts
     *
     * @return int
     */
    public function getOpponentFourthDownAttempts()
    {
        return $this->container['opponent_fourth_down_attempts'];
    }

    /**
     * Sets opponent_fourth_down_attempts
     *
     * @param int $opponent_fourth_down_attempts opponent_fourth_down_attempts
     *
     * @return $this
     */
    public function setOpponentFourthDownAttempts($opponent_fourth_down_attempts)
    {
        $this->container['opponent_fourth_down_attempts'] = $opponent_fourth_down_attempts;

        return $this;
    }

    /**
     * Gets opponent_fourth_down_conversions
     *
     * @return int
     */
    public function getOpponentFourthDownConversions()
    {
        return $this->container['opponent_fourth_down_conversions'];
    }

    /**
     * Sets opponent_fourth_down_conversions
     *
     * @param int $opponent_fourth_down_conversions opponent_fourth_down_conversions
     *
     * @return $this
     */
    public function setOpponentFourthDownConversions($opponent_fourth_down_conversions)
    {
        $this->container['opponent_fourth_down_conversions'] = $opponent_fourth_down_conversions;

        return $this;
    }

    /**
     * Gets opponent_fourth_down_percentage
     *
     * @return float
     */
    public function getOpponentFourthDownPercentage()
    {
        return $this->container['opponent_fourth_down_percentage'];
    }

    /**
     * Sets opponent_fourth_down_percentage
     *
     * @param float $opponent_fourth_down_percentage opponent_fourth_down_percentage
     *
     * @return $this
     */
    public function setOpponentFourthDownPercentage($opponent_fourth_down_percentage)
    {
        $this->container['opponent_fourth_down_percentage'] = $opponent_fourth_down_percentage;

        return $this;
    }

    /**
     * Gets opponent_red_zone_attempts
     *
     * @return int
     */
    public function getOpponentRedZoneAttempts()
    {
        return $this->container['opponent_red_zone_attempts'];
    }

    /**
     * Sets opponent_red_zone_attempts
     *
     * @param int $opponent_red_zone_attempts opponent_red_zone_attempts
     *
     * @return $this
     */
    public function setOpponentRedZoneAttempts($opponent_red_zone_attempts)
    {
        $this->container['opponent_red_zone_attempts'] = $opponent_red_zone_attempts;

        return $this;
    }

    /**
     * Gets opponent_red_zone_conversions
     *
     * @return int
     */
    public function getOpponentRedZoneConversions()
    {
        return $this->container['opponent_red_zone_conversions'];
    }

    /**
     * Sets opponent_red_zone_conversions
     *
     * @param int $opponent_red_zone_conversions opponent_red_zone_conversions
     *
     * @return $this
     */
    public function setOpponentRedZoneConversions($opponent_red_zone_conversions)
    {
        $this->container['opponent_red_zone_conversions'] = $opponent_red_zone_conversions;

        return $this;
    }

    /**
     * Gets opponent_goal_to_go_attempts
     *
     * @return int
     */
    public function getOpponentGoalToGoAttempts()
    {
        return $this->container['opponent_goal_to_go_attempts'];
    }

    /**
     * Sets opponent_goal_to_go_attempts
     *
     * @param int $opponent_goal_to_go_attempts opponent_goal_to_go_attempts
     *
     * @return $this
     */
    public function setOpponentGoalToGoAttempts($opponent_goal_to_go_attempts)
    {
        $this->container['opponent_goal_to_go_attempts'] = $opponent_goal_to_go_attempts;

        return $this;
    }

    /**
     * Gets opponent_goal_to_go_conversions
     *
     * @return int
     */
    public function getOpponentGoalToGoConversions()
    {
        return $this->container['opponent_goal_to_go_conversions'];
    }

    /**
     * Sets opponent_goal_to_go_conversions
     *
     * @param int $opponent_goal_to_go_conversions opponent_goal_to_go_conversions
     *
     * @return $this
     */
    public function setOpponentGoalToGoConversions($opponent_goal_to_go_conversions)
    {
        $this->container['opponent_goal_to_go_conversions'] = $opponent_goal_to_go_conversions;

        return $this;
    }

    /**
     * Gets opponent_return_yards
     *
     * @return int
     */
    public function getOpponentReturnYards()
    {
        return $this->container['opponent_return_yards'];
    }

    /**
     * Sets opponent_return_yards
     *
     * @param int $opponent_return_yards opponent_return_yards
     *
     * @return $this
     */
    public function setOpponentReturnYards($opponent_return_yards)
    {
        $this->container['opponent_return_yards'] = $opponent_return_yards;

        return $this;
    }

    /**
     * Gets opponent_penalties
     *
     * @return int
     */
    public function getOpponentPenalties()
    {
        return $this->container['opponent_penalties'];
    }

    /**
     * Sets opponent_penalties
     *
     * @param int $opponent_penalties opponent_penalties
     *
     * @return $this
     */
    public function setOpponentPenalties($opponent_penalties)
    {
        $this->container['opponent_penalties'] = $opponent_penalties;

        return $this;
    }

    /**
     * Gets opponent_penalty_yards
     *
     * @return int
     */
    public function getOpponentPenaltyYards()
    {
        return $this->container['opponent_penalty_yards'];
    }

    /**
     * Sets opponent_penalty_yards
     *
     * @param int $opponent_penalty_yards opponent_penalty_yards
     *
     * @return $this
     */
    public function setOpponentPenaltyYards($opponent_penalty_yards)
    {
        $this->container['opponent_penalty_yards'] = $opponent_penalty_yards;

        return $this;
    }

    /**
     * Gets opponent_fumbles
     *
     * @return int
     */
    public function getOpponentFumbles()
    {
        return $this->container['opponent_fumbles'];
    }

    /**
     * Sets opponent_fumbles
     *
     * @param int $opponent_fumbles opponent_fumbles
     *
     * @return $this
     */
    public function setOpponentFumbles($opponent_fumbles)
    {
        $this->container['opponent_fumbles'] = $opponent_fumbles;

        return $this;
    }

    /**
     * Gets opponent_fumbles_lost
     *
     * @return int
     */
    public function getOpponentFumblesLost()
    {
        return $this->container['opponent_fumbles_lost'];
    }

    /**
     * Sets opponent_fumbles_lost
     *
     * @param int $opponent_fumbles_lost opponent_fumbles_lost
     *
     * @return $this
     */
    public function setOpponentFumblesLost($opponent_fumbles_lost)
    {
        $this->container['opponent_fumbles_lost'] = $opponent_fumbles_lost;

        return $this;
    }

    /**
     * Gets opponent_times_sacked
     *
     * @return int
     */
    public function getOpponentTimesSacked()
    {
        return $this->container['opponent_times_sacked'];
    }

    /**
     * Sets opponent_times_sacked
     *
     * @param int $opponent_times_sacked opponent_times_sacked
     *
     * @return $this
     */
    public function setOpponentTimesSacked($opponent_times_sacked)
    {
        $this->container['opponent_times_sacked'] = $opponent_times_sacked;

        return $this;
    }

    /**
     * Gets opponent_times_sacked_yards
     *
     * @return int
     */
    public function getOpponentTimesSackedYards()
    {
        return $this->container['opponent_times_sacked_yards'];
    }

    /**
     * Sets opponent_times_sacked_yards
     *
     * @param int $opponent_times_sacked_yards opponent_times_sacked_yards
     *
     * @return $this
     */
    public function setOpponentTimesSackedYards($opponent_times_sacked_yards)
    {
        $this->container['opponent_times_sacked_yards'] = $opponent_times_sacked_yards;

        return $this;
    }

    /**
     * Gets opponent_quarterback_hits
     *
     * @return int
     */
    public function getOpponentQuarterbackHits()
    {
        return $this->container['opponent_quarterback_hits'];
    }

    /**
     * Sets opponent_quarterback_hits
     *
     * @param int $opponent_quarterback_hits opponent_quarterback_hits
     *
     * @return $this
     */
    public function setOpponentQuarterbackHits($opponent_quarterback_hits)
    {
        $this->container['opponent_quarterback_hits'] = $opponent_quarterback_hits;

        return $this;
    }

    /**
     * Gets opponent_tackles_for_loss
     *
     * @return int
     */
    public function getOpponentTacklesForLoss()
    {
        return $this->container['opponent_tackles_for_loss'];
    }

    /**
     * Sets opponent_tackles_for_loss
     *
     * @param int $opponent_tackles_for_loss opponent_tackles_for_loss
     *
     * @return $this
     */
    public function setOpponentTacklesForLoss($opponent_tackles_for_loss)
    {
        $this->container['opponent_tackles_for_loss'] = $opponent_tackles_for_loss;

        return $this;
    }

    /**
     * Gets opponent_safeties
     *
     * @return int
     */
    public function getOpponentSafeties()
    {
        return $this->container['opponent_safeties'];
    }

    /**
     * Sets opponent_safeties
     *
     * @param int $opponent_safeties opponent_safeties
     *
     * @return $this
     */
    public function setOpponentSafeties($opponent_safeties)
    {
        $this->container['opponent_safeties'] = $opponent_safeties;

        return $this;
    }

    /**
     * Gets opponent_punts
     *
     * @return int
     */
    public function getOpponentPunts()
    {
        return $this->container['opponent_punts'];
    }

    /**
     * Sets opponent_punts
     *
     * @param int $opponent_punts opponent_punts
     *
     * @return $this
     */
    public function setOpponentPunts($opponent_punts)
    {
        $this->container['opponent_punts'] = $opponent_punts;

        return $this;
    }

    /**
     * Gets opponent_punt_yards
     *
     * @return int
     */
    public function getOpponentPuntYards()
    {
        return $this->container['opponent_punt_yards'];
    }

    /**
     * Sets opponent_punt_yards
     *
     * @param int $opponent_punt_yards opponent_punt_yards
     *
     * @return $this
     */
    public function setOpponentPuntYards($opponent_punt_yards)
    {
        $this->container['opponent_punt_yards'] = $opponent_punt_yards;

        return $this;
    }

    /**
     * Gets opponent_punt_average
     *
     * @return float
     */
    public function getOpponentPuntAverage()
    {
        return $this->container['opponent_punt_average'];
    }

    /**
     * Sets opponent_punt_average
     *
     * @param float $opponent_punt_average opponent_punt_average
     *
     * @return $this
     */
    public function setOpponentPuntAverage($opponent_punt_average)
    {
        $this->container['opponent_punt_average'] = $opponent_punt_average;

        return $this;
    }

    /**
     * Gets opponent_giveaways
     *
     * @return int
     */
    public function getOpponentGiveaways()
    {
        return $this->container['opponent_giveaways'];
    }

    /**
     * Sets opponent_giveaways
     *
     * @param int $opponent_giveaways opponent_giveaways
     *
     * @return $this
     */
    public function setOpponentGiveaways($opponent_giveaways)
    {
        $this->container['opponent_giveaways'] = $opponent_giveaways;

        return $this;
    }

    /**
     * Gets opponent_takeaways
     *
     * @return int
     */
    public function getOpponentTakeaways()
    {
        return $this->container['opponent_takeaways'];
    }

    /**
     * Sets opponent_takeaways
     *
     * @param int $opponent_takeaways opponent_takeaways
     *
     * @return $this
     */
    public function setOpponentTakeaways($opponent_takeaways)
    {
        $this->container['opponent_takeaways'] = $opponent_takeaways;

        return $this;
    }

    /**
     * Gets opponent_turnover_differential
     *
     * @return int
     */
    public function getOpponentTurnoverDifferential()
    {
        return $this->container['opponent_turnover_differential'];
    }

    /**
     * Sets opponent_turnover_differential
     *
     * @param int $opponent_turnover_differential opponent_turnover_differential
     *
     * @return $this
     */
    public function setOpponentTurnoverDifferential($opponent_turnover_differential)
    {
        $this->container['opponent_turnover_differential'] = $opponent_turnover_differential;

        return $this;
    }

    /**
     * Gets red_zone_percentage
     *
     * @return float
     */
    public function getRedZonePercentage()
    {
        return $this->container['red_zone_percentage'];
    }

    /**
     * Sets red_zone_percentage
     *
     * @param float $red_zone_percentage red_zone_percentage
     *
     * @return $this
     */
    public function setRedZonePercentage($red_zone_percentage)
    {
        $this->container['red_zone_percentage'] = $red_zone_percentage;

        return $this;
    }

    /**
     * Gets goal_to_go_percentage
     *
     * @return float
     */
    public function getGoalToGoPercentage()
    {
        return $this->container['goal_to_go_percentage'];
    }

    /**
     * Sets goal_to_go_percentage
     *
     * @param float $goal_to_go_percentage goal_to_go_percentage
     *
     * @return $this
     */
    public function setGoalToGoPercentage($goal_to_go_percentage)
    {
        $this->container['goal_to_go_percentage'] = $goal_to_go_percentage;

        return $this;
    }

    /**
     * Gets quarterback_hits_differential
     *
     * @return int
     */
    public function getQuarterbackHitsDifferential()
    {
        return $this->container['quarterback_hits_differential'];
    }

    /**
     * Sets quarterback_hits_differential
     *
     * @param int $quarterback_hits_differential quarterback_hits_differential
     *
     * @return $this
     */
    public function setQuarterbackHitsDifferential($quarterback_hits_differential)
    {
        $this->container['quarterback_hits_differential'] = $quarterback_hits_differential;

        return $this;
    }

    /**
     * Gets tackles_for_loss_differential
     *
     * @return int
     */
    public function getTacklesForLossDifferential()
    {
        return $this->container['tackles_for_loss_differential'];
    }

    /**
     * Sets tackles_for_loss_differential
     *
     * @param int $tackles_for_loss_differential tackles_for_loss_differential
     *
     * @return $this
     */
    public function setTacklesForLossDifferential($tackles_for_loss_differential)
    {
        $this->container['tackles_for_loss_differential'] = $tackles_for_loss_differential;

        return $this;
    }

    /**
     * Gets quarterback_sacks_differential
     *
     * @return int
     */
    public function getQuarterbackSacksDifferential()
    {
        return $this->container['quarterback_sacks_differential'];
    }

    /**
     * Sets quarterback_sacks_differential
     *
     * @param int $quarterback_sacks_differential quarterback_sacks_differential
     *
     * @return $this
     */
    public function setQuarterbackSacksDifferential($quarterback_sacks_differential)
    {
        $this->container['quarterback_sacks_differential'] = $quarterback_sacks_differential;

        return $this;
    }

    /**
     * Gets tackles_for_loss_percentage
     *
     * @return float
     */
    public function getTacklesForLossPercentage()
    {
        return $this->container['tackles_for_loss_percentage'];
    }

    /**
     * Sets tackles_for_loss_percentage
     *
     * @param float $tackles_for_loss_percentage tackles_for_loss_percentage
     *
     * @return $this
     */
    public function setTacklesForLossPercentage($tackles_for_loss_percentage)
    {
        $this->container['tackles_for_loss_percentage'] = $tackles_for_loss_percentage;

        return $this;
    }

    /**
     * Gets quarterback_hits_percentage
     *
     * @return float
     */
    public function getQuarterbackHitsPercentage()
    {
        return $this->container['quarterback_hits_percentage'];
    }

    /**
     * Sets quarterback_hits_percentage
     *
     * @param float $quarterback_hits_percentage quarterback_hits_percentage
     *
     * @return $this
     */
    public function setQuarterbackHitsPercentage($quarterback_hits_percentage)
    {
        $this->container['quarterback_hits_percentage'] = $quarterback_hits_percentage;

        return $this;
    }

    /**
     * Gets times_sacked_percentage
     *
     * @return float
     */
    public function getTimesSackedPercentage()
    {
        return $this->container['times_sacked_percentage'];
    }

    /**
     * Sets times_sacked_percentage
     *
     * @param float $times_sacked_percentage times_sacked_percentage
     *
     * @return $this
     */
    public function setTimesSackedPercentage($times_sacked_percentage)
    {
        $this->container['times_sacked_percentage'] = $times_sacked_percentage;

        return $this;
    }

    /**
     * Gets opponent_red_zone_percentage
     *
     * @return float
     */
    public function getOpponentRedZonePercentage()
    {
        return $this->container['opponent_red_zone_percentage'];
    }

    /**
     * Sets opponent_red_zone_percentage
     *
     * @param float $opponent_red_zone_percentage opponent_red_zone_percentage
     *
     * @return $this
     */
    public function setOpponentRedZonePercentage($opponent_red_zone_percentage)
    {
        $this->container['opponent_red_zone_percentage'] = $opponent_red_zone_percentage;

        return $this;
    }

    /**
     * Gets opponent_goal_to_go_percentage
     *
     * @return float
     */
    public function getOpponentGoalToGoPercentage()
    {
        return $this->container['opponent_goal_to_go_percentage'];
    }

    /**
     * Sets opponent_goal_to_go_percentage
     *
     * @param float $opponent_goal_to_go_percentage opponent_goal_to_go_percentage
     *
     * @return $this
     */
    public function setOpponentGoalToGoPercentage($opponent_goal_to_go_percentage)
    {
        $this->container['opponent_goal_to_go_percentage'] = $opponent_goal_to_go_percentage;

        return $this;
    }

    /**
     * Gets opponent_quarterback_hits_differential
     *
     * @return int
     */
    public function getOpponentQuarterbackHitsDifferential()
    {
        return $this->container['opponent_quarterback_hits_differential'];
    }

    /**
     * Sets opponent_quarterback_hits_differential
     *
     * @param int $opponent_quarterback_hits_differential opponent_quarterback_hits_differential
     *
     * @return $this
     */
    public function setOpponentQuarterbackHitsDifferential($opponent_quarterback_hits_differential)
    {
        $this->container['opponent_quarterback_hits_differential'] = $opponent_quarterback_hits_differential;

        return $this;
    }

    /**
     * Gets opponent_tackles_for_loss_differential
     *
     * @return int
     */
    public function getOpponentTacklesForLossDifferential()
    {
        return $this->container['opponent_tackles_for_loss_differential'];
    }

    /**
     * Sets opponent_tackles_for_loss_differential
     *
     * @param int $opponent_tackles_for_loss_differential opponent_tackles_for_loss_differential
     *
     * @return $this
     */
    public function setOpponentTacklesForLossDifferential($opponent_tackles_for_loss_differential)
    {
        $this->container['opponent_tackles_for_loss_differential'] = $opponent_tackles_for_loss_differential;

        return $this;
    }

    /**
     * Gets opponent_quarterback_sacks_differential
     *
     * @return int
     */
    public function getOpponentQuarterbackSacksDifferential()
    {
        return $this->container['opponent_quarterback_sacks_differential'];
    }

    /**
     * Sets opponent_quarterback_sacks_differential
     *
     * @param int $opponent_quarterback_sacks_differential opponent_quarterback_sacks_differential
     *
     * @return $this
     */
    public function setOpponentQuarterbackSacksDifferential($opponent_quarterback_sacks_differential)
    {
        $this->container['opponent_quarterback_sacks_differential'] = $opponent_quarterback_sacks_differential;

        return $this;
    }

    /**
     * Gets opponent_tackles_for_loss_percentage
     *
     * @return float
     */
    public function getOpponentTacklesForLossPercentage()
    {
        return $this->container['opponent_tackles_for_loss_percentage'];
    }

    /**
     * Sets opponent_tackles_for_loss_percentage
     *
     * @param float $opponent_tackles_for_loss_percentage opponent_tackles_for_loss_percentage
     *
     * @return $this
     */
    public function setOpponentTacklesForLossPercentage($opponent_tackles_for_loss_percentage)
    {
        $this->container['opponent_tackles_for_loss_percentage'] = $opponent_tackles_for_loss_percentage;

        return $this;
    }

    /**
     * Gets opponent_quarterback_hits_percentage
     *
     * @return float
     */
    public function getOpponentQuarterbackHitsPercentage()
    {
        return $this->container['opponent_quarterback_hits_percentage'];
    }

    /**
     * Sets opponent_quarterback_hits_percentage
     *
     * @param float $opponent_quarterback_hits_percentage opponent_quarterback_hits_percentage
     *
     * @return $this
     */
    public function setOpponentQuarterbackHitsPercentage($opponent_quarterback_hits_percentage)
    {
        $this->container['opponent_quarterback_hits_percentage'] = $opponent_quarterback_hits_percentage;

        return $this;
    }

    /**
     * Gets opponent_times_sacked_percentage
     *
     * @return float
     */
    public function getOpponentTimesSackedPercentage()
    {
        return $this->container['opponent_times_sacked_percentage'];
    }

    /**
     * Sets opponent_times_sacked_percentage
     *
     * @param float $opponent_times_sacked_percentage opponent_times_sacked_percentage
     *
     * @return $this
     */
    public function setOpponentTimesSackedPercentage($opponent_times_sacked_percentage)
    {
        $this->container['opponent_times_sacked_percentage'] = $opponent_times_sacked_percentage;

        return $this;
    }

    /**
     * Gets kickoffs
     *
     * @return int
     */
    public function getKickoffs()
    {
        return $this->container['kickoffs'];
    }

    /**
     * Sets kickoffs
     *
     * @param int $kickoffs kickoffs
     *
     * @return $this
     */
    public function setKickoffs($kickoffs)
    {
        $this->container['kickoffs'] = $kickoffs;

        return $this;
    }

    /**
     * Gets kickoffs_in_end_zone
     *
     * @return int
     */
    public function getKickoffsInEndZone()
    {
        return $this->container['kickoffs_in_end_zone'];
    }

    /**
     * Sets kickoffs_in_end_zone
     *
     * @param int $kickoffs_in_end_zone kickoffs_in_end_zone
     *
     * @return $this
     */
    public function setKickoffsInEndZone($kickoffs_in_end_zone)
    {
        $this->container['kickoffs_in_end_zone'] = $kickoffs_in_end_zone;

        return $this;
    }

    /**
     * Gets kickoff_touchbacks
     *
     * @return int
     */
    public function getKickoffTouchbacks()
    {
        return $this->container['kickoff_touchbacks'];
    }

    /**
     * Sets kickoff_touchbacks
     *
     * @param int $kickoff_touchbacks kickoff_touchbacks
     *
     * @return $this
     */
    public function setKickoffTouchbacks($kickoff_touchbacks)
    {
        $this->container['kickoff_touchbacks'] = $kickoff_touchbacks;

        return $this;
    }

    /**
     * Gets punts_had_blocked
     *
     * @return int
     */
    public function getPuntsHadBlocked()
    {
        return $this->container['punts_had_blocked'];
    }

    /**
     * Sets punts_had_blocked
     *
     * @param int $punts_had_blocked punts_had_blocked
     *
     * @return $this
     */
    public function setPuntsHadBlocked($punts_had_blocked)
    {
        $this->container['punts_had_blocked'] = $punts_had_blocked;

        return $this;
    }

    /**
     * Gets punt_net_average
     *
     * @return float
     */
    public function getPuntNetAverage()
    {
        return $this->container['punt_net_average'];
    }

    /**
     * Sets punt_net_average
     *
     * @param float $punt_net_average punt_net_average
     *
     * @return $this
     */
    public function setPuntNetAverage($punt_net_average)
    {
        $this->container['punt_net_average'] = $punt_net_average;

        return $this;
    }

    /**
     * Gets extra_point_kicking_attempts
     *
     * @return int
     */
    public function getExtraPointKickingAttempts()
    {
        return $this->container['extra_point_kicking_attempts'];
    }

    /**
     * Sets extra_point_kicking_attempts
     *
     * @param int $extra_point_kicking_attempts extra_point_kicking_attempts
     *
     * @return $this
     */
    public function setExtraPointKickingAttempts($extra_point_kicking_attempts)
    {
        $this->container['extra_point_kicking_attempts'] = $extra_point_kicking_attempts;

        return $this;
    }

    /**
     * Gets extra_point_kicking_conversions
     *
     * @return int
     */
    public function getExtraPointKickingConversions()
    {
        return $this->container['extra_point_kicking_conversions'];
    }

    /**
     * Sets extra_point_kicking_conversions
     *
     * @param int $extra_point_kicking_conversions extra_point_kicking_conversions
     *
     * @return $this
     */
    public function setExtraPointKickingConversions($extra_point_kicking_conversions)
    {
        $this->container['extra_point_kicking_conversions'] = $extra_point_kicking_conversions;

        return $this;
    }

    /**
     * Gets extra_points_had_blocked
     *
     * @return int
     */
    public function getExtraPointsHadBlocked()
    {
        return $this->container['extra_points_had_blocked'];
    }

    /**
     * Sets extra_points_had_blocked
     *
     * @param int $extra_points_had_blocked extra_points_had_blocked
     *
     * @return $this
     */
    public function setExtraPointsHadBlocked($extra_points_had_blocked)
    {
        $this->container['extra_points_had_blocked'] = $extra_points_had_blocked;

        return $this;
    }

    /**
     * Gets extra_point_passing_attempts
     *
     * @return int
     */
    public function getExtraPointPassingAttempts()
    {
        return $this->container['extra_point_passing_attempts'];
    }

    /**
     * Sets extra_point_passing_attempts
     *
     * @param int $extra_point_passing_attempts extra_point_passing_attempts
     *
     * @return $this
     */
    public function setExtraPointPassingAttempts($extra_point_passing_attempts)
    {
        $this->container['extra_point_passing_attempts'] = $extra_point_passing_attempts;

        return $this;
    }

    /**
     * Gets extra_point_passing_conversions
     *
     * @return int
     */
    public function getExtraPointPassingConversions()
    {
        return $this->container['extra_point_passing_conversions'];
    }

    /**
     * Sets extra_point_passing_conversions
     *
     * @param int $extra_point_passing_conversions extra_point_passing_conversions
     *
     * @return $this
     */
    public function setExtraPointPassingConversions($extra_point_passing_conversions)
    {
        $this->container['extra_point_passing_conversions'] = $extra_point_passing_conversions;

        return $this;
    }

    /**
     * Gets extra_point_rushing_attempts
     *
     * @return int
     */
    public function getExtraPointRushingAttempts()
    {
        return $this->container['extra_point_rushing_attempts'];
    }

    /**
     * Sets extra_point_rushing_attempts
     *
     * @param int $extra_point_rushing_attempts extra_point_rushing_attempts
     *
     * @return $this
     */
    public function setExtraPointRushingAttempts($extra_point_rushing_attempts)
    {
        $this->container['extra_point_rushing_attempts'] = $extra_point_rushing_attempts;

        return $this;
    }

    /**
     * Gets extra_point_rushing_conversions
     *
     * @return int
     */
    public function getExtraPointRushingConversions()
    {
        return $this->container['extra_point_rushing_conversions'];
    }

    /**
     * Sets extra_point_rushing_conversions
     *
     * @param int $extra_point_rushing_conversions extra_point_rushing_conversions
     *
     * @return $this
     */
    public function setExtraPointRushingConversions($extra_point_rushing_conversions)
    {
        $this->container['extra_point_rushing_conversions'] = $extra_point_rushing_conversions;

        return $this;
    }

    /**
     * Gets field_goal_attempts
     *
     * @return int
     */
    public function getFieldGoalAttempts()
    {
        return $this->container['field_goal_attempts'];
    }

    /**
     * Sets field_goal_attempts
     *
     * @param int $field_goal_attempts field_goal_attempts
     *
     * @return $this
     */
    public function setFieldGoalAttempts($field_goal_attempts)
    {
        $this->container['field_goal_attempts'] = $field_goal_attempts;

        return $this;
    }

    /**
     * Gets field_goals_made
     *
     * @return int
     */
    public function getFieldGoalsMade()
    {
        return $this->container['field_goals_made'];
    }

    /**
     * Sets field_goals_made
     *
     * @param int $field_goals_made field_goals_made
     *
     * @return $this
     */
    public function setFieldGoalsMade($field_goals_made)
    {
        $this->container['field_goals_made'] = $field_goals_made;

        return $this;
    }

    /**
     * Gets field_goals_had_blocked
     *
     * @return int
     */
    public function getFieldGoalsHadBlocked()
    {
        return $this->container['field_goals_had_blocked'];
    }

    /**
     * Sets field_goals_had_blocked
     *
     * @param int $field_goals_had_blocked field_goals_had_blocked
     *
     * @return $this
     */
    public function setFieldGoalsHadBlocked($field_goals_had_blocked)
    {
        $this->container['field_goals_had_blocked'] = $field_goals_had_blocked;

        return $this;
    }

    /**
     * Gets punt_returns
     *
     * @return int
     */
    public function getPuntReturns()
    {
        return $this->container['punt_returns'];
    }

    /**
     * Sets punt_returns
     *
     * @param int $punt_returns punt_returns
     *
     * @return $this
     */
    public function setPuntReturns($punt_returns)
    {
        $this->container['punt_returns'] = $punt_returns;

        return $this;
    }

    /**
     * Gets punt_return_yards
     *
     * @return int
     */
    public function getPuntReturnYards()
    {
        return $this->container['punt_return_yards'];
    }

    /**
     * Sets punt_return_yards
     *
     * @param int $punt_return_yards punt_return_yards
     *
     * @return $this
     */
    public function setPuntReturnYards($punt_return_yards)
    {
        $this->container['punt_return_yards'] = $punt_return_yards;

        return $this;
    }

    /**
     * Gets kick_returns
     *
     * @return int
     */
    public function getKickReturns()
    {
        return $this->container['kick_returns'];
    }

    /**
     * Sets kick_returns
     *
     * @param int $kick_returns kick_returns
     *
     * @return $this
     */
    public function setKickReturns($kick_returns)
    {
        $this->container['kick_returns'] = $kick_returns;

        return $this;
    }

    /**
     * Gets kick_return_yards
     *
     * @return int
     */
    public function getKickReturnYards()
    {
        return $this->container['kick_return_yards'];
    }

    /**
     * Sets kick_return_yards
     *
     * @param int $kick_return_yards kick_return_yards
     *
     * @return $this
     */
    public function setKickReturnYards($kick_return_yards)
    {
        $this->container['kick_return_yards'] = $kick_return_yards;

        return $this;
    }

    /**
     * Gets interception_returns
     *
     * @return int
     */
    public function getInterceptionReturns()
    {
        return $this->container['interception_returns'];
    }

    /**
     * Sets interception_returns
     *
     * @param int $interception_returns interception_returns
     *
     * @return $this
     */
    public function setInterceptionReturns($interception_returns)
    {
        $this->container['interception_returns'] = $interception_returns;

        return $this;
    }

    /**
     * Gets interception_return_yards
     *
     * @return int
     */
    public function getInterceptionReturnYards()
    {
        return $this->container['interception_return_yards'];
    }

    /**
     * Sets interception_return_yards
     *
     * @param int $interception_return_yards interception_return_yards
     *
     * @return $this
     */
    public function setInterceptionReturnYards($interception_return_yards)
    {
        $this->container['interception_return_yards'] = $interception_return_yards;

        return $this;
    }

    /**
     * Gets opponent_kickoffs
     *
     * @return int
     */
    public function getOpponentKickoffs()
    {
        return $this->container['opponent_kickoffs'];
    }

    /**
     * Sets opponent_kickoffs
     *
     * @param int $opponent_kickoffs opponent_kickoffs
     *
     * @return $this
     */
    public function setOpponentKickoffs($opponent_kickoffs)
    {
        $this->container['opponent_kickoffs'] = $opponent_kickoffs;

        return $this;
    }

    /**
     * Gets opponent_kickoffs_in_end_zone
     *
     * @return int
     */
    public function getOpponentKickoffsInEndZone()
    {
        return $this->container['opponent_kickoffs_in_end_zone'];
    }

    /**
     * Sets opponent_kickoffs_in_end_zone
     *
     * @param int $opponent_kickoffs_in_end_zone opponent_kickoffs_in_end_zone
     *
     * @return $this
     */
    public function setOpponentKickoffsInEndZone($opponent_kickoffs_in_end_zone)
    {
        $this->container['opponent_kickoffs_in_end_zone'] = $opponent_kickoffs_in_end_zone;

        return $this;
    }

    /**
     * Gets opponent_kickoff_touchbacks
     *
     * @return int
     */
    public function getOpponentKickoffTouchbacks()
    {
        return $this->container['opponent_kickoff_touchbacks'];
    }

    /**
     * Sets opponent_kickoff_touchbacks
     *
     * @param int $opponent_kickoff_touchbacks opponent_kickoff_touchbacks
     *
     * @return $this
     */
    public function setOpponentKickoffTouchbacks($opponent_kickoff_touchbacks)
    {
        $this->container['opponent_kickoff_touchbacks'] = $opponent_kickoff_touchbacks;

        return $this;
    }

    /**
     * Gets opponent_punts_had_blocked
     *
     * @return int
     */
    public function getOpponentPuntsHadBlocked()
    {
        return $this->container['opponent_punts_had_blocked'];
    }

    /**
     * Sets opponent_punts_had_blocked
     *
     * @param int $opponent_punts_had_blocked opponent_punts_had_blocked
     *
     * @return $this
     */
    public function setOpponentPuntsHadBlocked($opponent_punts_had_blocked)
    {
        $this->container['opponent_punts_had_blocked'] = $opponent_punts_had_blocked;

        return $this;
    }

    /**
     * Gets opponent_punt_net_average
     *
     * @return float
     */
    public function getOpponentPuntNetAverage()
    {
        return $this->container['opponent_punt_net_average'];
    }

    /**
     * Sets opponent_punt_net_average
     *
     * @param float $opponent_punt_net_average opponent_punt_net_average
     *
     * @return $this
     */
    public function setOpponentPuntNetAverage($opponent_punt_net_average)
    {
        $this->container['opponent_punt_net_average'] = $opponent_punt_net_average;

        return $this;
    }

    /**
     * Gets opponent_extra_point_kicking_attempts
     *
     * @return int
     */
    public function getOpponentExtraPointKickingAttempts()
    {
        return $this->container['opponent_extra_point_kicking_attempts'];
    }

    /**
     * Sets opponent_extra_point_kicking_attempts
     *
     * @param int $opponent_extra_point_kicking_attempts opponent_extra_point_kicking_attempts
     *
     * @return $this
     */
    public function setOpponentExtraPointKickingAttempts($opponent_extra_point_kicking_attempts)
    {
        $this->container['opponent_extra_point_kicking_attempts'] = $opponent_extra_point_kicking_attempts;

        return $this;
    }

    /**
     * Gets opponent_extra_point_kicking_conversions
     *
     * @return int
     */
    public function getOpponentExtraPointKickingConversions()
    {
        return $this->container['opponent_extra_point_kicking_conversions'];
    }

    /**
     * Sets opponent_extra_point_kicking_conversions
     *
     * @param int $opponent_extra_point_kicking_conversions opponent_extra_point_kicking_conversions
     *
     * @return $this
     */
    public function setOpponentExtraPointKickingConversions($opponent_extra_point_kicking_conversions)
    {
        $this->container['opponent_extra_point_kicking_conversions'] = $opponent_extra_point_kicking_conversions;

        return $this;
    }

    /**
     * Gets opponent_extra_points_had_blocked
     *
     * @return int
     */
    public function getOpponentExtraPointsHadBlocked()
    {
        return $this->container['opponent_extra_points_had_blocked'];
    }

    /**
     * Sets opponent_extra_points_had_blocked
     *
     * @param int $opponent_extra_points_had_blocked opponent_extra_points_had_blocked
     *
     * @return $this
     */
    public function setOpponentExtraPointsHadBlocked($opponent_extra_points_had_blocked)
    {
        $this->container['opponent_extra_points_had_blocked'] = $opponent_extra_points_had_blocked;

        return $this;
    }

    /**
     * Gets opponent_extra_point_passing_attempts
     *
     * @return int
     */
    public function getOpponentExtraPointPassingAttempts()
    {
        return $this->container['opponent_extra_point_passing_attempts'];
    }

    /**
     * Sets opponent_extra_point_passing_attempts
     *
     * @param int $opponent_extra_point_passing_attempts opponent_extra_point_passing_attempts
     *
     * @return $this
     */
    public function setOpponentExtraPointPassingAttempts($opponent_extra_point_passing_attempts)
    {
        $this->container['opponent_extra_point_passing_attempts'] = $opponent_extra_point_passing_attempts;

        return $this;
    }

    /**
     * Gets opponent_extra_point_passing_conversions
     *
     * @return int
     */
    public function getOpponentExtraPointPassingConversions()
    {
        return $this->container['opponent_extra_point_passing_conversions'];
    }

    /**
     * Sets opponent_extra_point_passing_conversions
     *
     * @param int $opponent_extra_point_passing_conversions opponent_extra_point_passing_conversions
     *
     * @return $this
     */
    public function setOpponentExtraPointPassingConversions($opponent_extra_point_passing_conversions)
    {
        $this->container['opponent_extra_point_passing_conversions'] = $opponent_extra_point_passing_conversions;

        return $this;
    }

    /**
     * Gets opponent_extra_point_rushing_attempts
     *
     * @return int
     */
    public function getOpponentExtraPointRushingAttempts()
    {
        return $this->container['opponent_extra_point_rushing_attempts'];
    }

    /**
     * Sets opponent_extra_point_rushing_attempts
     *
     * @param int $opponent_extra_point_rushing_attempts opponent_extra_point_rushing_attempts
     *
     * @return $this
     */
    public function setOpponentExtraPointRushingAttempts($opponent_extra_point_rushing_attempts)
    {
        $this->container['opponent_extra_point_rushing_attempts'] = $opponent_extra_point_rushing_attempts;

        return $this;
    }

    /**
     * Gets opponent_extra_point_rushing_conversions
     *
     * @return int
     */
    public function getOpponentExtraPointRushingConversions()
    {
        return $this->container['opponent_extra_point_rushing_conversions'];
    }

    /**
     * Sets opponent_extra_point_rushing_conversions
     *
     * @param int $opponent_extra_point_rushing_conversions opponent_extra_point_rushing_conversions
     *
     * @return $this
     */
    public function setOpponentExtraPointRushingConversions($opponent_extra_point_rushing_conversions)
    {
        $this->container['opponent_extra_point_rushing_conversions'] = $opponent_extra_point_rushing_conversions;

        return $this;
    }

    /**
     * Gets opponent_field_goal_attempts
     *
     * @return int
     */
    public function getOpponentFieldGoalAttempts()
    {
        return $this->container['opponent_field_goal_attempts'];
    }

    /**
     * Sets opponent_field_goal_attempts
     *
     * @param int $opponent_field_goal_attempts opponent_field_goal_attempts
     *
     * @return $this
     */
    public function setOpponentFieldGoalAttempts($opponent_field_goal_attempts)
    {
        $this->container['opponent_field_goal_attempts'] = $opponent_field_goal_attempts;

        return $this;
    }

    /**
     * Gets opponent_field_goals_made
     *
     * @return int
     */
    public function getOpponentFieldGoalsMade()
    {
        return $this->container['opponent_field_goals_made'];
    }

    /**
     * Sets opponent_field_goals_made
     *
     * @param int $opponent_field_goals_made opponent_field_goals_made
     *
     * @return $this
     */
    public function setOpponentFieldGoalsMade($opponent_field_goals_made)
    {
        $this->container['opponent_field_goals_made'] = $opponent_field_goals_made;

        return $this;
    }

    /**
     * Gets opponent_field_goals_had_blocked
     *
     * @return int
     */
    public function getOpponentFieldGoalsHadBlocked()
    {
        return $this->container['opponent_field_goals_had_blocked'];
    }

    /**
     * Sets opponent_field_goals_had_blocked
     *
     * @param int $opponent_field_goals_had_blocked opponent_field_goals_had_blocked
     *
     * @return $this
     */
    public function setOpponentFieldGoalsHadBlocked($opponent_field_goals_had_blocked)
    {
        $this->container['opponent_field_goals_had_blocked'] = $opponent_field_goals_had_blocked;

        return $this;
    }

    /**
     * Gets opponent_punt_returns
     *
     * @return int
     */
    public function getOpponentPuntReturns()
    {
        return $this->container['opponent_punt_returns'];
    }

    /**
     * Sets opponent_punt_returns
     *
     * @param int $opponent_punt_returns opponent_punt_returns
     *
     * @return $this
     */
    public function setOpponentPuntReturns($opponent_punt_returns)
    {
        $this->container['opponent_punt_returns'] = $opponent_punt_returns;

        return $this;
    }

    /**
     * Gets opponent_punt_return_yards
     *
     * @return int
     */
    public function getOpponentPuntReturnYards()
    {
        return $this->container['opponent_punt_return_yards'];
    }

    /**
     * Sets opponent_punt_return_yards
     *
     * @param int $opponent_punt_return_yards opponent_punt_return_yards
     *
     * @return $this
     */
    public function setOpponentPuntReturnYards($opponent_punt_return_yards)
    {
        $this->container['opponent_punt_return_yards'] = $opponent_punt_return_yards;

        return $this;
    }

    /**
     * Gets opponent_kick_returns
     *
     * @return int
     */
    public function getOpponentKickReturns()
    {
        return $this->container['opponent_kick_returns'];
    }

    /**
     * Sets opponent_kick_returns
     *
     * @param int $opponent_kick_returns opponent_kick_returns
     *
     * @return $this
     */
    public function setOpponentKickReturns($opponent_kick_returns)
    {
        $this->container['opponent_kick_returns'] = $opponent_kick_returns;

        return $this;
    }

    /**
     * Gets opponent_kick_return_yards
     *
     * @return int
     */
    public function getOpponentKickReturnYards()
    {
        return $this->container['opponent_kick_return_yards'];
    }

    /**
     * Sets opponent_kick_return_yards
     *
     * @param int $opponent_kick_return_yards opponent_kick_return_yards
     *
     * @return $this
     */
    public function setOpponentKickReturnYards($opponent_kick_return_yards)
    {
        $this->container['opponent_kick_return_yards'] = $opponent_kick_return_yards;

        return $this;
    }

    /**
     * Gets opponent_interception_returns
     *
     * @return int
     */
    public function getOpponentInterceptionReturns()
    {
        return $this->container['opponent_interception_returns'];
    }

    /**
     * Sets opponent_interception_returns
     *
     * @param int $opponent_interception_returns opponent_interception_returns
     *
     * @return $this
     */
    public function setOpponentInterceptionReturns($opponent_interception_returns)
    {
        $this->container['opponent_interception_returns'] = $opponent_interception_returns;

        return $this;
    }

    /**
     * Gets opponent_interception_return_yards
     *
     * @return int
     */
    public function getOpponentInterceptionReturnYards()
    {
        return $this->container['opponent_interception_return_yards'];
    }

    /**
     * Sets opponent_interception_return_yards
     *
     * @param int $opponent_interception_return_yards opponent_interception_return_yards
     *
     * @return $this
     */
    public function setOpponentInterceptionReturnYards($opponent_interception_return_yards)
    {
        $this->container['opponent_interception_return_yards'] = $opponent_interception_return_yards;

        return $this;
    }

    /**
     * Gets solo_tackles
     *
     * @return int
     */
    public function getSoloTackles()
    {
        return $this->container['solo_tackles'];
    }

    /**
     * Sets solo_tackles
     *
     * @param int $solo_tackles solo_tackles
     *
     * @return $this
     */
    public function setSoloTackles($solo_tackles)
    {
        $this->container['solo_tackles'] = $solo_tackles;

        return $this;
    }

    /**
     * Gets assisted_tackles
     *
     * @return int
     */
    public function getAssistedTackles()
    {
        return $this->container['assisted_tackles'];
    }

    /**
     * Sets assisted_tackles
     *
     * @param int $assisted_tackles assisted_tackles
     *
     * @return $this
     */
    public function setAssistedTackles($assisted_tackles)
    {
        $this->container['assisted_tackles'] = $assisted_tackles;

        return $this;
    }

    /**
     * Gets sacks
     *
     * @return int
     */
    public function getSacks()
    {
        return $this->container['sacks'];
    }

    /**
     * Sets sacks
     *
     * @param int $sacks sacks
     *
     * @return $this
     */
    public function setSacks($sacks)
    {
        $this->container['sacks'] = $sacks;

        return $this;
    }

    /**
     * Gets sack_yards
     *
     * @return int
     */
    public function getSackYards()
    {
        return $this->container['sack_yards'];
    }

    /**
     * Sets sack_yards
     *
     * @param int $sack_yards sack_yards
     *
     * @return $this
     */
    public function setSackYards($sack_yards)
    {
        $this->container['sack_yards'] = $sack_yards;

        return $this;
    }

    /**
     * Gets passes_defended
     *
     * @return int
     */
    public function getPassesDefended()
    {
        return $this->container['passes_defended'];
    }

    /**
     * Sets passes_defended
     *
     * @param int $passes_defended passes_defended
     *
     * @return $this
     */
    public function setPassesDefended($passes_defended)
    {
        $this->container['passes_defended'] = $passes_defended;

        return $this;
    }

    /**
     * Gets fumbles_forced
     *
     * @return int
     */
    public function getFumblesForced()
    {
        return $this->container['fumbles_forced'];
    }

    /**
     * Sets fumbles_forced
     *
     * @param int $fumbles_forced fumbles_forced
     *
     * @return $this
     */
    public function setFumblesForced($fumbles_forced)
    {
        $this->container['fumbles_forced'] = $fumbles_forced;

        return $this;
    }

    /**
     * Gets fumbles_recovered
     *
     * @return int
     */
    public function getFumblesRecovered()
    {
        return $this->container['fumbles_recovered'];
    }

    /**
     * Sets fumbles_recovered
     *
     * @param int $fumbles_recovered fumbles_recovered
     *
     * @return $this
     */
    public function setFumblesRecovered($fumbles_recovered)
    {
        $this->container['fumbles_recovered'] = $fumbles_recovered;

        return $this;
    }

    /**
     * Gets fumble_return_yards
     *
     * @return int
     */
    public function getFumbleReturnYards()
    {
        return $this->container['fumble_return_yards'];
    }

    /**
     * Sets fumble_return_yards
     *
     * @param int $fumble_return_yards fumble_return_yards
     *
     * @return $this
     */
    public function setFumbleReturnYards($fumble_return_yards)
    {
        $this->container['fumble_return_yards'] = $fumble_return_yards;

        return $this;
    }

    /**
     * Gets fumble_return_touchdowns
     *
     * @return int
     */
    public function getFumbleReturnTouchdowns()
    {
        return $this->container['fumble_return_touchdowns'];
    }

    /**
     * Sets fumble_return_touchdowns
     *
     * @param int $fumble_return_touchdowns fumble_return_touchdowns
     *
     * @return $this
     */
    public function setFumbleReturnTouchdowns($fumble_return_touchdowns)
    {
        $this->container['fumble_return_touchdowns'] = $fumble_return_touchdowns;

        return $this;
    }

    /**
     * Gets interception_return_touchdowns
     *
     * @return int
     */
    public function getInterceptionReturnTouchdowns()
    {
        return $this->container['interception_return_touchdowns'];
    }

    /**
     * Sets interception_return_touchdowns
     *
     * @param int $interception_return_touchdowns interception_return_touchdowns
     *
     * @return $this
     */
    public function setInterceptionReturnTouchdowns($interception_return_touchdowns)
    {
        $this->container['interception_return_touchdowns'] = $interception_return_touchdowns;

        return $this;
    }

    /**
     * Gets blocked_kicks
     *
     * @return int
     */
    public function getBlockedKicks()
    {
        return $this->container['blocked_kicks'];
    }

    /**
     * Sets blocked_kicks
     *
     * @param int $blocked_kicks blocked_kicks
     *
     * @return $this
     */
    public function setBlockedKicks($blocked_kicks)
    {
        $this->container['blocked_kicks'] = $blocked_kicks;

        return $this;
    }

    /**
     * Gets punt_return_touchdowns
     *
     * @return int
     */
    public function getPuntReturnTouchdowns()
    {
        return $this->container['punt_return_touchdowns'];
    }

    /**
     * Sets punt_return_touchdowns
     *
     * @param int $punt_return_touchdowns punt_return_touchdowns
     *
     * @return $this
     */
    public function setPuntReturnTouchdowns($punt_return_touchdowns)
    {
        $this->container['punt_return_touchdowns'] = $punt_return_touchdowns;

        return $this;
    }

    /**
     * Gets punt_return_long
     *
     * @return int
     */
    public function getPuntReturnLong()
    {
        return $this->container['punt_return_long'];
    }

    /**
     * Sets punt_return_long
     *
     * @param int $punt_return_long punt_return_long
     *
     * @return $this
     */
    public function setPuntReturnLong($punt_return_long)
    {
        $this->container['punt_return_long'] = $punt_return_long;

        return $this;
    }

    /**
     * Gets kick_return_touchdowns
     *
     * @return int
     */
    public function getKickReturnTouchdowns()
    {
        return $this->container['kick_return_touchdowns'];
    }

    /**
     * Sets kick_return_touchdowns
     *
     * @param int $kick_return_touchdowns kick_return_touchdowns
     *
     * @return $this
     */
    public function setKickReturnTouchdowns($kick_return_touchdowns)
    {
        $this->container['kick_return_touchdowns'] = $kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets kick_return_long
     *
     * @return int
     */
    public function getKickReturnLong()
    {
        return $this->container['kick_return_long'];
    }

    /**
     * Sets kick_return_long
     *
     * @param int $kick_return_long kick_return_long
     *
     * @return $this
     */
    public function setKickReturnLong($kick_return_long)
    {
        $this->container['kick_return_long'] = $kick_return_long;

        return $this;
    }

    /**
     * Gets blocked_kick_return_yards
     *
     * @return int
     */
    public function getBlockedKickReturnYards()
    {
        return $this->container['blocked_kick_return_yards'];
    }

    /**
     * Sets blocked_kick_return_yards
     *
     * @param int $blocked_kick_return_yards blocked_kick_return_yards
     *
     * @return $this
     */
    public function setBlockedKickReturnYards($blocked_kick_return_yards)
    {
        $this->container['blocked_kick_return_yards'] = $blocked_kick_return_yards;

        return $this;
    }

    /**
     * Gets blocked_kick_return_touchdowns
     *
     * @return int
     */
    public function getBlockedKickReturnTouchdowns()
    {
        return $this->container['blocked_kick_return_touchdowns'];
    }

    /**
     * Sets blocked_kick_return_touchdowns
     *
     * @param int $blocked_kick_return_touchdowns blocked_kick_return_touchdowns
     *
     * @return $this
     */
    public function setBlockedKickReturnTouchdowns($blocked_kick_return_touchdowns)
    {
        $this->container['blocked_kick_return_touchdowns'] = $blocked_kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets field_goal_return_yards
     *
     * @return int
     */
    public function getFieldGoalReturnYards()
    {
        return $this->container['field_goal_return_yards'];
    }

    /**
     * Sets field_goal_return_yards
     *
     * @param int $field_goal_return_yards field_goal_return_yards
     *
     * @return $this
     */
    public function setFieldGoalReturnYards($field_goal_return_yards)
    {
        $this->container['field_goal_return_yards'] = $field_goal_return_yards;

        return $this;
    }

    /**
     * Gets field_goal_return_touchdowns
     *
     * @return int
     */
    public function getFieldGoalReturnTouchdowns()
    {
        return $this->container['field_goal_return_touchdowns'];
    }

    /**
     * Sets field_goal_return_touchdowns
     *
     * @param int $field_goal_return_touchdowns field_goal_return_touchdowns
     *
     * @return $this
     */
    public function setFieldGoalReturnTouchdowns($field_goal_return_touchdowns)
    {
        $this->container['field_goal_return_touchdowns'] = $field_goal_return_touchdowns;

        return $this;
    }

    /**
     * Gets punt_net_yards
     *
     * @return int
     */
    public function getPuntNetYards()
    {
        return $this->container['punt_net_yards'];
    }

    /**
     * Sets punt_net_yards
     *
     * @param int $punt_net_yards punt_net_yards
     *
     * @return $this
     */
    public function setPuntNetYards($punt_net_yards)
    {
        $this->container['punt_net_yards'] = $punt_net_yards;

        return $this;
    }

    /**
     * Gets opponent_solo_tackles
     *
     * @return int
     */
    public function getOpponentSoloTackles()
    {
        return $this->container['opponent_solo_tackles'];
    }

    /**
     * Sets opponent_solo_tackles
     *
     * @param int $opponent_solo_tackles opponent_solo_tackles
     *
     * @return $this
     */
    public function setOpponentSoloTackles($opponent_solo_tackles)
    {
        $this->container['opponent_solo_tackles'] = $opponent_solo_tackles;

        return $this;
    }

    /**
     * Gets opponent_assisted_tackles
     *
     * @return int
     */
    public function getOpponentAssistedTackles()
    {
        return $this->container['opponent_assisted_tackles'];
    }

    /**
     * Sets opponent_assisted_tackles
     *
     * @param int $opponent_assisted_tackles opponent_assisted_tackles
     *
     * @return $this
     */
    public function setOpponentAssistedTackles($opponent_assisted_tackles)
    {
        $this->container['opponent_assisted_tackles'] = $opponent_assisted_tackles;

        return $this;
    }

    /**
     * Gets opponent_sacks
     *
     * @return int
     */
    public function getOpponentSacks()
    {
        return $this->container['opponent_sacks'];
    }

    /**
     * Sets opponent_sacks
     *
     * @param int $opponent_sacks opponent_sacks
     *
     * @return $this
     */
    public function setOpponentSacks($opponent_sacks)
    {
        $this->container['opponent_sacks'] = $opponent_sacks;

        return $this;
    }

    /**
     * Gets opponent_sack_yards
     *
     * @return int
     */
    public function getOpponentSackYards()
    {
        return $this->container['opponent_sack_yards'];
    }

    /**
     * Sets opponent_sack_yards
     *
     * @param int $opponent_sack_yards opponent_sack_yards
     *
     * @return $this
     */
    public function setOpponentSackYards($opponent_sack_yards)
    {
        $this->container['opponent_sack_yards'] = $opponent_sack_yards;

        return $this;
    }

    /**
     * Gets opponent_passes_defended
     *
     * @return int
     */
    public function getOpponentPassesDefended()
    {
        return $this->container['opponent_passes_defended'];
    }

    /**
     * Sets opponent_passes_defended
     *
     * @param int $opponent_passes_defended opponent_passes_defended
     *
     * @return $this
     */
    public function setOpponentPassesDefended($opponent_passes_defended)
    {
        $this->container['opponent_passes_defended'] = $opponent_passes_defended;

        return $this;
    }

    /**
     * Gets opponent_fumbles_forced
     *
     * @return int
     */
    public function getOpponentFumblesForced()
    {
        return $this->container['opponent_fumbles_forced'];
    }

    /**
     * Sets opponent_fumbles_forced
     *
     * @param int $opponent_fumbles_forced opponent_fumbles_forced
     *
     * @return $this
     */
    public function setOpponentFumblesForced($opponent_fumbles_forced)
    {
        $this->container['opponent_fumbles_forced'] = $opponent_fumbles_forced;

        return $this;
    }

    /**
     * Gets opponent_fumbles_recovered
     *
     * @return int
     */
    public function getOpponentFumblesRecovered()
    {
        return $this->container['opponent_fumbles_recovered'];
    }

    /**
     * Sets opponent_fumbles_recovered
     *
     * @param int $opponent_fumbles_recovered opponent_fumbles_recovered
     *
     * @return $this
     */
    public function setOpponentFumblesRecovered($opponent_fumbles_recovered)
    {
        $this->container['opponent_fumbles_recovered'] = $opponent_fumbles_recovered;

        return $this;
    }

    /**
     * Gets opponent_fumble_return_yards
     *
     * @return int
     */
    public function getOpponentFumbleReturnYards()
    {
        return $this->container['opponent_fumble_return_yards'];
    }

    /**
     * Sets opponent_fumble_return_yards
     *
     * @param int $opponent_fumble_return_yards opponent_fumble_return_yards
     *
     * @return $this
     */
    public function setOpponentFumbleReturnYards($opponent_fumble_return_yards)
    {
        $this->container['opponent_fumble_return_yards'] = $opponent_fumble_return_yards;

        return $this;
    }

    /**
     * Gets opponent_fumble_return_touchdowns
     *
     * @return int
     */
    public function getOpponentFumbleReturnTouchdowns()
    {
        return $this->container['opponent_fumble_return_touchdowns'];
    }

    /**
     * Sets opponent_fumble_return_touchdowns
     *
     * @param int $opponent_fumble_return_touchdowns opponent_fumble_return_touchdowns
     *
     * @return $this
     */
    public function setOpponentFumbleReturnTouchdowns($opponent_fumble_return_touchdowns)
    {
        $this->container['opponent_fumble_return_touchdowns'] = $opponent_fumble_return_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_interception_return_touchdowns
     *
     * @return int
     */
    public function getOpponentInterceptionReturnTouchdowns()
    {
        return $this->container['opponent_interception_return_touchdowns'];
    }

    /**
     * Sets opponent_interception_return_touchdowns
     *
     * @param int $opponent_interception_return_touchdowns opponent_interception_return_touchdowns
     *
     * @return $this
     */
    public function setOpponentInterceptionReturnTouchdowns($opponent_interception_return_touchdowns)
    {
        $this->container['opponent_interception_return_touchdowns'] = $opponent_interception_return_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_blocked_kicks
     *
     * @return int
     */
    public function getOpponentBlockedKicks()
    {
        return $this->container['opponent_blocked_kicks'];
    }

    /**
     * Sets opponent_blocked_kicks
     *
     * @param int $opponent_blocked_kicks opponent_blocked_kicks
     *
     * @return $this
     */
    public function setOpponentBlockedKicks($opponent_blocked_kicks)
    {
        $this->container['opponent_blocked_kicks'] = $opponent_blocked_kicks;

        return $this;
    }

    /**
     * Gets opponent_punt_return_touchdowns
     *
     * @return int
     */
    public function getOpponentPuntReturnTouchdowns()
    {
        return $this->container['opponent_punt_return_touchdowns'];
    }

    /**
     * Sets opponent_punt_return_touchdowns
     *
     * @param int $opponent_punt_return_touchdowns opponent_punt_return_touchdowns
     *
     * @return $this
     */
    public function setOpponentPuntReturnTouchdowns($opponent_punt_return_touchdowns)
    {
        $this->container['opponent_punt_return_touchdowns'] = $opponent_punt_return_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_punt_return_long
     *
     * @return int
     */
    public function getOpponentPuntReturnLong()
    {
        return $this->container['opponent_punt_return_long'];
    }

    /**
     * Sets opponent_punt_return_long
     *
     * @param int $opponent_punt_return_long opponent_punt_return_long
     *
     * @return $this
     */
    public function setOpponentPuntReturnLong($opponent_punt_return_long)
    {
        $this->container['opponent_punt_return_long'] = $opponent_punt_return_long;

        return $this;
    }

    /**
     * Gets opponent_kick_return_touchdowns
     *
     * @return int
     */
    public function getOpponentKickReturnTouchdowns()
    {
        return $this->container['opponent_kick_return_touchdowns'];
    }

    /**
     * Sets opponent_kick_return_touchdowns
     *
     * @param int $opponent_kick_return_touchdowns opponent_kick_return_touchdowns
     *
     * @return $this
     */
    public function setOpponentKickReturnTouchdowns($opponent_kick_return_touchdowns)
    {
        $this->container['opponent_kick_return_touchdowns'] = $opponent_kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_kick_return_long
     *
     * @return int
     */
    public function getOpponentKickReturnLong()
    {
        return $this->container['opponent_kick_return_long'];
    }

    /**
     * Sets opponent_kick_return_long
     *
     * @param int $opponent_kick_return_long opponent_kick_return_long
     *
     * @return $this
     */
    public function setOpponentKickReturnLong($opponent_kick_return_long)
    {
        $this->container['opponent_kick_return_long'] = $opponent_kick_return_long;

        return $this;
    }

    /**
     * Gets opponent_blocked_kick_return_yards
     *
     * @return int
     */
    public function getOpponentBlockedKickReturnYards()
    {
        return $this->container['opponent_blocked_kick_return_yards'];
    }

    /**
     * Sets opponent_blocked_kick_return_yards
     *
     * @param int $opponent_blocked_kick_return_yards opponent_blocked_kick_return_yards
     *
     * @return $this
     */
    public function setOpponentBlockedKickReturnYards($opponent_blocked_kick_return_yards)
    {
        $this->container['opponent_blocked_kick_return_yards'] = $opponent_blocked_kick_return_yards;

        return $this;
    }

    /**
     * Gets opponent_blocked_kick_return_touchdowns
     *
     * @return int
     */
    public function getOpponentBlockedKickReturnTouchdowns()
    {
        return $this->container['opponent_blocked_kick_return_touchdowns'];
    }

    /**
     * Sets opponent_blocked_kick_return_touchdowns
     *
     * @param int $opponent_blocked_kick_return_touchdowns opponent_blocked_kick_return_touchdowns
     *
     * @return $this
     */
    public function setOpponentBlockedKickReturnTouchdowns($opponent_blocked_kick_return_touchdowns)
    {
        $this->container['opponent_blocked_kick_return_touchdowns'] = $opponent_blocked_kick_return_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_field_goal_return_yards
     *
     * @return int
     */
    public function getOpponentFieldGoalReturnYards()
    {
        return $this->container['opponent_field_goal_return_yards'];
    }

    /**
     * Sets opponent_field_goal_return_yards
     *
     * @param int $opponent_field_goal_return_yards opponent_field_goal_return_yards
     *
     * @return $this
     */
    public function setOpponentFieldGoalReturnYards($opponent_field_goal_return_yards)
    {
        $this->container['opponent_field_goal_return_yards'] = $opponent_field_goal_return_yards;

        return $this;
    }

    /**
     * Gets opponent_field_goal_return_touchdowns
     *
     * @return int
     */
    public function getOpponentFieldGoalReturnTouchdowns()
    {
        return $this->container['opponent_field_goal_return_touchdowns'];
    }

    /**
     * Sets opponent_field_goal_return_touchdowns
     *
     * @param int $opponent_field_goal_return_touchdowns opponent_field_goal_return_touchdowns
     *
     * @return $this
     */
    public function setOpponentFieldGoalReturnTouchdowns($opponent_field_goal_return_touchdowns)
    {
        $this->container['opponent_field_goal_return_touchdowns'] = $opponent_field_goal_return_touchdowns;

        return $this;
    }

    /**
     * Gets opponent_punt_net_yards
     *
     * @return int
     */
    public function getOpponentPuntNetYards()
    {
        return $this->container['opponent_punt_net_yards'];
    }

    /**
     * Sets opponent_punt_net_yards
     *
     * @param int $opponent_punt_net_yards opponent_punt_net_yards
     *
     * @return $this
     */
    public function setOpponentPuntNetYards($opponent_punt_net_yards)
    {
        $this->container['opponent_punt_net_yards'] = $opponent_punt_net_yards;

        return $this;
    }

    /**
     * Gets is_game_over
     *
     * @return bool
     */
    public function getIsGameOver()
    {
        return $this->container['is_game_over'];
    }

    /**
     * Sets is_game_over
     *
     * @param bool $is_game_over is_game_over
     *
     * @return $this
     */
    public function setIsGameOver($is_game_over)
    {
        $this->container['is_game_over'] = $is_game_over;

        return $this;
    }

    /**
     * Gets team_name
     *
     * @return string
     */
    public function getTeamName()
    {
        return $this->container['team_name'];
    }

    /**
     * Sets team_name
     *
     * @param string $team_name team_name
     *
     * @return $this
     */
    public function setTeamName($team_name)
    {
        $this->container['team_name'] = $team_name;

        return $this;
    }

    /**
     * Gets day_of_week
     *
     * @return string
     */
    public function getDayOfWeek()
    {
        return $this->container['day_of_week'];
    }

    /**
     * Sets day_of_week
     *
     * @param string $day_of_week day_of_week
     *
     * @return $this
     */
    public function setDayOfWeek($day_of_week)
    {
        $this->container['day_of_week'] = $day_of_week;

        return $this;
    }

    /**
     * Gets passing_dropbacks
     *
     * @return int
     */
    public function getPassingDropbacks()
    {
        return $this->container['passing_dropbacks'];
    }

    /**
     * Sets passing_dropbacks
     *
     * @param int $passing_dropbacks passing_dropbacks
     *
     * @return $this
     */
    public function setPassingDropbacks($passing_dropbacks)
    {
        $this->container['passing_dropbacks'] = $passing_dropbacks;

        return $this;
    }

    /**
     * Gets opponent_passing_dropbacks
     *
     * @return int
     */
    public function getOpponentPassingDropbacks()
    {
        return $this->container['opponent_passing_dropbacks'];
    }

    /**
     * Sets opponent_passing_dropbacks
     *
     * @param int $opponent_passing_dropbacks opponent_passing_dropbacks
     *
     * @return $this
     */
    public function setOpponentPassingDropbacks($opponent_passing_dropbacks)
    {
        $this->container['opponent_passing_dropbacks'] = $opponent_passing_dropbacks;

        return $this;
    }

    /**
     * Gets team_game_id
     *
     * @return int
     */
    public function getTeamGameId()
    {
        return $this->container['team_game_id'];
    }

    /**
     * Sets team_game_id
     *
     * @param int $team_game_id team_game_id
     *
     * @return $this
     */
    public function setTeamGameId($team_game_id)
    {
        $this->container['team_game_id'] = $team_game_id;

        return $this;
    }

    /**
     * Gets point_differential
     *
     * @return int
     */
    public function getPointDifferential()
    {
        return $this->container['point_differential'];
    }

    /**
     * Sets point_differential
     *
     * @param int $point_differential point_differential
     *
     * @return $this
     */
    public function setPointDifferential($point_differential)
    {
        $this->container['point_differential'] = $point_differential;

        return $this;
    }

    /**
     * Gets passing_interception_percentage
     *
     * @return float
     */
    public function getPassingInterceptionPercentage()
    {
        return $this->container['passing_interception_percentage'];
    }

    /**
     * Sets passing_interception_percentage
     *
     * @param float $passing_interception_percentage passing_interception_percentage
     *
     * @return $this
     */
    public function setPassingInterceptionPercentage($passing_interception_percentage)
    {
        $this->container['passing_interception_percentage'] = $passing_interception_percentage;

        return $this;
    }

    /**
     * Gets punt_return_average
     *
     * @return float
     */
    public function getPuntReturnAverage()
    {
        return $this->container['punt_return_average'];
    }

    /**
     * Sets punt_return_average
     *
     * @param float $punt_return_average punt_return_average
     *
     * @return $this
     */
    public function setPuntReturnAverage($punt_return_average)
    {
        $this->container['punt_return_average'] = $punt_return_average;

        return $this;
    }

    /**
     * Gets kick_return_average
     *
     * @return float
     */
    public function getKickReturnAverage()
    {
        return $this->container['kick_return_average'];
    }

    /**
     * Sets kick_return_average
     *
     * @param float $kick_return_average kick_return_average
     *
     * @return $this
     */
    public function setKickReturnAverage($kick_return_average)
    {
        $this->container['kick_return_average'] = $kick_return_average;

        return $this;
    }

    /**
     * Gets extra_point_percentage
     *
     * @return float
     */
    public function getExtraPointPercentage()
    {
        return $this->container['extra_point_percentage'];
    }

    /**
     * Sets extra_point_percentage
     *
     * @param float $extra_point_percentage extra_point_percentage
     *
     * @return $this
     */
    public function setExtraPointPercentage($extra_point_percentage)
    {
        $this->container['extra_point_percentage'] = $extra_point_percentage;

        return $this;
    }

    /**
     * Gets field_goal_percentage
     *
     * @return float
     */
    public function getFieldGoalPercentage()
    {
        return $this->container['field_goal_percentage'];
    }

    /**
     * Sets field_goal_percentage
     *
     * @param float $field_goal_percentage field_goal_percentage
     *
     * @return $this
     */
    public function setFieldGoalPercentage($field_goal_percentage)
    {
        $this->container['field_goal_percentage'] = $field_goal_percentage;

        return $this;
    }

    /**
     * Gets opponent_passing_interception_percentage
     *
     * @return float
     */
    public function getOpponentPassingInterceptionPercentage()
    {
        return $this->container['opponent_passing_interception_percentage'];
    }

    /**
     * Sets opponent_passing_interception_percentage
     *
     * @param float $opponent_passing_interception_percentage opponent_passing_interception_percentage
     *
     * @return $this
     */
    public function setOpponentPassingInterceptionPercentage($opponent_passing_interception_percentage)
    {
        $this->container['opponent_passing_interception_percentage'] = $opponent_passing_interception_percentage;

        return $this;
    }

    /**
     * Gets opponent_punt_return_average
     *
     * @return float
     */
    public function getOpponentPuntReturnAverage()
    {
        return $this->container['opponent_punt_return_average'];
    }

    /**
     * Sets opponent_punt_return_average
     *
     * @param float $opponent_punt_return_average opponent_punt_return_average
     *
     * @return $this
     */
    public function setOpponentPuntReturnAverage($opponent_punt_return_average)
    {
        $this->container['opponent_punt_return_average'] = $opponent_punt_return_average;

        return $this;
    }

    /**
     * Gets opponent_kick_return_average
     *
     * @return float
     */
    public function getOpponentKickReturnAverage()
    {
        return $this->container['opponent_kick_return_average'];
    }

    /**
     * Sets opponent_kick_return_average
     *
     * @param float $opponent_kick_return_average opponent_kick_return_average
     *
     * @return $this
     */
    public function setOpponentKickReturnAverage($opponent_kick_return_average)
    {
        $this->container['opponent_kick_return_average'] = $opponent_kick_return_average;

        return $this;
    }

    /**
     * Gets opponent_extra_point_percentage
     *
     * @return float
     */
    public function getOpponentExtraPointPercentage()
    {
        return $this->container['opponent_extra_point_percentage'];
    }

    /**
     * Sets opponent_extra_point_percentage
     *
     * @param float $opponent_extra_point_percentage opponent_extra_point_percentage
     *
     * @return $this
     */
    public function setOpponentExtraPointPercentage($opponent_extra_point_percentage)
    {
        $this->container['opponent_extra_point_percentage'] = $opponent_extra_point_percentage;

        return $this;
    }

    /**
     * Gets opponent_field_goal_percentage
     *
     * @return float
     */
    public function getOpponentFieldGoalPercentage()
    {
        return $this->container['opponent_field_goal_percentage'];
    }

    /**
     * Sets opponent_field_goal_percentage
     *
     * @param float $opponent_field_goal_percentage opponent_field_goal_percentage
     *
     * @return $this
     */
    public function setOpponentFieldGoalPercentage($opponent_field_goal_percentage)
    {
        $this->container['opponent_field_goal_percentage'] = $opponent_field_goal_percentage;

        return $this;
    }

    /**
     * Gets penalty_yard_differential
     *
     * @return int
     */
    public function getPenaltyYardDifferential()
    {
        return $this->container['penalty_yard_differential'];
    }

    /**
     * Sets penalty_yard_differential
     *
     * @param int $penalty_yard_differential penalty_yard_differential
     *
     * @return $this
     */
    public function setPenaltyYardDifferential($penalty_yard_differential)
    {
        $this->container['penalty_yard_differential'] = $penalty_yard_differential;

        return $this;
    }

    /**
     * Gets punt_return_yard_differential
     *
     * @return int
     */
    public function getPuntReturnYardDifferential()
    {
        return $this->container['punt_return_yard_differential'];
    }

    /**
     * Sets punt_return_yard_differential
     *
     * @param int $punt_return_yard_differential punt_return_yard_differential
     *
     * @return $this
     */
    public function setPuntReturnYardDifferential($punt_return_yard_differential)
    {
        $this->container['punt_return_yard_differential'] = $punt_return_yard_differential;

        return $this;
    }

    /**
     * Gets kick_return_yard_differential
     *
     * @return int
     */
    public function getKickReturnYardDifferential()
    {
        return $this->container['kick_return_yard_differential'];
    }

    /**
     * Sets kick_return_yard_differential
     *
     * @param int $kick_return_yard_differential kick_return_yard_differential
     *
     * @return $this
     */
    public function setKickReturnYardDifferential($kick_return_yard_differential)
    {
        $this->container['kick_return_yard_differential'] = $kick_return_yard_differential;

        return $this;
    }

    /**
     * Gets two_point_conversion_returns
     *
     * @return int
     */
    public function getTwoPointConversionReturns()
    {
        return $this->container['two_point_conversion_returns'];
    }

    /**
     * Sets two_point_conversion_returns
     *
     * @param int $two_point_conversion_returns two_point_conversion_returns
     *
     * @return $this
     */
    public function setTwoPointConversionReturns($two_point_conversion_returns)
    {
        $this->container['two_point_conversion_returns'] = $two_point_conversion_returns;

        return $this;
    }

    /**
     * Gets opponent_two_point_conversion_returns
     *
     * @return int
     */
    public function getOpponentTwoPointConversionReturns()
    {
        return $this->container['opponent_two_point_conversion_returns'];
    }

    /**
     * Sets opponent_two_point_conversion_returns
     *
     * @param int $opponent_two_point_conversion_returns opponent_two_point_conversion_returns
     *
     * @return $this
     */
    public function setOpponentTwoPointConversionReturns($opponent_two_point_conversion_returns)
    {
        $this->container['opponent_two_point_conversion_returns'] = $opponent_two_point_conversion_returns;

        return $this;
    }

    /**
     * Gets team_id
     *
     * @return int
     */
    public function getTeamId()
    {
        return $this->container['team_id'];
    }

    /**
     * Sets team_id
     *
     * @param int $team_id team_id
     *
     * @return $this
     */
    public function setTeamId($team_id)
    {
        $this->container['team_id'] = $team_id;

        return $this;
    }

    /**
     * Gets opponent_id
     *
     * @return int
     */
    public function getOpponentId()
    {
        return $this->container['opponent_id'];
    }

    /**
     * Sets opponent_id
     *
     * @param int $opponent_id opponent_id
     *
     * @return $this
     */
    public function setOpponentId($opponent_id)
    {
        $this->container['opponent_id'] = $opponent_id;

        return $this;
    }

    /**
     * Gets day
     *
     * @return string
     */
    public function getDay()
    {
        return $this->container['day'];
    }

    /**
     * Sets day
     *
     * @param string $day day
     *
     * @return $this
     */
    public function setDay($day)
    {
        $this->container['day'] = $day;

        return $this;
    }

    /**
     * Gets date_time
     *
     * @return string
     */
    public function getDateTime()
    {
        return $this->container['date_time'];
    }

    /**
     * Sets date_time
     *
     * @param string $date_time date_time
     *
     * @return $this
     */
    public function setDateTime($date_time)
    {
        $this->container['date_time'] = $date_time;

        return $this;
    }

    /**
     * Gets global_game_id
     *
     * @return int
     */
    public function getGlobalGameId()
    {
        return $this->container['global_game_id'];
    }

    /**
     * Sets global_game_id
     *
     * @param int $global_game_id global_game_id
     *
     * @return $this
     */
    public function setGlobalGameId($global_game_id)
    {
        $this->container['global_game_id'] = $global_game_id;

        return $this;
    }

    /**
     * Gets global_team_id
     *
     * @return int
     */
    public function getGlobalTeamId()
    {
        return $this->container['global_team_id'];
    }

    /**
     * Sets global_team_id
     *
     * @param int $global_team_id global_team_id
     *
     * @return $this
     */
    public function setGlobalTeamId($global_team_id)
    {
        $this->container['global_team_id'] = $global_team_id;

        return $this;
    }

    /**
     * Gets global_opponent_id
     *
     * @return int
     */
    public function getGlobalOpponentId()
    {
        return $this->container['global_opponent_id'];
    }

    /**
     * Sets global_opponent_id
     *
     * @param int $global_opponent_id global_opponent_id
     *
     * @return $this
     */
    public function setGlobalOpponentId($global_opponent_id)
    {
        $this->container['global_opponent_id'] = $global_opponent_id;

        return $this;
    }

    /**
     * Gets score_id
     *
     * @return int
     */
    public function getScoreId()
    {
        return $this->container['score_id'];
    }

    /**
     * Sets score_id
     *
     * @param int $score_id score_id
     *
     * @return $this
     */
    public function setScoreId($score_id)
    {
        $this->container['score_id'] = $score_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param  integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param  integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param  integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

